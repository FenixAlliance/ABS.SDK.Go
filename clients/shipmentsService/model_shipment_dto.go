/*
ShipmentsService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ShipmentDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShipmentDto{}

// ShipmentDto struct for ShipmentDto
type ShipmentDto struct {
	Id NullableString `json:"id,omitempty"`
	TrackingCode NullableString `json:"trackingCode,omitempty"`
	IsInternational *bool `json:"isInternational,omitempty"`
	ShipmentTimestamp *time.Time `json:"shipmentTimestamp,omitempty"`
	DeliveryTimestamp *time.Time `json:"deliveryTimestamp,omitempty"`
	ExpectedShippingDate *time.Time `json:"expectedShippingDate,omitempty"`
	ExpectedDeliveryDate *time.Time `json:"expectedDeliveryDate,omitempty"`
}

// NewShipmentDto instantiates a new ShipmentDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShipmentDto() *ShipmentDto {
	this := ShipmentDto{}
	return &this
}

// NewShipmentDtoWithDefaults instantiates a new ShipmentDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShipmentDtoWithDefaults() *ShipmentDto {
	this := ShipmentDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShipmentDto) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShipmentDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ShipmentDto) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *ShipmentDto) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *ShipmentDto) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ShipmentDto) UnsetId() {
	o.Id.Unset()
}

// GetTrackingCode returns the TrackingCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShipmentDto) GetTrackingCode() string {
	if o == nil || IsNil(o.TrackingCode.Get()) {
		var ret string
		return ret
	}
	return *o.TrackingCode.Get()
}

// GetTrackingCodeOk returns a tuple with the TrackingCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShipmentDto) GetTrackingCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrackingCode.Get(), o.TrackingCode.IsSet()
}

// HasTrackingCode returns a boolean if a field has been set.
func (o *ShipmentDto) HasTrackingCode() bool {
	if o != nil && o.TrackingCode.IsSet() {
		return true
	}

	return false
}

// SetTrackingCode gets a reference to the given NullableString and assigns it to the TrackingCode field.
func (o *ShipmentDto) SetTrackingCode(v string) {
	o.TrackingCode.Set(&v)
}
// SetTrackingCodeNil sets the value for TrackingCode to be an explicit nil
func (o *ShipmentDto) SetTrackingCodeNil() {
	o.TrackingCode.Set(nil)
}

// UnsetTrackingCode ensures that no value is present for TrackingCode, not even an explicit nil
func (o *ShipmentDto) UnsetTrackingCode() {
	o.TrackingCode.Unset()
}

// GetIsInternational returns the IsInternational field value if set, zero value otherwise.
func (o *ShipmentDto) GetIsInternational() bool {
	if o == nil || IsNil(o.IsInternational) {
		var ret bool
		return ret
	}
	return *o.IsInternational
}

// GetIsInternationalOk returns a tuple with the IsInternational field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDto) GetIsInternationalOk() (*bool, bool) {
	if o == nil || IsNil(o.IsInternational) {
		return nil, false
	}
	return o.IsInternational, true
}

// HasIsInternational returns a boolean if a field has been set.
func (o *ShipmentDto) HasIsInternational() bool {
	if o != nil && !IsNil(o.IsInternational) {
		return true
	}

	return false
}

// SetIsInternational gets a reference to the given bool and assigns it to the IsInternational field.
func (o *ShipmentDto) SetIsInternational(v bool) {
	o.IsInternational = &v
}

// GetShipmentTimestamp returns the ShipmentTimestamp field value if set, zero value otherwise.
func (o *ShipmentDto) GetShipmentTimestamp() time.Time {
	if o == nil || IsNil(o.ShipmentTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.ShipmentTimestamp
}

// GetShipmentTimestampOk returns a tuple with the ShipmentTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDto) GetShipmentTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ShipmentTimestamp) {
		return nil, false
	}
	return o.ShipmentTimestamp, true
}

// HasShipmentTimestamp returns a boolean if a field has been set.
func (o *ShipmentDto) HasShipmentTimestamp() bool {
	if o != nil && !IsNil(o.ShipmentTimestamp) {
		return true
	}

	return false
}

// SetShipmentTimestamp gets a reference to the given time.Time and assigns it to the ShipmentTimestamp field.
func (o *ShipmentDto) SetShipmentTimestamp(v time.Time) {
	o.ShipmentTimestamp = &v
}

// GetDeliveryTimestamp returns the DeliveryTimestamp field value if set, zero value otherwise.
func (o *ShipmentDto) GetDeliveryTimestamp() time.Time {
	if o == nil || IsNil(o.DeliveryTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.DeliveryTimestamp
}

// GetDeliveryTimestampOk returns a tuple with the DeliveryTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDto) GetDeliveryTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeliveryTimestamp) {
		return nil, false
	}
	return o.DeliveryTimestamp, true
}

// HasDeliveryTimestamp returns a boolean if a field has been set.
func (o *ShipmentDto) HasDeliveryTimestamp() bool {
	if o != nil && !IsNil(o.DeliveryTimestamp) {
		return true
	}

	return false
}

// SetDeliveryTimestamp gets a reference to the given time.Time and assigns it to the DeliveryTimestamp field.
func (o *ShipmentDto) SetDeliveryTimestamp(v time.Time) {
	o.DeliveryTimestamp = &v
}

// GetExpectedShippingDate returns the ExpectedShippingDate field value if set, zero value otherwise.
func (o *ShipmentDto) GetExpectedShippingDate() time.Time {
	if o == nil || IsNil(o.ExpectedShippingDate) {
		var ret time.Time
		return ret
	}
	return *o.ExpectedShippingDate
}

// GetExpectedShippingDateOk returns a tuple with the ExpectedShippingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDto) GetExpectedShippingDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpectedShippingDate) {
		return nil, false
	}
	return o.ExpectedShippingDate, true
}

// HasExpectedShippingDate returns a boolean if a field has been set.
func (o *ShipmentDto) HasExpectedShippingDate() bool {
	if o != nil && !IsNil(o.ExpectedShippingDate) {
		return true
	}

	return false
}

// SetExpectedShippingDate gets a reference to the given time.Time and assigns it to the ExpectedShippingDate field.
func (o *ShipmentDto) SetExpectedShippingDate(v time.Time) {
	o.ExpectedShippingDate = &v
}

// GetExpectedDeliveryDate returns the ExpectedDeliveryDate field value if set, zero value otherwise.
func (o *ShipmentDto) GetExpectedDeliveryDate() time.Time {
	if o == nil || IsNil(o.ExpectedDeliveryDate) {
		var ret time.Time
		return ret
	}
	return *o.ExpectedDeliveryDate
}

// GetExpectedDeliveryDateOk returns a tuple with the ExpectedDeliveryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDto) GetExpectedDeliveryDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpectedDeliveryDate) {
		return nil, false
	}
	return o.ExpectedDeliveryDate, true
}

// HasExpectedDeliveryDate returns a boolean if a field has been set.
func (o *ShipmentDto) HasExpectedDeliveryDate() bool {
	if o != nil && !IsNil(o.ExpectedDeliveryDate) {
		return true
	}

	return false
}

// SetExpectedDeliveryDate gets a reference to the given time.Time and assigns it to the ExpectedDeliveryDate field.
func (o *ShipmentDto) SetExpectedDeliveryDate(v time.Time) {
	o.ExpectedDeliveryDate = &v
}

func (o ShipmentDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShipmentDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.TrackingCode.IsSet() {
		toSerialize["trackingCode"] = o.TrackingCode.Get()
	}
	if !IsNil(o.IsInternational) {
		toSerialize["isInternational"] = o.IsInternational
	}
	if !IsNil(o.ShipmentTimestamp) {
		toSerialize["shipmentTimestamp"] = o.ShipmentTimestamp
	}
	if !IsNil(o.DeliveryTimestamp) {
		toSerialize["deliveryTimestamp"] = o.DeliveryTimestamp
	}
	if !IsNil(o.ExpectedShippingDate) {
		toSerialize["expectedShippingDate"] = o.ExpectedShippingDate
	}
	if !IsNil(o.ExpectedDeliveryDate) {
		toSerialize["expectedDeliveryDate"] = o.ExpectedDeliveryDate
	}
	return toSerialize, nil
}

type NullableShipmentDto struct {
	value *ShipmentDto
	isSet bool
}

func (v NullableShipmentDto) Get() *ShipmentDto {
	return v.value
}

func (v *NullableShipmentDto) Set(val *ShipmentDto) {
	v.value = val
	v.isSet = true
}

func (v NullableShipmentDto) IsSet() bool {
	return v.isSet
}

func (v *NullableShipmentDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipmentDto(val *ShipmentDto) *NullableShipmentDto {
	return &NullableShipmentDto{value: val, isSet: true}
}

func (v NullableShipmentDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipmentDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


