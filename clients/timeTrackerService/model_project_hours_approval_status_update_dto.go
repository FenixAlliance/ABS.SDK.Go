/*
TimeTrackerService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProjectHoursApprovalStatusUpdateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectHoursApprovalStatusUpdateDto{}

// ProjectHoursApprovalStatusUpdateDto struct for ProjectHoursApprovalStatusUpdateDto
type ProjectHoursApprovalStatusUpdateDto struct {
	ApprovalStatus *int32 `json:"approvalStatus,omitempty"`
	Comments NullableString `json:"comments,omitempty"`
}

// NewProjectHoursApprovalStatusUpdateDto instantiates a new ProjectHoursApprovalStatusUpdateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectHoursApprovalStatusUpdateDto() *ProjectHoursApprovalStatusUpdateDto {
	this := ProjectHoursApprovalStatusUpdateDto{}
	return &this
}

// NewProjectHoursApprovalStatusUpdateDtoWithDefaults instantiates a new ProjectHoursApprovalStatusUpdateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectHoursApprovalStatusUpdateDtoWithDefaults() *ProjectHoursApprovalStatusUpdateDto {
	this := ProjectHoursApprovalStatusUpdateDto{}
	return &this
}

// GetApprovalStatus returns the ApprovalStatus field value if set, zero value otherwise.
func (o *ProjectHoursApprovalStatusUpdateDto) GetApprovalStatus() int32 {
	if o == nil || IsNil(o.ApprovalStatus) {
		var ret int32
		return ret
	}
	return *o.ApprovalStatus
}

// GetApprovalStatusOk returns a tuple with the ApprovalStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectHoursApprovalStatusUpdateDto) GetApprovalStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.ApprovalStatus) {
		return nil, false
	}
	return o.ApprovalStatus, true
}

// HasApprovalStatus returns a boolean if a field has been set.
func (o *ProjectHoursApprovalStatusUpdateDto) HasApprovalStatus() bool {
	if o != nil && !IsNil(o.ApprovalStatus) {
		return true
	}

	return false
}

// SetApprovalStatus gets a reference to the given int32 and assigns it to the ApprovalStatus field.
func (o *ProjectHoursApprovalStatusUpdateDto) SetApprovalStatus(v int32) {
	o.ApprovalStatus = &v
}

// GetComments returns the Comments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectHoursApprovalStatusUpdateDto) GetComments() string {
	if o == nil || IsNil(o.Comments.Get()) {
		var ret string
		return ret
	}
	return *o.Comments.Get()
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectHoursApprovalStatusUpdateDto) GetCommentsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comments.Get(), o.Comments.IsSet()
}

// HasComments returns a boolean if a field has been set.
func (o *ProjectHoursApprovalStatusUpdateDto) HasComments() bool {
	if o != nil && o.Comments.IsSet() {
		return true
	}

	return false
}

// SetComments gets a reference to the given NullableString and assigns it to the Comments field.
func (o *ProjectHoursApprovalStatusUpdateDto) SetComments(v string) {
	o.Comments.Set(&v)
}
// SetCommentsNil sets the value for Comments to be an explicit nil
func (o *ProjectHoursApprovalStatusUpdateDto) SetCommentsNil() {
	o.Comments.Set(nil)
}

// UnsetComments ensures that no value is present for Comments, not even an explicit nil
func (o *ProjectHoursApprovalStatusUpdateDto) UnsetComments() {
	o.Comments.Unset()
}

func (o ProjectHoursApprovalStatusUpdateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectHoursApprovalStatusUpdateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApprovalStatus) {
		toSerialize["approvalStatus"] = o.ApprovalStatus
	}
	if o.Comments.IsSet() {
		toSerialize["comments"] = o.Comments.Get()
	}
	return toSerialize, nil
}

type NullableProjectHoursApprovalStatusUpdateDto struct {
	value *ProjectHoursApprovalStatusUpdateDto
	isSet bool
}

func (v NullableProjectHoursApprovalStatusUpdateDto) Get() *ProjectHoursApprovalStatusUpdateDto {
	return v.value
}

func (v *NullableProjectHoursApprovalStatusUpdateDto) Set(val *ProjectHoursApprovalStatusUpdateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectHoursApprovalStatusUpdateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectHoursApprovalStatusUpdateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectHoursApprovalStatusUpdateDto(val *ProjectHoursApprovalStatusUpdateDto) *NullableProjectHoursApprovalStatusUpdateDto {
	return &NullableProjectHoursApprovalStatusUpdateDto{value: val, isSet: true}
}

func (v NullableProjectHoursApprovalStatusUpdateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectHoursApprovalStatusUpdateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


