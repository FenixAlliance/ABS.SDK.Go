/*
TimeTrackerService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ProjectTimeLogUpdateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectTimeLogUpdateDto{}

// ProjectTimeLogUpdateDto struct for ProjectTimeLogUpdateDto
type ProjectTimeLogUpdateDto struct {
	LogDate *time.Time `json:"logDate,omitempty"`
	TimeSpan *string `json:"timeSpan,omitempty"`
	Comments NullableString `json:"comments,omitempty"`
	ProjectTaskID NullableString `json:"projectTaskID,omitempty"`
	ProjectPeriodID NullableString `json:"projectPeriodID,omitempty"`
	ProjectTimeLogRecordType *int32 `json:"projectTimeLogRecordType,omitempty"`
}

// NewProjectTimeLogUpdateDto instantiates a new ProjectTimeLogUpdateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectTimeLogUpdateDto() *ProjectTimeLogUpdateDto {
	this := ProjectTimeLogUpdateDto{}
	return &this
}

// NewProjectTimeLogUpdateDtoWithDefaults instantiates a new ProjectTimeLogUpdateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectTimeLogUpdateDtoWithDefaults() *ProjectTimeLogUpdateDto {
	this := ProjectTimeLogUpdateDto{}
	return &this
}

// GetLogDate returns the LogDate field value if set, zero value otherwise.
func (o *ProjectTimeLogUpdateDto) GetLogDate() time.Time {
	if o == nil || IsNil(o.LogDate) {
		var ret time.Time
		return ret
	}
	return *o.LogDate
}

// GetLogDateOk returns a tuple with the LogDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTimeLogUpdateDto) GetLogDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LogDate) {
		return nil, false
	}
	return o.LogDate, true
}

// HasLogDate returns a boolean if a field has been set.
func (o *ProjectTimeLogUpdateDto) HasLogDate() bool {
	if o != nil && !IsNil(o.LogDate) {
		return true
	}

	return false
}

// SetLogDate gets a reference to the given time.Time and assigns it to the LogDate field.
func (o *ProjectTimeLogUpdateDto) SetLogDate(v time.Time) {
	o.LogDate = &v
}

// GetTimeSpan returns the TimeSpan field value if set, zero value otherwise.
func (o *ProjectTimeLogUpdateDto) GetTimeSpan() string {
	if o == nil || IsNil(o.TimeSpan) {
		var ret string
		return ret
	}
	return *o.TimeSpan
}

// GetTimeSpanOk returns a tuple with the TimeSpan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTimeLogUpdateDto) GetTimeSpanOk() (*string, bool) {
	if o == nil || IsNil(o.TimeSpan) {
		return nil, false
	}
	return o.TimeSpan, true
}

// HasTimeSpan returns a boolean if a field has been set.
func (o *ProjectTimeLogUpdateDto) HasTimeSpan() bool {
	if o != nil && !IsNil(o.TimeSpan) {
		return true
	}

	return false
}

// SetTimeSpan gets a reference to the given string and assigns it to the TimeSpan field.
func (o *ProjectTimeLogUpdateDto) SetTimeSpan(v string) {
	o.TimeSpan = &v
}

// GetComments returns the Comments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTimeLogUpdateDto) GetComments() string {
	if o == nil || IsNil(o.Comments.Get()) {
		var ret string
		return ret
	}
	return *o.Comments.Get()
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTimeLogUpdateDto) GetCommentsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comments.Get(), o.Comments.IsSet()
}

// HasComments returns a boolean if a field has been set.
func (o *ProjectTimeLogUpdateDto) HasComments() bool {
	if o != nil && o.Comments.IsSet() {
		return true
	}

	return false
}

// SetComments gets a reference to the given NullableString and assigns it to the Comments field.
func (o *ProjectTimeLogUpdateDto) SetComments(v string) {
	o.Comments.Set(&v)
}
// SetCommentsNil sets the value for Comments to be an explicit nil
func (o *ProjectTimeLogUpdateDto) SetCommentsNil() {
	o.Comments.Set(nil)
}

// UnsetComments ensures that no value is present for Comments, not even an explicit nil
func (o *ProjectTimeLogUpdateDto) UnsetComments() {
	o.Comments.Unset()
}

// GetProjectTaskID returns the ProjectTaskID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTimeLogUpdateDto) GetProjectTaskID() string {
	if o == nil || IsNil(o.ProjectTaskID.Get()) {
		var ret string
		return ret
	}
	return *o.ProjectTaskID.Get()
}

// GetProjectTaskIDOk returns a tuple with the ProjectTaskID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTimeLogUpdateDto) GetProjectTaskIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectTaskID.Get(), o.ProjectTaskID.IsSet()
}

// HasProjectTaskID returns a boolean if a field has been set.
func (o *ProjectTimeLogUpdateDto) HasProjectTaskID() bool {
	if o != nil && o.ProjectTaskID.IsSet() {
		return true
	}

	return false
}

// SetProjectTaskID gets a reference to the given NullableString and assigns it to the ProjectTaskID field.
func (o *ProjectTimeLogUpdateDto) SetProjectTaskID(v string) {
	o.ProjectTaskID.Set(&v)
}
// SetProjectTaskIDNil sets the value for ProjectTaskID to be an explicit nil
func (o *ProjectTimeLogUpdateDto) SetProjectTaskIDNil() {
	o.ProjectTaskID.Set(nil)
}

// UnsetProjectTaskID ensures that no value is present for ProjectTaskID, not even an explicit nil
func (o *ProjectTimeLogUpdateDto) UnsetProjectTaskID() {
	o.ProjectTaskID.Unset()
}

// GetProjectPeriodID returns the ProjectPeriodID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTimeLogUpdateDto) GetProjectPeriodID() string {
	if o == nil || IsNil(o.ProjectPeriodID.Get()) {
		var ret string
		return ret
	}
	return *o.ProjectPeriodID.Get()
}

// GetProjectPeriodIDOk returns a tuple with the ProjectPeriodID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTimeLogUpdateDto) GetProjectPeriodIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectPeriodID.Get(), o.ProjectPeriodID.IsSet()
}

// HasProjectPeriodID returns a boolean if a field has been set.
func (o *ProjectTimeLogUpdateDto) HasProjectPeriodID() bool {
	if o != nil && o.ProjectPeriodID.IsSet() {
		return true
	}

	return false
}

// SetProjectPeriodID gets a reference to the given NullableString and assigns it to the ProjectPeriodID field.
func (o *ProjectTimeLogUpdateDto) SetProjectPeriodID(v string) {
	o.ProjectPeriodID.Set(&v)
}
// SetProjectPeriodIDNil sets the value for ProjectPeriodID to be an explicit nil
func (o *ProjectTimeLogUpdateDto) SetProjectPeriodIDNil() {
	o.ProjectPeriodID.Set(nil)
}

// UnsetProjectPeriodID ensures that no value is present for ProjectPeriodID, not even an explicit nil
func (o *ProjectTimeLogUpdateDto) UnsetProjectPeriodID() {
	o.ProjectPeriodID.Unset()
}

// GetProjectTimeLogRecordType returns the ProjectTimeLogRecordType field value if set, zero value otherwise.
func (o *ProjectTimeLogUpdateDto) GetProjectTimeLogRecordType() int32 {
	if o == nil || IsNil(o.ProjectTimeLogRecordType) {
		var ret int32
		return ret
	}
	return *o.ProjectTimeLogRecordType
}

// GetProjectTimeLogRecordTypeOk returns a tuple with the ProjectTimeLogRecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTimeLogUpdateDto) GetProjectTimeLogRecordTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectTimeLogRecordType) {
		return nil, false
	}
	return o.ProjectTimeLogRecordType, true
}

// HasProjectTimeLogRecordType returns a boolean if a field has been set.
func (o *ProjectTimeLogUpdateDto) HasProjectTimeLogRecordType() bool {
	if o != nil && !IsNil(o.ProjectTimeLogRecordType) {
		return true
	}

	return false
}

// SetProjectTimeLogRecordType gets a reference to the given int32 and assigns it to the ProjectTimeLogRecordType field.
func (o *ProjectTimeLogUpdateDto) SetProjectTimeLogRecordType(v int32) {
	o.ProjectTimeLogRecordType = &v
}

func (o ProjectTimeLogUpdateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectTimeLogUpdateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LogDate) {
		toSerialize["logDate"] = o.LogDate
	}
	if !IsNil(o.TimeSpan) {
		toSerialize["timeSpan"] = o.TimeSpan
	}
	if o.Comments.IsSet() {
		toSerialize["comments"] = o.Comments.Get()
	}
	if o.ProjectTaskID.IsSet() {
		toSerialize["projectTaskID"] = o.ProjectTaskID.Get()
	}
	if o.ProjectPeriodID.IsSet() {
		toSerialize["projectPeriodID"] = o.ProjectPeriodID.Get()
	}
	if !IsNil(o.ProjectTimeLogRecordType) {
		toSerialize["projectTimeLogRecordType"] = o.ProjectTimeLogRecordType
	}
	return toSerialize, nil
}

type NullableProjectTimeLogUpdateDto struct {
	value *ProjectTimeLogUpdateDto
	isSet bool
}

func (v NullableProjectTimeLogUpdateDto) Get() *ProjectTimeLogUpdateDto {
	return v.value
}

func (v *NullableProjectTimeLogUpdateDto) Set(val *ProjectTimeLogUpdateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectTimeLogUpdateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectTimeLogUpdateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectTimeLogUpdateDto(val *ProjectTimeLogUpdateDto) *NullableProjectTimeLogUpdateDto {
	return &NullableProjectTimeLogUpdateDto{value: val, isSet: true}
}

func (v NullableProjectTimeLogUpdateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectTimeLogUpdateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


