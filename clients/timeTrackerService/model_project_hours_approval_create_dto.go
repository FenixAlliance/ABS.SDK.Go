/*
TimeTrackerService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ProjectHoursApprovalCreateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectHoursApprovalCreateDto{}

// ProjectHoursApprovalCreateDto struct for ProjectHoursApprovalCreateDto
type ProjectHoursApprovalCreateDto struct {
	Id *string `json:"id,omitempty"`
	Timestamp *time.Time `json:"timestamp,omitempty"`
	RequesterContactID NullableString `json:"requesterContactID,omitempty"`
	ApproverContactID NullableString `json:"approverContactID,omitempty"`
	ProjectPeriodID NullableString `json:"projectPeriodID,omitempty"`
	Comments NullableString `json:"comments,omitempty"`
}

// NewProjectHoursApprovalCreateDto instantiates a new ProjectHoursApprovalCreateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectHoursApprovalCreateDto() *ProjectHoursApprovalCreateDto {
	this := ProjectHoursApprovalCreateDto{}
	return &this
}

// NewProjectHoursApprovalCreateDtoWithDefaults instantiates a new ProjectHoursApprovalCreateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectHoursApprovalCreateDtoWithDefaults() *ProjectHoursApprovalCreateDto {
	this := ProjectHoursApprovalCreateDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProjectHoursApprovalCreateDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectHoursApprovalCreateDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProjectHoursApprovalCreateDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProjectHoursApprovalCreateDto) SetId(v string) {
	o.Id = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ProjectHoursApprovalCreateDto) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectHoursApprovalCreateDto) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ProjectHoursApprovalCreateDto) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *ProjectHoursApprovalCreateDto) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetRequesterContactID returns the RequesterContactID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectHoursApprovalCreateDto) GetRequesterContactID() string {
	if o == nil || IsNil(o.RequesterContactID.Get()) {
		var ret string
		return ret
	}
	return *o.RequesterContactID.Get()
}

// GetRequesterContactIDOk returns a tuple with the RequesterContactID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectHoursApprovalCreateDto) GetRequesterContactIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequesterContactID.Get(), o.RequesterContactID.IsSet()
}

// HasRequesterContactID returns a boolean if a field has been set.
func (o *ProjectHoursApprovalCreateDto) HasRequesterContactID() bool {
	if o != nil && o.RequesterContactID.IsSet() {
		return true
	}

	return false
}

// SetRequesterContactID gets a reference to the given NullableString and assigns it to the RequesterContactID field.
func (o *ProjectHoursApprovalCreateDto) SetRequesterContactID(v string) {
	o.RequesterContactID.Set(&v)
}
// SetRequesterContactIDNil sets the value for RequesterContactID to be an explicit nil
func (o *ProjectHoursApprovalCreateDto) SetRequesterContactIDNil() {
	o.RequesterContactID.Set(nil)
}

// UnsetRequesterContactID ensures that no value is present for RequesterContactID, not even an explicit nil
func (o *ProjectHoursApprovalCreateDto) UnsetRequesterContactID() {
	o.RequesterContactID.Unset()
}

// GetApproverContactID returns the ApproverContactID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectHoursApprovalCreateDto) GetApproverContactID() string {
	if o == nil || IsNil(o.ApproverContactID.Get()) {
		var ret string
		return ret
	}
	return *o.ApproverContactID.Get()
}

// GetApproverContactIDOk returns a tuple with the ApproverContactID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectHoursApprovalCreateDto) GetApproverContactIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApproverContactID.Get(), o.ApproverContactID.IsSet()
}

// HasApproverContactID returns a boolean if a field has been set.
func (o *ProjectHoursApprovalCreateDto) HasApproverContactID() bool {
	if o != nil && o.ApproverContactID.IsSet() {
		return true
	}

	return false
}

// SetApproverContactID gets a reference to the given NullableString and assigns it to the ApproverContactID field.
func (o *ProjectHoursApprovalCreateDto) SetApproverContactID(v string) {
	o.ApproverContactID.Set(&v)
}
// SetApproverContactIDNil sets the value for ApproverContactID to be an explicit nil
func (o *ProjectHoursApprovalCreateDto) SetApproverContactIDNil() {
	o.ApproverContactID.Set(nil)
}

// UnsetApproverContactID ensures that no value is present for ApproverContactID, not even an explicit nil
func (o *ProjectHoursApprovalCreateDto) UnsetApproverContactID() {
	o.ApproverContactID.Unset()
}

// GetProjectPeriodID returns the ProjectPeriodID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectHoursApprovalCreateDto) GetProjectPeriodID() string {
	if o == nil || IsNil(o.ProjectPeriodID.Get()) {
		var ret string
		return ret
	}
	return *o.ProjectPeriodID.Get()
}

// GetProjectPeriodIDOk returns a tuple with the ProjectPeriodID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectHoursApprovalCreateDto) GetProjectPeriodIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectPeriodID.Get(), o.ProjectPeriodID.IsSet()
}

// HasProjectPeriodID returns a boolean if a field has been set.
func (o *ProjectHoursApprovalCreateDto) HasProjectPeriodID() bool {
	if o != nil && o.ProjectPeriodID.IsSet() {
		return true
	}

	return false
}

// SetProjectPeriodID gets a reference to the given NullableString and assigns it to the ProjectPeriodID field.
func (o *ProjectHoursApprovalCreateDto) SetProjectPeriodID(v string) {
	o.ProjectPeriodID.Set(&v)
}
// SetProjectPeriodIDNil sets the value for ProjectPeriodID to be an explicit nil
func (o *ProjectHoursApprovalCreateDto) SetProjectPeriodIDNil() {
	o.ProjectPeriodID.Set(nil)
}

// UnsetProjectPeriodID ensures that no value is present for ProjectPeriodID, not even an explicit nil
func (o *ProjectHoursApprovalCreateDto) UnsetProjectPeriodID() {
	o.ProjectPeriodID.Unset()
}

// GetComments returns the Comments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectHoursApprovalCreateDto) GetComments() string {
	if o == nil || IsNil(o.Comments.Get()) {
		var ret string
		return ret
	}
	return *o.Comments.Get()
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectHoursApprovalCreateDto) GetCommentsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comments.Get(), o.Comments.IsSet()
}

// HasComments returns a boolean if a field has been set.
func (o *ProjectHoursApprovalCreateDto) HasComments() bool {
	if o != nil && o.Comments.IsSet() {
		return true
	}

	return false
}

// SetComments gets a reference to the given NullableString and assigns it to the Comments field.
func (o *ProjectHoursApprovalCreateDto) SetComments(v string) {
	o.Comments.Set(&v)
}
// SetCommentsNil sets the value for Comments to be an explicit nil
func (o *ProjectHoursApprovalCreateDto) SetCommentsNil() {
	o.Comments.Set(nil)
}

// UnsetComments ensures that no value is present for Comments, not even an explicit nil
func (o *ProjectHoursApprovalCreateDto) UnsetComments() {
	o.Comments.Unset()
}

func (o ProjectHoursApprovalCreateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectHoursApprovalCreateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.RequesterContactID.IsSet() {
		toSerialize["requesterContactID"] = o.RequesterContactID.Get()
	}
	if o.ApproverContactID.IsSet() {
		toSerialize["approverContactID"] = o.ApproverContactID.Get()
	}
	if o.ProjectPeriodID.IsSet() {
		toSerialize["projectPeriodID"] = o.ProjectPeriodID.Get()
	}
	if o.Comments.IsSet() {
		toSerialize["comments"] = o.Comments.Get()
	}
	return toSerialize, nil
}

type NullableProjectHoursApprovalCreateDto struct {
	value *ProjectHoursApprovalCreateDto
	isSet bool
}

func (v NullableProjectHoursApprovalCreateDto) Get() *ProjectHoursApprovalCreateDto {
	return v.value
}

func (v *NullableProjectHoursApprovalCreateDto) Set(val *ProjectHoursApprovalCreateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectHoursApprovalCreateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectHoursApprovalCreateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectHoursApprovalCreateDto(val *ProjectHoursApprovalCreateDto) *NullableProjectHoursApprovalCreateDto {
	return &NullableProjectHoursApprovalCreateDto{value: val, isSet: true}
}

func (v NullableProjectHoursApprovalCreateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectHoursApprovalCreateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


