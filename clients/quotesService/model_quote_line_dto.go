/*
QuotesService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the QuoteLineDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteLineDto{}

// QuoteLineDto struct for QuoteLineDto
type QuoteLineDto struct {
	Id NullableString `json:"id,omitempty"`
	Timestamp NullableTime `json:"timestamp,omitempty"`
	Closed *bool `json:"closed,omitempty"`
	ItemId NullableString `json:"itemId,omitempty"`
	ItemTitle NullableString `json:"itemTitle,omitempty"`
	ItemShortDescription NullableString `json:"itemShortDescription,omitempty"`
	ItemPrimaryImageUrl NullableString `json:"itemPrimaryImageUrl,omitempty"`
	ShippingPolicyId NullableString `json:"shippingPolicyId,omitempty"`
	TenantId NullableString `json:"tenantId,omitempty"`
	EnrollmentId NullableString `json:"enrollmentId,omitempty"`
	CurrencyId NullableString `json:"currencyId,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Quantity *float64 `json:"quantity,omitempty"`
	Free *bool `json:"free,omitempty"`
	FreeReason NullableString `json:"freeReason,omitempty"`
	FreeReasonCode NullableString `json:"freeReasonCode,omitempty"`
	Data NullableString `json:"data,omitempty"`
	DataLabel NullableString `json:"dataLabel,omitempty"`
	Data1 NullableString `json:"data1,omitempty"`
	Data1Label NullableString `json:"data1Label,omitempty"`
	Data2 NullableString `json:"data2,omitempty"`
	Data2Label NullableString `json:"data2Label,omitempty"`
	Data3 NullableString `json:"data3,omitempty"`
	Data3Label NullableString `json:"data3Label,omitempty"`
	Data4 NullableString `json:"data4,omitempty"`
	Data4Label NullableString `json:"data4Label,omitempty"`
	Data5 NullableString `json:"data5,omitempty"`
	Data5Label NullableString `json:"data5Label,omitempty"`
	Data6 NullableString `json:"data6,omitempty"`
	Data6Label NullableString `json:"data6Label,omitempty"`
	Data7 NullableString `json:"data7,omitempty"`
	Data7Label NullableString `json:"data7Label,omitempty"`
	Data8 NullableString `json:"data8,omitempty"`
	Data8Label NullableString `json:"data8Label,omitempty"`
	Data9 NullableString `json:"data9,omitempty"`
	Data9Label NullableString `json:"data9Label,omitempty"`
	ItemPriceId NullableString `json:"itemPriceId,omitempty"`
	PriceListItemId NullableString `json:"priceListItemId,omitempty"`
	UnitId NullableString `json:"unitId,omitempty"`
	UnitGroupId NullableString `json:"unitGroupId,omitempty"`
	TaxCalculationMethod *int32 `json:"taxCalculationMethod,omitempty"`
	CostCalculationMethod *int32 `json:"costCalculationMethod,omitempty"`
	ForexRatesSnapshot NullableString `json:"forexRatesSnapshot,omitempty"`
	ForexRate *float64 `json:"forexRate,omitempty"`
	TotalBaseAmountInUsd *float64 `json:"totalBaseAmountInUsd,omitempty"`
	TotalProfitInUsd *float64 `json:"totalProfitInUsd,omitempty"`
	TotalDetailAmountInUsd *float64 `json:"totalDetailAmountInUsd,omitempty"`
	TotalTaxBaseInUsd *float64 `json:"totalTaxBaseInUsd,omitempty"`
	TotalDiscountsInUsd *float64 `json:"totalDiscountsInUsd,omitempty"`
	TotalTaxesInUsd *float64 `json:"totalTaxesInUsd,omitempty"`
	TotalWithholdingTaxesInUsd *float64 `json:"totalWithholdingTaxesInUsd,omitempty"`
	TotalShippingCostInUsd *float64 `json:"totalShippingCostInUsd,omitempty"`
	TotalShippingTaxesInUsd *float64 `json:"totalShippingTaxesInUsd,omitempty"`
	TotalWarrantyCostInUsd *float64 `json:"totalWarrantyCostInUsd,omitempty"`
	TotalReturnCostInUsd *float64 `json:"totalReturnCostInUsd,omitempty"`
	TotalRefundCostInUsd *float64 `json:"totalRefundCostInUsd,omitempty"`
	TotalSurchargesInUsd *float64 `json:"totalSurchargesInUsd,omitempty"`
	TotalAmountInUsd *float64 `json:"totalAmountInUsd,omitempty"`
	TotalGlobalDiscountsInUsd *float64 `json:"totalGlobalDiscountsInUsd,omitempty"`
	TotalGlobalSurchargesInUsd *float64 `json:"totalGlobalSurchargesInUsd,omitempty"`
	CustomGlobalSurchargesAmount *float64 `json:"customGlobalSurchargesAmount,omitempty"`
	CustomGlobalDiscountsAmount *float64 `json:"customGlobalDiscountsAmount,omitempty"`
	CustomBaseAmount *float64 `json:"customBaseAmount,omitempty"`
	CustomDetailAmount *float64 `json:"customDetailAmount,omitempty"`
	CustomDiscountsAmount *float64 `json:"customDiscountsAmount,omitempty"`
	CustomTaxBase *float64 `json:"customTaxBase,omitempty"`
	CustomSurchargesAmount *float64 `json:"customSurchargesAmount,omitempty"`
	CustomProfitAmount *float64 `json:"customProfitAmount,omitempty"`
	CustomShippingCostAmount *float64 `json:"customShippingCostAmount,omitempty"`
	CustomShippingTaxAmount *float64 `json:"customShippingTaxAmount,omitempty"`
	CustomTaxAmount *float64 `json:"customTaxAmount,omitempty"`
	CustomWithholdingTaxAmount *float64 `json:"customWithholdingTaxAmount,omitempty"`
	CustomTotalAmount *float64 `json:"customTotalAmount,omitempty"`
	ReturnPolicyId NullableString `json:"returnPolicyId,omitempty"`
	RefundPolicyId NullableString `json:"refundPolicyId,omitempty"`
	WarrantyPolicyId NullableString `json:"warrantyPolicyId,omitempty"`
	ShipmentPolicyId NullableString `json:"shipmentPolicyId,omitempty"`
	ShippingLocationId NullableString `json:"shippingLocationId,omitempty"`
	LocationId NullableString `json:"locationId,omitempty"`
	QuoteItemRecordId NullableString `json:"quoteItemRecordId,omitempty"`
	BusinessProfileRecordId NullableString `json:"businessProfileRecordId,omitempty"`
	ParentBillingItemRecordId NullableString `json:"parentBillingItemRecordId,omitempty"`
	QuoteId NullableString `json:"quoteId,omitempty"`
}

// NewQuoteLineDto instantiates a new QuoteLineDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteLineDto() *QuoteLineDto {
	this := QuoteLineDto{}
	return &this
}

// NewQuoteLineDtoWithDefaults instantiates a new QuoteLineDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteLineDtoWithDefaults() *QuoteLineDto {
	this := QuoteLineDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *QuoteLineDto) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *QuoteLineDto) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *QuoteLineDto) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *QuoteLineDto) UnsetId() {
	o.Id.Unset()
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp.Get()
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timestamp.Get(), o.Timestamp.IsSet()
}

// HasTimestamp returns a boolean if a field has been set.
func (o *QuoteLineDto) HasTimestamp() bool {
	if o != nil && o.Timestamp.IsSet() {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given NullableTime and assigns it to the Timestamp field.
func (o *QuoteLineDto) SetTimestamp(v time.Time) {
	o.Timestamp.Set(&v)
}
// SetTimestampNil sets the value for Timestamp to be an explicit nil
func (o *QuoteLineDto) SetTimestampNil() {
	o.Timestamp.Set(nil)
}

// UnsetTimestamp ensures that no value is present for Timestamp, not even an explicit nil
func (o *QuoteLineDto) UnsetTimestamp() {
	o.Timestamp.Unset()
}

// GetClosed returns the Closed field value if set, zero value otherwise.
func (o *QuoteLineDto) GetClosed() bool {
	if o == nil || IsNil(o.Closed) {
		var ret bool
		return ret
	}
	return *o.Closed
}

// GetClosedOk returns a tuple with the Closed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetClosedOk() (*bool, bool) {
	if o == nil || IsNil(o.Closed) {
		return nil, false
	}
	return o.Closed, true
}

// HasClosed returns a boolean if a field has been set.
func (o *QuoteLineDto) HasClosed() bool {
	if o != nil && !IsNil(o.Closed) {
		return true
	}

	return false
}

// SetClosed gets a reference to the given bool and assigns it to the Closed field.
func (o *QuoteLineDto) SetClosed(v bool) {
	o.Closed = &v
}

// GetItemId returns the ItemId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetItemId() string {
	if o == nil || IsNil(o.ItemId.Get()) {
		var ret string
		return ret
	}
	return *o.ItemId.Get()
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemId.Get(), o.ItemId.IsSet()
}

// HasItemId returns a boolean if a field has been set.
func (o *QuoteLineDto) HasItemId() bool {
	if o != nil && o.ItemId.IsSet() {
		return true
	}

	return false
}

// SetItemId gets a reference to the given NullableString and assigns it to the ItemId field.
func (o *QuoteLineDto) SetItemId(v string) {
	o.ItemId.Set(&v)
}
// SetItemIdNil sets the value for ItemId to be an explicit nil
func (o *QuoteLineDto) SetItemIdNil() {
	o.ItemId.Set(nil)
}

// UnsetItemId ensures that no value is present for ItemId, not even an explicit nil
func (o *QuoteLineDto) UnsetItemId() {
	o.ItemId.Unset()
}

// GetItemTitle returns the ItemTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetItemTitle() string {
	if o == nil || IsNil(o.ItemTitle.Get()) {
		var ret string
		return ret
	}
	return *o.ItemTitle.Get()
}

// GetItemTitleOk returns a tuple with the ItemTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetItemTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemTitle.Get(), o.ItemTitle.IsSet()
}

// HasItemTitle returns a boolean if a field has been set.
func (o *QuoteLineDto) HasItemTitle() bool {
	if o != nil && o.ItemTitle.IsSet() {
		return true
	}

	return false
}

// SetItemTitle gets a reference to the given NullableString and assigns it to the ItemTitle field.
func (o *QuoteLineDto) SetItemTitle(v string) {
	o.ItemTitle.Set(&v)
}
// SetItemTitleNil sets the value for ItemTitle to be an explicit nil
func (o *QuoteLineDto) SetItemTitleNil() {
	o.ItemTitle.Set(nil)
}

// UnsetItemTitle ensures that no value is present for ItemTitle, not even an explicit nil
func (o *QuoteLineDto) UnsetItemTitle() {
	o.ItemTitle.Unset()
}

// GetItemShortDescription returns the ItemShortDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetItemShortDescription() string {
	if o == nil || IsNil(o.ItemShortDescription.Get()) {
		var ret string
		return ret
	}
	return *o.ItemShortDescription.Get()
}

// GetItemShortDescriptionOk returns a tuple with the ItemShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetItemShortDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemShortDescription.Get(), o.ItemShortDescription.IsSet()
}

// HasItemShortDescription returns a boolean if a field has been set.
func (o *QuoteLineDto) HasItemShortDescription() bool {
	if o != nil && o.ItemShortDescription.IsSet() {
		return true
	}

	return false
}

// SetItemShortDescription gets a reference to the given NullableString and assigns it to the ItemShortDescription field.
func (o *QuoteLineDto) SetItemShortDescription(v string) {
	o.ItemShortDescription.Set(&v)
}
// SetItemShortDescriptionNil sets the value for ItemShortDescription to be an explicit nil
func (o *QuoteLineDto) SetItemShortDescriptionNil() {
	o.ItemShortDescription.Set(nil)
}

// UnsetItemShortDescription ensures that no value is present for ItemShortDescription, not even an explicit nil
func (o *QuoteLineDto) UnsetItemShortDescription() {
	o.ItemShortDescription.Unset()
}

// GetItemPrimaryImageUrl returns the ItemPrimaryImageUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetItemPrimaryImageUrl() string {
	if o == nil || IsNil(o.ItemPrimaryImageUrl.Get()) {
		var ret string
		return ret
	}
	return *o.ItemPrimaryImageUrl.Get()
}

// GetItemPrimaryImageUrlOk returns a tuple with the ItemPrimaryImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetItemPrimaryImageUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemPrimaryImageUrl.Get(), o.ItemPrimaryImageUrl.IsSet()
}

// HasItemPrimaryImageUrl returns a boolean if a field has been set.
func (o *QuoteLineDto) HasItemPrimaryImageUrl() bool {
	if o != nil && o.ItemPrimaryImageUrl.IsSet() {
		return true
	}

	return false
}

// SetItemPrimaryImageUrl gets a reference to the given NullableString and assigns it to the ItemPrimaryImageUrl field.
func (o *QuoteLineDto) SetItemPrimaryImageUrl(v string) {
	o.ItemPrimaryImageUrl.Set(&v)
}
// SetItemPrimaryImageUrlNil sets the value for ItemPrimaryImageUrl to be an explicit nil
func (o *QuoteLineDto) SetItemPrimaryImageUrlNil() {
	o.ItemPrimaryImageUrl.Set(nil)
}

// UnsetItemPrimaryImageUrl ensures that no value is present for ItemPrimaryImageUrl, not even an explicit nil
func (o *QuoteLineDto) UnsetItemPrimaryImageUrl() {
	o.ItemPrimaryImageUrl.Unset()
}

// GetShippingPolicyId returns the ShippingPolicyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetShippingPolicyId() string {
	if o == nil || IsNil(o.ShippingPolicyId.Get()) {
		var ret string
		return ret
	}
	return *o.ShippingPolicyId.Get()
}

// GetShippingPolicyIdOk returns a tuple with the ShippingPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetShippingPolicyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippingPolicyId.Get(), o.ShippingPolicyId.IsSet()
}

// HasShippingPolicyId returns a boolean if a field has been set.
func (o *QuoteLineDto) HasShippingPolicyId() bool {
	if o != nil && o.ShippingPolicyId.IsSet() {
		return true
	}

	return false
}

// SetShippingPolicyId gets a reference to the given NullableString and assigns it to the ShippingPolicyId field.
func (o *QuoteLineDto) SetShippingPolicyId(v string) {
	o.ShippingPolicyId.Set(&v)
}
// SetShippingPolicyIdNil sets the value for ShippingPolicyId to be an explicit nil
func (o *QuoteLineDto) SetShippingPolicyIdNil() {
	o.ShippingPolicyId.Set(nil)
}

// UnsetShippingPolicyId ensures that no value is present for ShippingPolicyId, not even an explicit nil
func (o *QuoteLineDto) UnsetShippingPolicyId() {
	o.ShippingPolicyId.Unset()
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *QuoteLineDto) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *QuoteLineDto) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *QuoteLineDto) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *QuoteLineDto) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetEnrollmentId returns the EnrollmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetEnrollmentId() string {
	if o == nil || IsNil(o.EnrollmentId.Get()) {
		var ret string
		return ret
	}
	return *o.EnrollmentId.Get()
}

// GetEnrollmentIdOk returns a tuple with the EnrollmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetEnrollmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnrollmentId.Get(), o.EnrollmentId.IsSet()
}

// HasEnrollmentId returns a boolean if a field has been set.
func (o *QuoteLineDto) HasEnrollmentId() bool {
	if o != nil && o.EnrollmentId.IsSet() {
		return true
	}

	return false
}

// SetEnrollmentId gets a reference to the given NullableString and assigns it to the EnrollmentId field.
func (o *QuoteLineDto) SetEnrollmentId(v string) {
	o.EnrollmentId.Set(&v)
}
// SetEnrollmentIdNil sets the value for EnrollmentId to be an explicit nil
func (o *QuoteLineDto) SetEnrollmentIdNil() {
	o.EnrollmentId.Set(nil)
}

// UnsetEnrollmentId ensures that no value is present for EnrollmentId, not even an explicit nil
func (o *QuoteLineDto) UnsetEnrollmentId() {
	o.EnrollmentId.Unset()
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetCurrencyId() string {
	if o == nil || IsNil(o.CurrencyId.Get()) {
		var ret string
		return ret
	}
	return *o.CurrencyId.Get()
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetCurrencyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrencyId.Get(), o.CurrencyId.IsSet()
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *QuoteLineDto) HasCurrencyId() bool {
	if o != nil && o.CurrencyId.IsSet() {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given NullableString and assigns it to the CurrencyId field.
func (o *QuoteLineDto) SetCurrencyId(v string) {
	o.CurrencyId.Set(&v)
}
// SetCurrencyIdNil sets the value for CurrencyId to be an explicit nil
func (o *QuoteLineDto) SetCurrencyIdNil() {
	o.CurrencyId.Set(nil)
}

// UnsetCurrencyId ensures that no value is present for CurrencyId, not even an explicit nil
func (o *QuoteLineDto) UnsetCurrencyId() {
	o.CurrencyId.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *QuoteLineDto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *QuoteLineDto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *QuoteLineDto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *QuoteLineDto) UnsetDescription() {
	o.Description.Unset()
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *QuoteLineDto) GetQuantity() float64 {
	if o == nil || IsNil(o.Quantity) {
		var ret float64
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetQuantityOk() (*float64, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *QuoteLineDto) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given float64 and assigns it to the Quantity field.
func (o *QuoteLineDto) SetQuantity(v float64) {
	o.Quantity = &v
}

// GetFree returns the Free field value if set, zero value otherwise.
func (o *QuoteLineDto) GetFree() bool {
	if o == nil || IsNil(o.Free) {
		var ret bool
		return ret
	}
	return *o.Free
}

// GetFreeOk returns a tuple with the Free field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetFreeOk() (*bool, bool) {
	if o == nil || IsNil(o.Free) {
		return nil, false
	}
	return o.Free, true
}

// HasFree returns a boolean if a field has been set.
func (o *QuoteLineDto) HasFree() bool {
	if o != nil && !IsNil(o.Free) {
		return true
	}

	return false
}

// SetFree gets a reference to the given bool and assigns it to the Free field.
func (o *QuoteLineDto) SetFree(v bool) {
	o.Free = &v
}

// GetFreeReason returns the FreeReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetFreeReason() string {
	if o == nil || IsNil(o.FreeReason.Get()) {
		var ret string
		return ret
	}
	return *o.FreeReason.Get()
}

// GetFreeReasonOk returns a tuple with the FreeReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetFreeReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FreeReason.Get(), o.FreeReason.IsSet()
}

// HasFreeReason returns a boolean if a field has been set.
func (o *QuoteLineDto) HasFreeReason() bool {
	if o != nil && o.FreeReason.IsSet() {
		return true
	}

	return false
}

// SetFreeReason gets a reference to the given NullableString and assigns it to the FreeReason field.
func (o *QuoteLineDto) SetFreeReason(v string) {
	o.FreeReason.Set(&v)
}
// SetFreeReasonNil sets the value for FreeReason to be an explicit nil
func (o *QuoteLineDto) SetFreeReasonNil() {
	o.FreeReason.Set(nil)
}

// UnsetFreeReason ensures that no value is present for FreeReason, not even an explicit nil
func (o *QuoteLineDto) UnsetFreeReason() {
	o.FreeReason.Unset()
}

// GetFreeReasonCode returns the FreeReasonCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetFreeReasonCode() string {
	if o == nil || IsNil(o.FreeReasonCode.Get()) {
		var ret string
		return ret
	}
	return *o.FreeReasonCode.Get()
}

// GetFreeReasonCodeOk returns a tuple with the FreeReasonCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetFreeReasonCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FreeReasonCode.Get(), o.FreeReasonCode.IsSet()
}

// HasFreeReasonCode returns a boolean if a field has been set.
func (o *QuoteLineDto) HasFreeReasonCode() bool {
	if o != nil && o.FreeReasonCode.IsSet() {
		return true
	}

	return false
}

// SetFreeReasonCode gets a reference to the given NullableString and assigns it to the FreeReasonCode field.
func (o *QuoteLineDto) SetFreeReasonCode(v string) {
	o.FreeReasonCode.Set(&v)
}
// SetFreeReasonCodeNil sets the value for FreeReasonCode to be an explicit nil
func (o *QuoteLineDto) SetFreeReasonCodeNil() {
	o.FreeReasonCode.Set(nil)
}

// UnsetFreeReasonCode ensures that no value is present for FreeReasonCode, not even an explicit nil
func (o *QuoteLineDto) UnsetFreeReasonCode() {
	o.FreeReasonCode.Unset()
}

// GetData returns the Data field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetData() string {
	if o == nil || IsNil(o.Data.Get()) {
		var ret string
		return ret
	}
	return *o.Data.Get()
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data.Get(), o.Data.IsSet()
}

// HasData returns a boolean if a field has been set.
func (o *QuoteLineDto) HasData() bool {
	if o != nil && o.Data.IsSet() {
		return true
	}

	return false
}

// SetData gets a reference to the given NullableString and assigns it to the Data field.
func (o *QuoteLineDto) SetData(v string) {
	o.Data.Set(&v)
}
// SetDataNil sets the value for Data to be an explicit nil
func (o *QuoteLineDto) SetDataNil() {
	o.Data.Set(nil)
}

// UnsetData ensures that no value is present for Data, not even an explicit nil
func (o *QuoteLineDto) UnsetData() {
	o.Data.Unset()
}

// GetDataLabel returns the DataLabel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetDataLabel() string {
	if o == nil || IsNil(o.DataLabel.Get()) {
		var ret string
		return ret
	}
	return *o.DataLabel.Get()
}

// GetDataLabelOk returns a tuple with the DataLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetDataLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DataLabel.Get(), o.DataLabel.IsSet()
}

// HasDataLabel returns a boolean if a field has been set.
func (o *QuoteLineDto) HasDataLabel() bool {
	if o != nil && o.DataLabel.IsSet() {
		return true
	}

	return false
}

// SetDataLabel gets a reference to the given NullableString and assigns it to the DataLabel field.
func (o *QuoteLineDto) SetDataLabel(v string) {
	o.DataLabel.Set(&v)
}
// SetDataLabelNil sets the value for DataLabel to be an explicit nil
func (o *QuoteLineDto) SetDataLabelNil() {
	o.DataLabel.Set(nil)
}

// UnsetDataLabel ensures that no value is present for DataLabel, not even an explicit nil
func (o *QuoteLineDto) UnsetDataLabel() {
	o.DataLabel.Unset()
}

// GetData1 returns the Data1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetData1() string {
	if o == nil || IsNil(o.Data1.Get()) {
		var ret string
		return ret
	}
	return *o.Data1.Get()
}

// GetData1Ok returns a tuple with the Data1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetData1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data1.Get(), o.Data1.IsSet()
}

// HasData1 returns a boolean if a field has been set.
func (o *QuoteLineDto) HasData1() bool {
	if o != nil && o.Data1.IsSet() {
		return true
	}

	return false
}

// SetData1 gets a reference to the given NullableString and assigns it to the Data1 field.
func (o *QuoteLineDto) SetData1(v string) {
	o.Data1.Set(&v)
}
// SetData1Nil sets the value for Data1 to be an explicit nil
func (o *QuoteLineDto) SetData1Nil() {
	o.Data1.Set(nil)
}

// UnsetData1 ensures that no value is present for Data1, not even an explicit nil
func (o *QuoteLineDto) UnsetData1() {
	o.Data1.Unset()
}

// GetData1Label returns the Data1Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetData1Label() string {
	if o == nil || IsNil(o.Data1Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data1Label.Get()
}

// GetData1LabelOk returns a tuple with the Data1Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetData1LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data1Label.Get(), o.Data1Label.IsSet()
}

// HasData1Label returns a boolean if a field has been set.
func (o *QuoteLineDto) HasData1Label() bool {
	if o != nil && o.Data1Label.IsSet() {
		return true
	}

	return false
}

// SetData1Label gets a reference to the given NullableString and assigns it to the Data1Label field.
func (o *QuoteLineDto) SetData1Label(v string) {
	o.Data1Label.Set(&v)
}
// SetData1LabelNil sets the value for Data1Label to be an explicit nil
func (o *QuoteLineDto) SetData1LabelNil() {
	o.Data1Label.Set(nil)
}

// UnsetData1Label ensures that no value is present for Data1Label, not even an explicit nil
func (o *QuoteLineDto) UnsetData1Label() {
	o.Data1Label.Unset()
}

// GetData2 returns the Data2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetData2() string {
	if o == nil || IsNil(o.Data2.Get()) {
		var ret string
		return ret
	}
	return *o.Data2.Get()
}

// GetData2Ok returns a tuple with the Data2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetData2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data2.Get(), o.Data2.IsSet()
}

// HasData2 returns a boolean if a field has been set.
func (o *QuoteLineDto) HasData2() bool {
	if o != nil && o.Data2.IsSet() {
		return true
	}

	return false
}

// SetData2 gets a reference to the given NullableString and assigns it to the Data2 field.
func (o *QuoteLineDto) SetData2(v string) {
	o.Data2.Set(&v)
}
// SetData2Nil sets the value for Data2 to be an explicit nil
func (o *QuoteLineDto) SetData2Nil() {
	o.Data2.Set(nil)
}

// UnsetData2 ensures that no value is present for Data2, not even an explicit nil
func (o *QuoteLineDto) UnsetData2() {
	o.Data2.Unset()
}

// GetData2Label returns the Data2Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetData2Label() string {
	if o == nil || IsNil(o.Data2Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data2Label.Get()
}

// GetData2LabelOk returns a tuple with the Data2Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetData2LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data2Label.Get(), o.Data2Label.IsSet()
}

// HasData2Label returns a boolean if a field has been set.
func (o *QuoteLineDto) HasData2Label() bool {
	if o != nil && o.Data2Label.IsSet() {
		return true
	}

	return false
}

// SetData2Label gets a reference to the given NullableString and assigns it to the Data2Label field.
func (o *QuoteLineDto) SetData2Label(v string) {
	o.Data2Label.Set(&v)
}
// SetData2LabelNil sets the value for Data2Label to be an explicit nil
func (o *QuoteLineDto) SetData2LabelNil() {
	o.Data2Label.Set(nil)
}

// UnsetData2Label ensures that no value is present for Data2Label, not even an explicit nil
func (o *QuoteLineDto) UnsetData2Label() {
	o.Data2Label.Unset()
}

// GetData3 returns the Data3 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetData3() string {
	if o == nil || IsNil(o.Data3.Get()) {
		var ret string
		return ret
	}
	return *o.Data3.Get()
}

// GetData3Ok returns a tuple with the Data3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetData3Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data3.Get(), o.Data3.IsSet()
}

// HasData3 returns a boolean if a field has been set.
func (o *QuoteLineDto) HasData3() bool {
	if o != nil && o.Data3.IsSet() {
		return true
	}

	return false
}

// SetData3 gets a reference to the given NullableString and assigns it to the Data3 field.
func (o *QuoteLineDto) SetData3(v string) {
	o.Data3.Set(&v)
}
// SetData3Nil sets the value for Data3 to be an explicit nil
func (o *QuoteLineDto) SetData3Nil() {
	o.Data3.Set(nil)
}

// UnsetData3 ensures that no value is present for Data3, not even an explicit nil
func (o *QuoteLineDto) UnsetData3() {
	o.Data3.Unset()
}

// GetData3Label returns the Data3Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetData3Label() string {
	if o == nil || IsNil(o.Data3Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data3Label.Get()
}

// GetData3LabelOk returns a tuple with the Data3Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetData3LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data3Label.Get(), o.Data3Label.IsSet()
}

// HasData3Label returns a boolean if a field has been set.
func (o *QuoteLineDto) HasData3Label() bool {
	if o != nil && o.Data3Label.IsSet() {
		return true
	}

	return false
}

// SetData3Label gets a reference to the given NullableString and assigns it to the Data3Label field.
func (o *QuoteLineDto) SetData3Label(v string) {
	o.Data3Label.Set(&v)
}
// SetData3LabelNil sets the value for Data3Label to be an explicit nil
func (o *QuoteLineDto) SetData3LabelNil() {
	o.Data3Label.Set(nil)
}

// UnsetData3Label ensures that no value is present for Data3Label, not even an explicit nil
func (o *QuoteLineDto) UnsetData3Label() {
	o.Data3Label.Unset()
}

// GetData4 returns the Data4 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetData4() string {
	if o == nil || IsNil(o.Data4.Get()) {
		var ret string
		return ret
	}
	return *o.Data4.Get()
}

// GetData4Ok returns a tuple with the Data4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetData4Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data4.Get(), o.Data4.IsSet()
}

// HasData4 returns a boolean if a field has been set.
func (o *QuoteLineDto) HasData4() bool {
	if o != nil && o.Data4.IsSet() {
		return true
	}

	return false
}

// SetData4 gets a reference to the given NullableString and assigns it to the Data4 field.
func (o *QuoteLineDto) SetData4(v string) {
	o.Data4.Set(&v)
}
// SetData4Nil sets the value for Data4 to be an explicit nil
func (o *QuoteLineDto) SetData4Nil() {
	o.Data4.Set(nil)
}

// UnsetData4 ensures that no value is present for Data4, not even an explicit nil
func (o *QuoteLineDto) UnsetData4() {
	o.Data4.Unset()
}

// GetData4Label returns the Data4Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetData4Label() string {
	if o == nil || IsNil(o.Data4Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data4Label.Get()
}

// GetData4LabelOk returns a tuple with the Data4Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetData4LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data4Label.Get(), o.Data4Label.IsSet()
}

// HasData4Label returns a boolean if a field has been set.
func (o *QuoteLineDto) HasData4Label() bool {
	if o != nil && o.Data4Label.IsSet() {
		return true
	}

	return false
}

// SetData4Label gets a reference to the given NullableString and assigns it to the Data4Label field.
func (o *QuoteLineDto) SetData4Label(v string) {
	o.Data4Label.Set(&v)
}
// SetData4LabelNil sets the value for Data4Label to be an explicit nil
func (o *QuoteLineDto) SetData4LabelNil() {
	o.Data4Label.Set(nil)
}

// UnsetData4Label ensures that no value is present for Data4Label, not even an explicit nil
func (o *QuoteLineDto) UnsetData4Label() {
	o.Data4Label.Unset()
}

// GetData5 returns the Data5 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetData5() string {
	if o == nil || IsNil(o.Data5.Get()) {
		var ret string
		return ret
	}
	return *o.Data5.Get()
}

// GetData5Ok returns a tuple with the Data5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetData5Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data5.Get(), o.Data5.IsSet()
}

// HasData5 returns a boolean if a field has been set.
func (o *QuoteLineDto) HasData5() bool {
	if o != nil && o.Data5.IsSet() {
		return true
	}

	return false
}

// SetData5 gets a reference to the given NullableString and assigns it to the Data5 field.
func (o *QuoteLineDto) SetData5(v string) {
	o.Data5.Set(&v)
}
// SetData5Nil sets the value for Data5 to be an explicit nil
func (o *QuoteLineDto) SetData5Nil() {
	o.Data5.Set(nil)
}

// UnsetData5 ensures that no value is present for Data5, not even an explicit nil
func (o *QuoteLineDto) UnsetData5() {
	o.Data5.Unset()
}

// GetData5Label returns the Data5Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetData5Label() string {
	if o == nil || IsNil(o.Data5Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data5Label.Get()
}

// GetData5LabelOk returns a tuple with the Data5Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetData5LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data5Label.Get(), o.Data5Label.IsSet()
}

// HasData5Label returns a boolean if a field has been set.
func (o *QuoteLineDto) HasData5Label() bool {
	if o != nil && o.Data5Label.IsSet() {
		return true
	}

	return false
}

// SetData5Label gets a reference to the given NullableString and assigns it to the Data5Label field.
func (o *QuoteLineDto) SetData5Label(v string) {
	o.Data5Label.Set(&v)
}
// SetData5LabelNil sets the value for Data5Label to be an explicit nil
func (o *QuoteLineDto) SetData5LabelNil() {
	o.Data5Label.Set(nil)
}

// UnsetData5Label ensures that no value is present for Data5Label, not even an explicit nil
func (o *QuoteLineDto) UnsetData5Label() {
	o.Data5Label.Unset()
}

// GetData6 returns the Data6 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetData6() string {
	if o == nil || IsNil(o.Data6.Get()) {
		var ret string
		return ret
	}
	return *o.Data6.Get()
}

// GetData6Ok returns a tuple with the Data6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetData6Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data6.Get(), o.Data6.IsSet()
}

// HasData6 returns a boolean if a field has been set.
func (o *QuoteLineDto) HasData6() bool {
	if o != nil && o.Data6.IsSet() {
		return true
	}

	return false
}

// SetData6 gets a reference to the given NullableString and assigns it to the Data6 field.
func (o *QuoteLineDto) SetData6(v string) {
	o.Data6.Set(&v)
}
// SetData6Nil sets the value for Data6 to be an explicit nil
func (o *QuoteLineDto) SetData6Nil() {
	o.Data6.Set(nil)
}

// UnsetData6 ensures that no value is present for Data6, not even an explicit nil
func (o *QuoteLineDto) UnsetData6() {
	o.Data6.Unset()
}

// GetData6Label returns the Data6Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetData6Label() string {
	if o == nil || IsNil(o.Data6Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data6Label.Get()
}

// GetData6LabelOk returns a tuple with the Data6Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetData6LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data6Label.Get(), o.Data6Label.IsSet()
}

// HasData6Label returns a boolean if a field has been set.
func (o *QuoteLineDto) HasData6Label() bool {
	if o != nil && o.Data6Label.IsSet() {
		return true
	}

	return false
}

// SetData6Label gets a reference to the given NullableString and assigns it to the Data6Label field.
func (o *QuoteLineDto) SetData6Label(v string) {
	o.Data6Label.Set(&v)
}
// SetData6LabelNil sets the value for Data6Label to be an explicit nil
func (o *QuoteLineDto) SetData6LabelNil() {
	o.Data6Label.Set(nil)
}

// UnsetData6Label ensures that no value is present for Data6Label, not even an explicit nil
func (o *QuoteLineDto) UnsetData6Label() {
	o.Data6Label.Unset()
}

// GetData7 returns the Data7 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetData7() string {
	if o == nil || IsNil(o.Data7.Get()) {
		var ret string
		return ret
	}
	return *o.Data7.Get()
}

// GetData7Ok returns a tuple with the Data7 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetData7Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data7.Get(), o.Data7.IsSet()
}

// HasData7 returns a boolean if a field has been set.
func (o *QuoteLineDto) HasData7() bool {
	if o != nil && o.Data7.IsSet() {
		return true
	}

	return false
}

// SetData7 gets a reference to the given NullableString and assigns it to the Data7 field.
func (o *QuoteLineDto) SetData7(v string) {
	o.Data7.Set(&v)
}
// SetData7Nil sets the value for Data7 to be an explicit nil
func (o *QuoteLineDto) SetData7Nil() {
	o.Data7.Set(nil)
}

// UnsetData7 ensures that no value is present for Data7, not even an explicit nil
func (o *QuoteLineDto) UnsetData7() {
	o.Data7.Unset()
}

// GetData7Label returns the Data7Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetData7Label() string {
	if o == nil || IsNil(o.Data7Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data7Label.Get()
}

// GetData7LabelOk returns a tuple with the Data7Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetData7LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data7Label.Get(), o.Data7Label.IsSet()
}

// HasData7Label returns a boolean if a field has been set.
func (o *QuoteLineDto) HasData7Label() bool {
	if o != nil && o.Data7Label.IsSet() {
		return true
	}

	return false
}

// SetData7Label gets a reference to the given NullableString and assigns it to the Data7Label field.
func (o *QuoteLineDto) SetData7Label(v string) {
	o.Data7Label.Set(&v)
}
// SetData7LabelNil sets the value for Data7Label to be an explicit nil
func (o *QuoteLineDto) SetData7LabelNil() {
	o.Data7Label.Set(nil)
}

// UnsetData7Label ensures that no value is present for Data7Label, not even an explicit nil
func (o *QuoteLineDto) UnsetData7Label() {
	o.Data7Label.Unset()
}

// GetData8 returns the Data8 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetData8() string {
	if o == nil || IsNil(o.Data8.Get()) {
		var ret string
		return ret
	}
	return *o.Data8.Get()
}

// GetData8Ok returns a tuple with the Data8 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetData8Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data8.Get(), o.Data8.IsSet()
}

// HasData8 returns a boolean if a field has been set.
func (o *QuoteLineDto) HasData8() bool {
	if o != nil && o.Data8.IsSet() {
		return true
	}

	return false
}

// SetData8 gets a reference to the given NullableString and assigns it to the Data8 field.
func (o *QuoteLineDto) SetData8(v string) {
	o.Data8.Set(&v)
}
// SetData8Nil sets the value for Data8 to be an explicit nil
func (o *QuoteLineDto) SetData8Nil() {
	o.Data8.Set(nil)
}

// UnsetData8 ensures that no value is present for Data8, not even an explicit nil
func (o *QuoteLineDto) UnsetData8() {
	o.Data8.Unset()
}

// GetData8Label returns the Data8Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetData8Label() string {
	if o == nil || IsNil(o.Data8Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data8Label.Get()
}

// GetData8LabelOk returns a tuple with the Data8Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetData8LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data8Label.Get(), o.Data8Label.IsSet()
}

// HasData8Label returns a boolean if a field has been set.
func (o *QuoteLineDto) HasData8Label() bool {
	if o != nil && o.Data8Label.IsSet() {
		return true
	}

	return false
}

// SetData8Label gets a reference to the given NullableString and assigns it to the Data8Label field.
func (o *QuoteLineDto) SetData8Label(v string) {
	o.Data8Label.Set(&v)
}
// SetData8LabelNil sets the value for Data8Label to be an explicit nil
func (o *QuoteLineDto) SetData8LabelNil() {
	o.Data8Label.Set(nil)
}

// UnsetData8Label ensures that no value is present for Data8Label, not even an explicit nil
func (o *QuoteLineDto) UnsetData8Label() {
	o.Data8Label.Unset()
}

// GetData9 returns the Data9 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetData9() string {
	if o == nil || IsNil(o.Data9.Get()) {
		var ret string
		return ret
	}
	return *o.Data9.Get()
}

// GetData9Ok returns a tuple with the Data9 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetData9Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data9.Get(), o.Data9.IsSet()
}

// HasData9 returns a boolean if a field has been set.
func (o *QuoteLineDto) HasData9() bool {
	if o != nil && o.Data9.IsSet() {
		return true
	}

	return false
}

// SetData9 gets a reference to the given NullableString and assigns it to the Data9 field.
func (o *QuoteLineDto) SetData9(v string) {
	o.Data9.Set(&v)
}
// SetData9Nil sets the value for Data9 to be an explicit nil
func (o *QuoteLineDto) SetData9Nil() {
	o.Data9.Set(nil)
}

// UnsetData9 ensures that no value is present for Data9, not even an explicit nil
func (o *QuoteLineDto) UnsetData9() {
	o.Data9.Unset()
}

// GetData9Label returns the Data9Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetData9Label() string {
	if o == nil || IsNil(o.Data9Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data9Label.Get()
}

// GetData9LabelOk returns a tuple with the Data9Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetData9LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data9Label.Get(), o.Data9Label.IsSet()
}

// HasData9Label returns a boolean if a field has been set.
func (o *QuoteLineDto) HasData9Label() bool {
	if o != nil && o.Data9Label.IsSet() {
		return true
	}

	return false
}

// SetData9Label gets a reference to the given NullableString and assigns it to the Data9Label field.
func (o *QuoteLineDto) SetData9Label(v string) {
	o.Data9Label.Set(&v)
}
// SetData9LabelNil sets the value for Data9Label to be an explicit nil
func (o *QuoteLineDto) SetData9LabelNil() {
	o.Data9Label.Set(nil)
}

// UnsetData9Label ensures that no value is present for Data9Label, not even an explicit nil
func (o *QuoteLineDto) UnsetData9Label() {
	o.Data9Label.Unset()
}

// GetItemPriceId returns the ItemPriceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetItemPriceId() string {
	if o == nil || IsNil(o.ItemPriceId.Get()) {
		var ret string
		return ret
	}
	return *o.ItemPriceId.Get()
}

// GetItemPriceIdOk returns a tuple with the ItemPriceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetItemPriceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemPriceId.Get(), o.ItemPriceId.IsSet()
}

// HasItemPriceId returns a boolean if a field has been set.
func (o *QuoteLineDto) HasItemPriceId() bool {
	if o != nil && o.ItemPriceId.IsSet() {
		return true
	}

	return false
}

// SetItemPriceId gets a reference to the given NullableString and assigns it to the ItemPriceId field.
func (o *QuoteLineDto) SetItemPriceId(v string) {
	o.ItemPriceId.Set(&v)
}
// SetItemPriceIdNil sets the value for ItemPriceId to be an explicit nil
func (o *QuoteLineDto) SetItemPriceIdNil() {
	o.ItemPriceId.Set(nil)
}

// UnsetItemPriceId ensures that no value is present for ItemPriceId, not even an explicit nil
func (o *QuoteLineDto) UnsetItemPriceId() {
	o.ItemPriceId.Unset()
}

// GetPriceListItemId returns the PriceListItemId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetPriceListItemId() string {
	if o == nil || IsNil(o.PriceListItemId.Get()) {
		var ret string
		return ret
	}
	return *o.PriceListItemId.Get()
}

// GetPriceListItemIdOk returns a tuple with the PriceListItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetPriceListItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceListItemId.Get(), o.PriceListItemId.IsSet()
}

// HasPriceListItemId returns a boolean if a field has been set.
func (o *QuoteLineDto) HasPriceListItemId() bool {
	if o != nil && o.PriceListItemId.IsSet() {
		return true
	}

	return false
}

// SetPriceListItemId gets a reference to the given NullableString and assigns it to the PriceListItemId field.
func (o *QuoteLineDto) SetPriceListItemId(v string) {
	o.PriceListItemId.Set(&v)
}
// SetPriceListItemIdNil sets the value for PriceListItemId to be an explicit nil
func (o *QuoteLineDto) SetPriceListItemIdNil() {
	o.PriceListItemId.Set(nil)
}

// UnsetPriceListItemId ensures that no value is present for PriceListItemId, not even an explicit nil
func (o *QuoteLineDto) UnsetPriceListItemId() {
	o.PriceListItemId.Unset()
}

// GetUnitId returns the UnitId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetUnitId() string {
	if o == nil || IsNil(o.UnitId.Get()) {
		var ret string
		return ret
	}
	return *o.UnitId.Get()
}

// GetUnitIdOk returns a tuple with the UnitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetUnitIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnitId.Get(), o.UnitId.IsSet()
}

// HasUnitId returns a boolean if a field has been set.
func (o *QuoteLineDto) HasUnitId() bool {
	if o != nil && o.UnitId.IsSet() {
		return true
	}

	return false
}

// SetUnitId gets a reference to the given NullableString and assigns it to the UnitId field.
func (o *QuoteLineDto) SetUnitId(v string) {
	o.UnitId.Set(&v)
}
// SetUnitIdNil sets the value for UnitId to be an explicit nil
func (o *QuoteLineDto) SetUnitIdNil() {
	o.UnitId.Set(nil)
}

// UnsetUnitId ensures that no value is present for UnitId, not even an explicit nil
func (o *QuoteLineDto) UnsetUnitId() {
	o.UnitId.Unset()
}

// GetUnitGroupId returns the UnitGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetUnitGroupId() string {
	if o == nil || IsNil(o.UnitGroupId.Get()) {
		var ret string
		return ret
	}
	return *o.UnitGroupId.Get()
}

// GetUnitGroupIdOk returns a tuple with the UnitGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetUnitGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnitGroupId.Get(), o.UnitGroupId.IsSet()
}

// HasUnitGroupId returns a boolean if a field has been set.
func (o *QuoteLineDto) HasUnitGroupId() bool {
	if o != nil && o.UnitGroupId.IsSet() {
		return true
	}

	return false
}

// SetUnitGroupId gets a reference to the given NullableString and assigns it to the UnitGroupId field.
func (o *QuoteLineDto) SetUnitGroupId(v string) {
	o.UnitGroupId.Set(&v)
}
// SetUnitGroupIdNil sets the value for UnitGroupId to be an explicit nil
func (o *QuoteLineDto) SetUnitGroupIdNil() {
	o.UnitGroupId.Set(nil)
}

// UnsetUnitGroupId ensures that no value is present for UnitGroupId, not even an explicit nil
func (o *QuoteLineDto) UnsetUnitGroupId() {
	o.UnitGroupId.Unset()
}

// GetTaxCalculationMethod returns the TaxCalculationMethod field value if set, zero value otherwise.
func (o *QuoteLineDto) GetTaxCalculationMethod() int32 {
	if o == nil || IsNil(o.TaxCalculationMethod) {
		var ret int32
		return ret
	}
	return *o.TaxCalculationMethod
}

// GetTaxCalculationMethodOk returns a tuple with the TaxCalculationMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetTaxCalculationMethodOk() (*int32, bool) {
	if o == nil || IsNil(o.TaxCalculationMethod) {
		return nil, false
	}
	return o.TaxCalculationMethod, true
}

// HasTaxCalculationMethod returns a boolean if a field has been set.
func (o *QuoteLineDto) HasTaxCalculationMethod() bool {
	if o != nil && !IsNil(o.TaxCalculationMethod) {
		return true
	}

	return false
}

// SetTaxCalculationMethod gets a reference to the given int32 and assigns it to the TaxCalculationMethod field.
func (o *QuoteLineDto) SetTaxCalculationMethod(v int32) {
	o.TaxCalculationMethod = &v
}

// GetCostCalculationMethod returns the CostCalculationMethod field value if set, zero value otherwise.
func (o *QuoteLineDto) GetCostCalculationMethod() int32 {
	if o == nil || IsNil(o.CostCalculationMethod) {
		var ret int32
		return ret
	}
	return *o.CostCalculationMethod
}

// GetCostCalculationMethodOk returns a tuple with the CostCalculationMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetCostCalculationMethodOk() (*int32, bool) {
	if o == nil || IsNil(o.CostCalculationMethod) {
		return nil, false
	}
	return o.CostCalculationMethod, true
}

// HasCostCalculationMethod returns a boolean if a field has been set.
func (o *QuoteLineDto) HasCostCalculationMethod() bool {
	if o != nil && !IsNil(o.CostCalculationMethod) {
		return true
	}

	return false
}

// SetCostCalculationMethod gets a reference to the given int32 and assigns it to the CostCalculationMethod field.
func (o *QuoteLineDto) SetCostCalculationMethod(v int32) {
	o.CostCalculationMethod = &v
}

// GetForexRatesSnapshot returns the ForexRatesSnapshot field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetForexRatesSnapshot() string {
	if o == nil || IsNil(o.ForexRatesSnapshot.Get()) {
		var ret string
		return ret
	}
	return *o.ForexRatesSnapshot.Get()
}

// GetForexRatesSnapshotOk returns a tuple with the ForexRatesSnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetForexRatesSnapshotOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ForexRatesSnapshot.Get(), o.ForexRatesSnapshot.IsSet()
}

// HasForexRatesSnapshot returns a boolean if a field has been set.
func (o *QuoteLineDto) HasForexRatesSnapshot() bool {
	if o != nil && o.ForexRatesSnapshot.IsSet() {
		return true
	}

	return false
}

// SetForexRatesSnapshot gets a reference to the given NullableString and assigns it to the ForexRatesSnapshot field.
func (o *QuoteLineDto) SetForexRatesSnapshot(v string) {
	o.ForexRatesSnapshot.Set(&v)
}
// SetForexRatesSnapshotNil sets the value for ForexRatesSnapshot to be an explicit nil
func (o *QuoteLineDto) SetForexRatesSnapshotNil() {
	o.ForexRatesSnapshot.Set(nil)
}

// UnsetForexRatesSnapshot ensures that no value is present for ForexRatesSnapshot, not even an explicit nil
func (o *QuoteLineDto) UnsetForexRatesSnapshot() {
	o.ForexRatesSnapshot.Unset()
}

// GetForexRate returns the ForexRate field value if set, zero value otherwise.
func (o *QuoteLineDto) GetForexRate() float64 {
	if o == nil || IsNil(o.ForexRate) {
		var ret float64
		return ret
	}
	return *o.ForexRate
}

// GetForexRateOk returns a tuple with the ForexRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetForexRateOk() (*float64, bool) {
	if o == nil || IsNil(o.ForexRate) {
		return nil, false
	}
	return o.ForexRate, true
}

// HasForexRate returns a boolean if a field has been set.
func (o *QuoteLineDto) HasForexRate() bool {
	if o != nil && !IsNil(o.ForexRate) {
		return true
	}

	return false
}

// SetForexRate gets a reference to the given float64 and assigns it to the ForexRate field.
func (o *QuoteLineDto) SetForexRate(v float64) {
	o.ForexRate = &v
}

// GetTotalBaseAmountInUsd returns the TotalBaseAmountInUsd field value if set, zero value otherwise.
func (o *QuoteLineDto) GetTotalBaseAmountInUsd() float64 {
	if o == nil || IsNil(o.TotalBaseAmountInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalBaseAmountInUsd
}

// GetTotalBaseAmountInUsdOk returns a tuple with the TotalBaseAmountInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetTotalBaseAmountInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalBaseAmountInUsd) {
		return nil, false
	}
	return o.TotalBaseAmountInUsd, true
}

// HasTotalBaseAmountInUsd returns a boolean if a field has been set.
func (o *QuoteLineDto) HasTotalBaseAmountInUsd() bool {
	if o != nil && !IsNil(o.TotalBaseAmountInUsd) {
		return true
	}

	return false
}

// SetTotalBaseAmountInUsd gets a reference to the given float64 and assigns it to the TotalBaseAmountInUsd field.
func (o *QuoteLineDto) SetTotalBaseAmountInUsd(v float64) {
	o.TotalBaseAmountInUsd = &v
}

// GetTotalProfitInUsd returns the TotalProfitInUsd field value if set, zero value otherwise.
func (o *QuoteLineDto) GetTotalProfitInUsd() float64 {
	if o == nil || IsNil(o.TotalProfitInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalProfitInUsd
}

// GetTotalProfitInUsdOk returns a tuple with the TotalProfitInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetTotalProfitInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalProfitInUsd) {
		return nil, false
	}
	return o.TotalProfitInUsd, true
}

// HasTotalProfitInUsd returns a boolean if a field has been set.
func (o *QuoteLineDto) HasTotalProfitInUsd() bool {
	if o != nil && !IsNil(o.TotalProfitInUsd) {
		return true
	}

	return false
}

// SetTotalProfitInUsd gets a reference to the given float64 and assigns it to the TotalProfitInUsd field.
func (o *QuoteLineDto) SetTotalProfitInUsd(v float64) {
	o.TotalProfitInUsd = &v
}

// GetTotalDetailAmountInUsd returns the TotalDetailAmountInUsd field value if set, zero value otherwise.
func (o *QuoteLineDto) GetTotalDetailAmountInUsd() float64 {
	if o == nil || IsNil(o.TotalDetailAmountInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalDetailAmountInUsd
}

// GetTotalDetailAmountInUsdOk returns a tuple with the TotalDetailAmountInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetTotalDetailAmountInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalDetailAmountInUsd) {
		return nil, false
	}
	return o.TotalDetailAmountInUsd, true
}

// HasTotalDetailAmountInUsd returns a boolean if a field has been set.
func (o *QuoteLineDto) HasTotalDetailAmountInUsd() bool {
	if o != nil && !IsNil(o.TotalDetailAmountInUsd) {
		return true
	}

	return false
}

// SetTotalDetailAmountInUsd gets a reference to the given float64 and assigns it to the TotalDetailAmountInUsd field.
func (o *QuoteLineDto) SetTotalDetailAmountInUsd(v float64) {
	o.TotalDetailAmountInUsd = &v
}

// GetTotalTaxBaseInUsd returns the TotalTaxBaseInUsd field value if set, zero value otherwise.
func (o *QuoteLineDto) GetTotalTaxBaseInUsd() float64 {
	if o == nil || IsNil(o.TotalTaxBaseInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalTaxBaseInUsd
}

// GetTotalTaxBaseInUsdOk returns a tuple with the TotalTaxBaseInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetTotalTaxBaseInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalTaxBaseInUsd) {
		return nil, false
	}
	return o.TotalTaxBaseInUsd, true
}

// HasTotalTaxBaseInUsd returns a boolean if a field has been set.
func (o *QuoteLineDto) HasTotalTaxBaseInUsd() bool {
	if o != nil && !IsNil(o.TotalTaxBaseInUsd) {
		return true
	}

	return false
}

// SetTotalTaxBaseInUsd gets a reference to the given float64 and assigns it to the TotalTaxBaseInUsd field.
func (o *QuoteLineDto) SetTotalTaxBaseInUsd(v float64) {
	o.TotalTaxBaseInUsd = &v
}

// GetTotalDiscountsInUsd returns the TotalDiscountsInUsd field value if set, zero value otherwise.
func (o *QuoteLineDto) GetTotalDiscountsInUsd() float64 {
	if o == nil || IsNil(o.TotalDiscountsInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalDiscountsInUsd
}

// GetTotalDiscountsInUsdOk returns a tuple with the TotalDiscountsInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetTotalDiscountsInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalDiscountsInUsd) {
		return nil, false
	}
	return o.TotalDiscountsInUsd, true
}

// HasTotalDiscountsInUsd returns a boolean if a field has been set.
func (o *QuoteLineDto) HasTotalDiscountsInUsd() bool {
	if o != nil && !IsNil(o.TotalDiscountsInUsd) {
		return true
	}

	return false
}

// SetTotalDiscountsInUsd gets a reference to the given float64 and assigns it to the TotalDiscountsInUsd field.
func (o *QuoteLineDto) SetTotalDiscountsInUsd(v float64) {
	o.TotalDiscountsInUsd = &v
}

// GetTotalTaxesInUsd returns the TotalTaxesInUsd field value if set, zero value otherwise.
func (o *QuoteLineDto) GetTotalTaxesInUsd() float64 {
	if o == nil || IsNil(o.TotalTaxesInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalTaxesInUsd
}

// GetTotalTaxesInUsdOk returns a tuple with the TotalTaxesInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetTotalTaxesInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalTaxesInUsd) {
		return nil, false
	}
	return o.TotalTaxesInUsd, true
}

// HasTotalTaxesInUsd returns a boolean if a field has been set.
func (o *QuoteLineDto) HasTotalTaxesInUsd() bool {
	if o != nil && !IsNil(o.TotalTaxesInUsd) {
		return true
	}

	return false
}

// SetTotalTaxesInUsd gets a reference to the given float64 and assigns it to the TotalTaxesInUsd field.
func (o *QuoteLineDto) SetTotalTaxesInUsd(v float64) {
	o.TotalTaxesInUsd = &v
}

// GetTotalWithholdingTaxesInUsd returns the TotalWithholdingTaxesInUsd field value if set, zero value otherwise.
func (o *QuoteLineDto) GetTotalWithholdingTaxesInUsd() float64 {
	if o == nil || IsNil(o.TotalWithholdingTaxesInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalWithholdingTaxesInUsd
}

// GetTotalWithholdingTaxesInUsdOk returns a tuple with the TotalWithholdingTaxesInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetTotalWithholdingTaxesInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalWithholdingTaxesInUsd) {
		return nil, false
	}
	return o.TotalWithholdingTaxesInUsd, true
}

// HasTotalWithholdingTaxesInUsd returns a boolean if a field has been set.
func (o *QuoteLineDto) HasTotalWithholdingTaxesInUsd() bool {
	if o != nil && !IsNil(o.TotalWithholdingTaxesInUsd) {
		return true
	}

	return false
}

// SetTotalWithholdingTaxesInUsd gets a reference to the given float64 and assigns it to the TotalWithholdingTaxesInUsd field.
func (o *QuoteLineDto) SetTotalWithholdingTaxesInUsd(v float64) {
	o.TotalWithholdingTaxesInUsd = &v
}

// GetTotalShippingCostInUsd returns the TotalShippingCostInUsd field value if set, zero value otherwise.
func (o *QuoteLineDto) GetTotalShippingCostInUsd() float64 {
	if o == nil || IsNil(o.TotalShippingCostInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalShippingCostInUsd
}

// GetTotalShippingCostInUsdOk returns a tuple with the TotalShippingCostInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetTotalShippingCostInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalShippingCostInUsd) {
		return nil, false
	}
	return o.TotalShippingCostInUsd, true
}

// HasTotalShippingCostInUsd returns a boolean if a field has been set.
func (o *QuoteLineDto) HasTotalShippingCostInUsd() bool {
	if o != nil && !IsNil(o.TotalShippingCostInUsd) {
		return true
	}

	return false
}

// SetTotalShippingCostInUsd gets a reference to the given float64 and assigns it to the TotalShippingCostInUsd field.
func (o *QuoteLineDto) SetTotalShippingCostInUsd(v float64) {
	o.TotalShippingCostInUsd = &v
}

// GetTotalShippingTaxesInUsd returns the TotalShippingTaxesInUsd field value if set, zero value otherwise.
func (o *QuoteLineDto) GetTotalShippingTaxesInUsd() float64 {
	if o == nil || IsNil(o.TotalShippingTaxesInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalShippingTaxesInUsd
}

// GetTotalShippingTaxesInUsdOk returns a tuple with the TotalShippingTaxesInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetTotalShippingTaxesInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalShippingTaxesInUsd) {
		return nil, false
	}
	return o.TotalShippingTaxesInUsd, true
}

// HasTotalShippingTaxesInUsd returns a boolean if a field has been set.
func (o *QuoteLineDto) HasTotalShippingTaxesInUsd() bool {
	if o != nil && !IsNil(o.TotalShippingTaxesInUsd) {
		return true
	}

	return false
}

// SetTotalShippingTaxesInUsd gets a reference to the given float64 and assigns it to the TotalShippingTaxesInUsd field.
func (o *QuoteLineDto) SetTotalShippingTaxesInUsd(v float64) {
	o.TotalShippingTaxesInUsd = &v
}

// GetTotalWarrantyCostInUsd returns the TotalWarrantyCostInUsd field value if set, zero value otherwise.
func (o *QuoteLineDto) GetTotalWarrantyCostInUsd() float64 {
	if o == nil || IsNil(o.TotalWarrantyCostInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalWarrantyCostInUsd
}

// GetTotalWarrantyCostInUsdOk returns a tuple with the TotalWarrantyCostInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetTotalWarrantyCostInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalWarrantyCostInUsd) {
		return nil, false
	}
	return o.TotalWarrantyCostInUsd, true
}

// HasTotalWarrantyCostInUsd returns a boolean if a field has been set.
func (o *QuoteLineDto) HasTotalWarrantyCostInUsd() bool {
	if o != nil && !IsNil(o.TotalWarrantyCostInUsd) {
		return true
	}

	return false
}

// SetTotalWarrantyCostInUsd gets a reference to the given float64 and assigns it to the TotalWarrantyCostInUsd field.
func (o *QuoteLineDto) SetTotalWarrantyCostInUsd(v float64) {
	o.TotalWarrantyCostInUsd = &v
}

// GetTotalReturnCostInUsd returns the TotalReturnCostInUsd field value if set, zero value otherwise.
func (o *QuoteLineDto) GetTotalReturnCostInUsd() float64 {
	if o == nil || IsNil(o.TotalReturnCostInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalReturnCostInUsd
}

// GetTotalReturnCostInUsdOk returns a tuple with the TotalReturnCostInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetTotalReturnCostInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalReturnCostInUsd) {
		return nil, false
	}
	return o.TotalReturnCostInUsd, true
}

// HasTotalReturnCostInUsd returns a boolean if a field has been set.
func (o *QuoteLineDto) HasTotalReturnCostInUsd() bool {
	if o != nil && !IsNil(o.TotalReturnCostInUsd) {
		return true
	}

	return false
}

// SetTotalReturnCostInUsd gets a reference to the given float64 and assigns it to the TotalReturnCostInUsd field.
func (o *QuoteLineDto) SetTotalReturnCostInUsd(v float64) {
	o.TotalReturnCostInUsd = &v
}

// GetTotalRefundCostInUsd returns the TotalRefundCostInUsd field value if set, zero value otherwise.
func (o *QuoteLineDto) GetTotalRefundCostInUsd() float64 {
	if o == nil || IsNil(o.TotalRefundCostInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalRefundCostInUsd
}

// GetTotalRefundCostInUsdOk returns a tuple with the TotalRefundCostInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetTotalRefundCostInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalRefundCostInUsd) {
		return nil, false
	}
	return o.TotalRefundCostInUsd, true
}

// HasTotalRefundCostInUsd returns a boolean if a field has been set.
func (o *QuoteLineDto) HasTotalRefundCostInUsd() bool {
	if o != nil && !IsNil(o.TotalRefundCostInUsd) {
		return true
	}

	return false
}

// SetTotalRefundCostInUsd gets a reference to the given float64 and assigns it to the TotalRefundCostInUsd field.
func (o *QuoteLineDto) SetTotalRefundCostInUsd(v float64) {
	o.TotalRefundCostInUsd = &v
}

// GetTotalSurchargesInUsd returns the TotalSurchargesInUsd field value if set, zero value otherwise.
func (o *QuoteLineDto) GetTotalSurchargesInUsd() float64 {
	if o == nil || IsNil(o.TotalSurchargesInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalSurchargesInUsd
}

// GetTotalSurchargesInUsdOk returns a tuple with the TotalSurchargesInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetTotalSurchargesInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalSurchargesInUsd) {
		return nil, false
	}
	return o.TotalSurchargesInUsd, true
}

// HasTotalSurchargesInUsd returns a boolean if a field has been set.
func (o *QuoteLineDto) HasTotalSurchargesInUsd() bool {
	if o != nil && !IsNil(o.TotalSurchargesInUsd) {
		return true
	}

	return false
}

// SetTotalSurchargesInUsd gets a reference to the given float64 and assigns it to the TotalSurchargesInUsd field.
func (o *QuoteLineDto) SetTotalSurchargesInUsd(v float64) {
	o.TotalSurchargesInUsd = &v
}

// GetTotalAmountInUsd returns the TotalAmountInUsd field value if set, zero value otherwise.
func (o *QuoteLineDto) GetTotalAmountInUsd() float64 {
	if o == nil || IsNil(o.TotalAmountInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalAmountInUsd
}

// GetTotalAmountInUsdOk returns a tuple with the TotalAmountInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetTotalAmountInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalAmountInUsd) {
		return nil, false
	}
	return o.TotalAmountInUsd, true
}

// HasTotalAmountInUsd returns a boolean if a field has been set.
func (o *QuoteLineDto) HasTotalAmountInUsd() bool {
	if o != nil && !IsNil(o.TotalAmountInUsd) {
		return true
	}

	return false
}

// SetTotalAmountInUsd gets a reference to the given float64 and assigns it to the TotalAmountInUsd field.
func (o *QuoteLineDto) SetTotalAmountInUsd(v float64) {
	o.TotalAmountInUsd = &v
}

// GetTotalGlobalDiscountsInUsd returns the TotalGlobalDiscountsInUsd field value if set, zero value otherwise.
func (o *QuoteLineDto) GetTotalGlobalDiscountsInUsd() float64 {
	if o == nil || IsNil(o.TotalGlobalDiscountsInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalGlobalDiscountsInUsd
}

// GetTotalGlobalDiscountsInUsdOk returns a tuple with the TotalGlobalDiscountsInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetTotalGlobalDiscountsInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalGlobalDiscountsInUsd) {
		return nil, false
	}
	return o.TotalGlobalDiscountsInUsd, true
}

// HasTotalGlobalDiscountsInUsd returns a boolean if a field has been set.
func (o *QuoteLineDto) HasTotalGlobalDiscountsInUsd() bool {
	if o != nil && !IsNil(o.TotalGlobalDiscountsInUsd) {
		return true
	}

	return false
}

// SetTotalGlobalDiscountsInUsd gets a reference to the given float64 and assigns it to the TotalGlobalDiscountsInUsd field.
func (o *QuoteLineDto) SetTotalGlobalDiscountsInUsd(v float64) {
	o.TotalGlobalDiscountsInUsd = &v
}

// GetTotalGlobalSurchargesInUsd returns the TotalGlobalSurchargesInUsd field value if set, zero value otherwise.
func (o *QuoteLineDto) GetTotalGlobalSurchargesInUsd() float64 {
	if o == nil || IsNil(o.TotalGlobalSurchargesInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalGlobalSurchargesInUsd
}

// GetTotalGlobalSurchargesInUsdOk returns a tuple with the TotalGlobalSurchargesInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetTotalGlobalSurchargesInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalGlobalSurchargesInUsd) {
		return nil, false
	}
	return o.TotalGlobalSurchargesInUsd, true
}

// HasTotalGlobalSurchargesInUsd returns a boolean if a field has been set.
func (o *QuoteLineDto) HasTotalGlobalSurchargesInUsd() bool {
	if o != nil && !IsNil(o.TotalGlobalSurchargesInUsd) {
		return true
	}

	return false
}

// SetTotalGlobalSurchargesInUsd gets a reference to the given float64 and assigns it to the TotalGlobalSurchargesInUsd field.
func (o *QuoteLineDto) SetTotalGlobalSurchargesInUsd(v float64) {
	o.TotalGlobalSurchargesInUsd = &v
}

// GetCustomGlobalSurchargesAmount returns the CustomGlobalSurchargesAmount field value if set, zero value otherwise.
func (o *QuoteLineDto) GetCustomGlobalSurchargesAmount() float64 {
	if o == nil || IsNil(o.CustomGlobalSurchargesAmount) {
		var ret float64
		return ret
	}
	return *o.CustomGlobalSurchargesAmount
}

// GetCustomGlobalSurchargesAmountOk returns a tuple with the CustomGlobalSurchargesAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetCustomGlobalSurchargesAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomGlobalSurchargesAmount) {
		return nil, false
	}
	return o.CustomGlobalSurchargesAmount, true
}

// HasCustomGlobalSurchargesAmount returns a boolean if a field has been set.
func (o *QuoteLineDto) HasCustomGlobalSurchargesAmount() bool {
	if o != nil && !IsNil(o.CustomGlobalSurchargesAmount) {
		return true
	}

	return false
}

// SetCustomGlobalSurchargesAmount gets a reference to the given float64 and assigns it to the CustomGlobalSurchargesAmount field.
func (o *QuoteLineDto) SetCustomGlobalSurchargesAmount(v float64) {
	o.CustomGlobalSurchargesAmount = &v
}

// GetCustomGlobalDiscountsAmount returns the CustomGlobalDiscountsAmount field value if set, zero value otherwise.
func (o *QuoteLineDto) GetCustomGlobalDiscountsAmount() float64 {
	if o == nil || IsNil(o.CustomGlobalDiscountsAmount) {
		var ret float64
		return ret
	}
	return *o.CustomGlobalDiscountsAmount
}

// GetCustomGlobalDiscountsAmountOk returns a tuple with the CustomGlobalDiscountsAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetCustomGlobalDiscountsAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomGlobalDiscountsAmount) {
		return nil, false
	}
	return o.CustomGlobalDiscountsAmount, true
}

// HasCustomGlobalDiscountsAmount returns a boolean if a field has been set.
func (o *QuoteLineDto) HasCustomGlobalDiscountsAmount() bool {
	if o != nil && !IsNil(o.CustomGlobalDiscountsAmount) {
		return true
	}

	return false
}

// SetCustomGlobalDiscountsAmount gets a reference to the given float64 and assigns it to the CustomGlobalDiscountsAmount field.
func (o *QuoteLineDto) SetCustomGlobalDiscountsAmount(v float64) {
	o.CustomGlobalDiscountsAmount = &v
}

// GetCustomBaseAmount returns the CustomBaseAmount field value if set, zero value otherwise.
func (o *QuoteLineDto) GetCustomBaseAmount() float64 {
	if o == nil || IsNil(o.CustomBaseAmount) {
		var ret float64
		return ret
	}
	return *o.CustomBaseAmount
}

// GetCustomBaseAmountOk returns a tuple with the CustomBaseAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetCustomBaseAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomBaseAmount) {
		return nil, false
	}
	return o.CustomBaseAmount, true
}

// HasCustomBaseAmount returns a boolean if a field has been set.
func (o *QuoteLineDto) HasCustomBaseAmount() bool {
	if o != nil && !IsNil(o.CustomBaseAmount) {
		return true
	}

	return false
}

// SetCustomBaseAmount gets a reference to the given float64 and assigns it to the CustomBaseAmount field.
func (o *QuoteLineDto) SetCustomBaseAmount(v float64) {
	o.CustomBaseAmount = &v
}

// GetCustomDetailAmount returns the CustomDetailAmount field value if set, zero value otherwise.
func (o *QuoteLineDto) GetCustomDetailAmount() float64 {
	if o == nil || IsNil(o.CustomDetailAmount) {
		var ret float64
		return ret
	}
	return *o.CustomDetailAmount
}

// GetCustomDetailAmountOk returns a tuple with the CustomDetailAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetCustomDetailAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomDetailAmount) {
		return nil, false
	}
	return o.CustomDetailAmount, true
}

// HasCustomDetailAmount returns a boolean if a field has been set.
func (o *QuoteLineDto) HasCustomDetailAmount() bool {
	if o != nil && !IsNil(o.CustomDetailAmount) {
		return true
	}

	return false
}

// SetCustomDetailAmount gets a reference to the given float64 and assigns it to the CustomDetailAmount field.
func (o *QuoteLineDto) SetCustomDetailAmount(v float64) {
	o.CustomDetailAmount = &v
}

// GetCustomDiscountsAmount returns the CustomDiscountsAmount field value if set, zero value otherwise.
func (o *QuoteLineDto) GetCustomDiscountsAmount() float64 {
	if o == nil || IsNil(o.CustomDiscountsAmount) {
		var ret float64
		return ret
	}
	return *o.CustomDiscountsAmount
}

// GetCustomDiscountsAmountOk returns a tuple with the CustomDiscountsAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetCustomDiscountsAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomDiscountsAmount) {
		return nil, false
	}
	return o.CustomDiscountsAmount, true
}

// HasCustomDiscountsAmount returns a boolean if a field has been set.
func (o *QuoteLineDto) HasCustomDiscountsAmount() bool {
	if o != nil && !IsNil(o.CustomDiscountsAmount) {
		return true
	}

	return false
}

// SetCustomDiscountsAmount gets a reference to the given float64 and assigns it to the CustomDiscountsAmount field.
func (o *QuoteLineDto) SetCustomDiscountsAmount(v float64) {
	o.CustomDiscountsAmount = &v
}

// GetCustomTaxBase returns the CustomTaxBase field value if set, zero value otherwise.
func (o *QuoteLineDto) GetCustomTaxBase() float64 {
	if o == nil || IsNil(o.CustomTaxBase) {
		var ret float64
		return ret
	}
	return *o.CustomTaxBase
}

// GetCustomTaxBaseOk returns a tuple with the CustomTaxBase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetCustomTaxBaseOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomTaxBase) {
		return nil, false
	}
	return o.CustomTaxBase, true
}

// HasCustomTaxBase returns a boolean if a field has been set.
func (o *QuoteLineDto) HasCustomTaxBase() bool {
	if o != nil && !IsNil(o.CustomTaxBase) {
		return true
	}

	return false
}

// SetCustomTaxBase gets a reference to the given float64 and assigns it to the CustomTaxBase field.
func (o *QuoteLineDto) SetCustomTaxBase(v float64) {
	o.CustomTaxBase = &v
}

// GetCustomSurchargesAmount returns the CustomSurchargesAmount field value if set, zero value otherwise.
func (o *QuoteLineDto) GetCustomSurchargesAmount() float64 {
	if o == nil || IsNil(o.CustomSurchargesAmount) {
		var ret float64
		return ret
	}
	return *o.CustomSurchargesAmount
}

// GetCustomSurchargesAmountOk returns a tuple with the CustomSurchargesAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetCustomSurchargesAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomSurchargesAmount) {
		return nil, false
	}
	return o.CustomSurchargesAmount, true
}

// HasCustomSurchargesAmount returns a boolean if a field has been set.
func (o *QuoteLineDto) HasCustomSurchargesAmount() bool {
	if o != nil && !IsNil(o.CustomSurchargesAmount) {
		return true
	}

	return false
}

// SetCustomSurchargesAmount gets a reference to the given float64 and assigns it to the CustomSurchargesAmount field.
func (o *QuoteLineDto) SetCustomSurchargesAmount(v float64) {
	o.CustomSurchargesAmount = &v
}

// GetCustomProfitAmount returns the CustomProfitAmount field value if set, zero value otherwise.
func (o *QuoteLineDto) GetCustomProfitAmount() float64 {
	if o == nil || IsNil(o.CustomProfitAmount) {
		var ret float64
		return ret
	}
	return *o.CustomProfitAmount
}

// GetCustomProfitAmountOk returns a tuple with the CustomProfitAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetCustomProfitAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomProfitAmount) {
		return nil, false
	}
	return o.CustomProfitAmount, true
}

// HasCustomProfitAmount returns a boolean if a field has been set.
func (o *QuoteLineDto) HasCustomProfitAmount() bool {
	if o != nil && !IsNil(o.CustomProfitAmount) {
		return true
	}

	return false
}

// SetCustomProfitAmount gets a reference to the given float64 and assigns it to the CustomProfitAmount field.
func (o *QuoteLineDto) SetCustomProfitAmount(v float64) {
	o.CustomProfitAmount = &v
}

// GetCustomShippingCostAmount returns the CustomShippingCostAmount field value if set, zero value otherwise.
func (o *QuoteLineDto) GetCustomShippingCostAmount() float64 {
	if o == nil || IsNil(o.CustomShippingCostAmount) {
		var ret float64
		return ret
	}
	return *o.CustomShippingCostAmount
}

// GetCustomShippingCostAmountOk returns a tuple with the CustomShippingCostAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetCustomShippingCostAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomShippingCostAmount) {
		return nil, false
	}
	return o.CustomShippingCostAmount, true
}

// HasCustomShippingCostAmount returns a boolean if a field has been set.
func (o *QuoteLineDto) HasCustomShippingCostAmount() bool {
	if o != nil && !IsNil(o.CustomShippingCostAmount) {
		return true
	}

	return false
}

// SetCustomShippingCostAmount gets a reference to the given float64 and assigns it to the CustomShippingCostAmount field.
func (o *QuoteLineDto) SetCustomShippingCostAmount(v float64) {
	o.CustomShippingCostAmount = &v
}

// GetCustomShippingTaxAmount returns the CustomShippingTaxAmount field value if set, zero value otherwise.
func (o *QuoteLineDto) GetCustomShippingTaxAmount() float64 {
	if o == nil || IsNil(o.CustomShippingTaxAmount) {
		var ret float64
		return ret
	}
	return *o.CustomShippingTaxAmount
}

// GetCustomShippingTaxAmountOk returns a tuple with the CustomShippingTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetCustomShippingTaxAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomShippingTaxAmount) {
		return nil, false
	}
	return o.CustomShippingTaxAmount, true
}

// HasCustomShippingTaxAmount returns a boolean if a field has been set.
func (o *QuoteLineDto) HasCustomShippingTaxAmount() bool {
	if o != nil && !IsNil(o.CustomShippingTaxAmount) {
		return true
	}

	return false
}

// SetCustomShippingTaxAmount gets a reference to the given float64 and assigns it to the CustomShippingTaxAmount field.
func (o *QuoteLineDto) SetCustomShippingTaxAmount(v float64) {
	o.CustomShippingTaxAmount = &v
}

// GetCustomTaxAmount returns the CustomTaxAmount field value if set, zero value otherwise.
func (o *QuoteLineDto) GetCustomTaxAmount() float64 {
	if o == nil || IsNil(o.CustomTaxAmount) {
		var ret float64
		return ret
	}
	return *o.CustomTaxAmount
}

// GetCustomTaxAmountOk returns a tuple with the CustomTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetCustomTaxAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomTaxAmount) {
		return nil, false
	}
	return o.CustomTaxAmount, true
}

// HasCustomTaxAmount returns a boolean if a field has been set.
func (o *QuoteLineDto) HasCustomTaxAmount() bool {
	if o != nil && !IsNil(o.CustomTaxAmount) {
		return true
	}

	return false
}

// SetCustomTaxAmount gets a reference to the given float64 and assigns it to the CustomTaxAmount field.
func (o *QuoteLineDto) SetCustomTaxAmount(v float64) {
	o.CustomTaxAmount = &v
}

// GetCustomWithholdingTaxAmount returns the CustomWithholdingTaxAmount field value if set, zero value otherwise.
func (o *QuoteLineDto) GetCustomWithholdingTaxAmount() float64 {
	if o == nil || IsNil(o.CustomWithholdingTaxAmount) {
		var ret float64
		return ret
	}
	return *o.CustomWithholdingTaxAmount
}

// GetCustomWithholdingTaxAmountOk returns a tuple with the CustomWithholdingTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetCustomWithholdingTaxAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomWithholdingTaxAmount) {
		return nil, false
	}
	return o.CustomWithholdingTaxAmount, true
}

// HasCustomWithholdingTaxAmount returns a boolean if a field has been set.
func (o *QuoteLineDto) HasCustomWithholdingTaxAmount() bool {
	if o != nil && !IsNil(o.CustomWithholdingTaxAmount) {
		return true
	}

	return false
}

// SetCustomWithholdingTaxAmount gets a reference to the given float64 and assigns it to the CustomWithholdingTaxAmount field.
func (o *QuoteLineDto) SetCustomWithholdingTaxAmount(v float64) {
	o.CustomWithholdingTaxAmount = &v
}

// GetCustomTotalAmount returns the CustomTotalAmount field value if set, zero value otherwise.
func (o *QuoteLineDto) GetCustomTotalAmount() float64 {
	if o == nil || IsNil(o.CustomTotalAmount) {
		var ret float64
		return ret
	}
	return *o.CustomTotalAmount
}

// GetCustomTotalAmountOk returns a tuple with the CustomTotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteLineDto) GetCustomTotalAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomTotalAmount) {
		return nil, false
	}
	return o.CustomTotalAmount, true
}

// HasCustomTotalAmount returns a boolean if a field has been set.
func (o *QuoteLineDto) HasCustomTotalAmount() bool {
	if o != nil && !IsNil(o.CustomTotalAmount) {
		return true
	}

	return false
}

// SetCustomTotalAmount gets a reference to the given float64 and assigns it to the CustomTotalAmount field.
func (o *QuoteLineDto) SetCustomTotalAmount(v float64) {
	o.CustomTotalAmount = &v
}

// GetReturnPolicyId returns the ReturnPolicyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetReturnPolicyId() string {
	if o == nil || IsNil(o.ReturnPolicyId.Get()) {
		var ret string
		return ret
	}
	return *o.ReturnPolicyId.Get()
}

// GetReturnPolicyIdOk returns a tuple with the ReturnPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetReturnPolicyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReturnPolicyId.Get(), o.ReturnPolicyId.IsSet()
}

// HasReturnPolicyId returns a boolean if a field has been set.
func (o *QuoteLineDto) HasReturnPolicyId() bool {
	if o != nil && o.ReturnPolicyId.IsSet() {
		return true
	}

	return false
}

// SetReturnPolicyId gets a reference to the given NullableString and assigns it to the ReturnPolicyId field.
func (o *QuoteLineDto) SetReturnPolicyId(v string) {
	o.ReturnPolicyId.Set(&v)
}
// SetReturnPolicyIdNil sets the value for ReturnPolicyId to be an explicit nil
func (o *QuoteLineDto) SetReturnPolicyIdNil() {
	o.ReturnPolicyId.Set(nil)
}

// UnsetReturnPolicyId ensures that no value is present for ReturnPolicyId, not even an explicit nil
func (o *QuoteLineDto) UnsetReturnPolicyId() {
	o.ReturnPolicyId.Unset()
}

// GetRefundPolicyId returns the RefundPolicyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetRefundPolicyId() string {
	if o == nil || IsNil(o.RefundPolicyId.Get()) {
		var ret string
		return ret
	}
	return *o.RefundPolicyId.Get()
}

// GetRefundPolicyIdOk returns a tuple with the RefundPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetRefundPolicyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RefundPolicyId.Get(), o.RefundPolicyId.IsSet()
}

// HasRefundPolicyId returns a boolean if a field has been set.
func (o *QuoteLineDto) HasRefundPolicyId() bool {
	if o != nil && o.RefundPolicyId.IsSet() {
		return true
	}

	return false
}

// SetRefundPolicyId gets a reference to the given NullableString and assigns it to the RefundPolicyId field.
func (o *QuoteLineDto) SetRefundPolicyId(v string) {
	o.RefundPolicyId.Set(&v)
}
// SetRefundPolicyIdNil sets the value for RefundPolicyId to be an explicit nil
func (o *QuoteLineDto) SetRefundPolicyIdNil() {
	o.RefundPolicyId.Set(nil)
}

// UnsetRefundPolicyId ensures that no value is present for RefundPolicyId, not even an explicit nil
func (o *QuoteLineDto) UnsetRefundPolicyId() {
	o.RefundPolicyId.Unset()
}

// GetWarrantyPolicyId returns the WarrantyPolicyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetWarrantyPolicyId() string {
	if o == nil || IsNil(o.WarrantyPolicyId.Get()) {
		var ret string
		return ret
	}
	return *o.WarrantyPolicyId.Get()
}

// GetWarrantyPolicyIdOk returns a tuple with the WarrantyPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetWarrantyPolicyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WarrantyPolicyId.Get(), o.WarrantyPolicyId.IsSet()
}

// HasWarrantyPolicyId returns a boolean if a field has been set.
func (o *QuoteLineDto) HasWarrantyPolicyId() bool {
	if o != nil && o.WarrantyPolicyId.IsSet() {
		return true
	}

	return false
}

// SetWarrantyPolicyId gets a reference to the given NullableString and assigns it to the WarrantyPolicyId field.
func (o *QuoteLineDto) SetWarrantyPolicyId(v string) {
	o.WarrantyPolicyId.Set(&v)
}
// SetWarrantyPolicyIdNil sets the value for WarrantyPolicyId to be an explicit nil
func (o *QuoteLineDto) SetWarrantyPolicyIdNil() {
	o.WarrantyPolicyId.Set(nil)
}

// UnsetWarrantyPolicyId ensures that no value is present for WarrantyPolicyId, not even an explicit nil
func (o *QuoteLineDto) UnsetWarrantyPolicyId() {
	o.WarrantyPolicyId.Unset()
}

// GetShipmentPolicyId returns the ShipmentPolicyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetShipmentPolicyId() string {
	if o == nil || IsNil(o.ShipmentPolicyId.Get()) {
		var ret string
		return ret
	}
	return *o.ShipmentPolicyId.Get()
}

// GetShipmentPolicyIdOk returns a tuple with the ShipmentPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetShipmentPolicyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShipmentPolicyId.Get(), o.ShipmentPolicyId.IsSet()
}

// HasShipmentPolicyId returns a boolean if a field has been set.
func (o *QuoteLineDto) HasShipmentPolicyId() bool {
	if o != nil && o.ShipmentPolicyId.IsSet() {
		return true
	}

	return false
}

// SetShipmentPolicyId gets a reference to the given NullableString and assigns it to the ShipmentPolicyId field.
func (o *QuoteLineDto) SetShipmentPolicyId(v string) {
	o.ShipmentPolicyId.Set(&v)
}
// SetShipmentPolicyIdNil sets the value for ShipmentPolicyId to be an explicit nil
func (o *QuoteLineDto) SetShipmentPolicyIdNil() {
	o.ShipmentPolicyId.Set(nil)
}

// UnsetShipmentPolicyId ensures that no value is present for ShipmentPolicyId, not even an explicit nil
func (o *QuoteLineDto) UnsetShipmentPolicyId() {
	o.ShipmentPolicyId.Unset()
}

// GetShippingLocationId returns the ShippingLocationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetShippingLocationId() string {
	if o == nil || IsNil(o.ShippingLocationId.Get()) {
		var ret string
		return ret
	}
	return *o.ShippingLocationId.Get()
}

// GetShippingLocationIdOk returns a tuple with the ShippingLocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetShippingLocationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippingLocationId.Get(), o.ShippingLocationId.IsSet()
}

// HasShippingLocationId returns a boolean if a field has been set.
func (o *QuoteLineDto) HasShippingLocationId() bool {
	if o != nil && o.ShippingLocationId.IsSet() {
		return true
	}

	return false
}

// SetShippingLocationId gets a reference to the given NullableString and assigns it to the ShippingLocationId field.
func (o *QuoteLineDto) SetShippingLocationId(v string) {
	o.ShippingLocationId.Set(&v)
}
// SetShippingLocationIdNil sets the value for ShippingLocationId to be an explicit nil
func (o *QuoteLineDto) SetShippingLocationIdNil() {
	o.ShippingLocationId.Set(nil)
}

// UnsetShippingLocationId ensures that no value is present for ShippingLocationId, not even an explicit nil
func (o *QuoteLineDto) UnsetShippingLocationId() {
	o.ShippingLocationId.Unset()
}

// GetLocationId returns the LocationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetLocationId() string {
	if o == nil || IsNil(o.LocationId.Get()) {
		var ret string
		return ret
	}
	return *o.LocationId.Get()
}

// GetLocationIdOk returns a tuple with the LocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetLocationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocationId.Get(), o.LocationId.IsSet()
}

// HasLocationId returns a boolean if a field has been set.
func (o *QuoteLineDto) HasLocationId() bool {
	if o != nil && o.LocationId.IsSet() {
		return true
	}

	return false
}

// SetLocationId gets a reference to the given NullableString and assigns it to the LocationId field.
func (o *QuoteLineDto) SetLocationId(v string) {
	o.LocationId.Set(&v)
}
// SetLocationIdNil sets the value for LocationId to be an explicit nil
func (o *QuoteLineDto) SetLocationIdNil() {
	o.LocationId.Set(nil)
}

// UnsetLocationId ensures that no value is present for LocationId, not even an explicit nil
func (o *QuoteLineDto) UnsetLocationId() {
	o.LocationId.Unset()
}

// GetQuoteItemRecordId returns the QuoteItemRecordId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetQuoteItemRecordId() string {
	if o == nil || IsNil(o.QuoteItemRecordId.Get()) {
		var ret string
		return ret
	}
	return *o.QuoteItemRecordId.Get()
}

// GetQuoteItemRecordIdOk returns a tuple with the QuoteItemRecordId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetQuoteItemRecordIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.QuoteItemRecordId.Get(), o.QuoteItemRecordId.IsSet()
}

// HasQuoteItemRecordId returns a boolean if a field has been set.
func (o *QuoteLineDto) HasQuoteItemRecordId() bool {
	if o != nil && o.QuoteItemRecordId.IsSet() {
		return true
	}

	return false
}

// SetQuoteItemRecordId gets a reference to the given NullableString and assigns it to the QuoteItemRecordId field.
func (o *QuoteLineDto) SetQuoteItemRecordId(v string) {
	o.QuoteItemRecordId.Set(&v)
}
// SetQuoteItemRecordIdNil sets the value for QuoteItemRecordId to be an explicit nil
func (o *QuoteLineDto) SetQuoteItemRecordIdNil() {
	o.QuoteItemRecordId.Set(nil)
}

// UnsetQuoteItemRecordId ensures that no value is present for QuoteItemRecordId, not even an explicit nil
func (o *QuoteLineDto) UnsetQuoteItemRecordId() {
	o.QuoteItemRecordId.Unset()
}

// GetBusinessProfileRecordId returns the BusinessProfileRecordId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetBusinessProfileRecordId() string {
	if o == nil || IsNil(o.BusinessProfileRecordId.Get()) {
		var ret string
		return ret
	}
	return *o.BusinessProfileRecordId.Get()
}

// GetBusinessProfileRecordIdOk returns a tuple with the BusinessProfileRecordId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetBusinessProfileRecordIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BusinessProfileRecordId.Get(), o.BusinessProfileRecordId.IsSet()
}

// HasBusinessProfileRecordId returns a boolean if a field has been set.
func (o *QuoteLineDto) HasBusinessProfileRecordId() bool {
	if o != nil && o.BusinessProfileRecordId.IsSet() {
		return true
	}

	return false
}

// SetBusinessProfileRecordId gets a reference to the given NullableString and assigns it to the BusinessProfileRecordId field.
func (o *QuoteLineDto) SetBusinessProfileRecordId(v string) {
	o.BusinessProfileRecordId.Set(&v)
}
// SetBusinessProfileRecordIdNil sets the value for BusinessProfileRecordId to be an explicit nil
func (o *QuoteLineDto) SetBusinessProfileRecordIdNil() {
	o.BusinessProfileRecordId.Set(nil)
}

// UnsetBusinessProfileRecordId ensures that no value is present for BusinessProfileRecordId, not even an explicit nil
func (o *QuoteLineDto) UnsetBusinessProfileRecordId() {
	o.BusinessProfileRecordId.Unset()
}

// GetParentBillingItemRecordId returns the ParentBillingItemRecordId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetParentBillingItemRecordId() string {
	if o == nil || IsNil(o.ParentBillingItemRecordId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentBillingItemRecordId.Get()
}

// GetParentBillingItemRecordIdOk returns a tuple with the ParentBillingItemRecordId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetParentBillingItemRecordIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentBillingItemRecordId.Get(), o.ParentBillingItemRecordId.IsSet()
}

// HasParentBillingItemRecordId returns a boolean if a field has been set.
func (o *QuoteLineDto) HasParentBillingItemRecordId() bool {
	if o != nil && o.ParentBillingItemRecordId.IsSet() {
		return true
	}

	return false
}

// SetParentBillingItemRecordId gets a reference to the given NullableString and assigns it to the ParentBillingItemRecordId field.
func (o *QuoteLineDto) SetParentBillingItemRecordId(v string) {
	o.ParentBillingItemRecordId.Set(&v)
}
// SetParentBillingItemRecordIdNil sets the value for ParentBillingItemRecordId to be an explicit nil
func (o *QuoteLineDto) SetParentBillingItemRecordIdNil() {
	o.ParentBillingItemRecordId.Set(nil)
}

// UnsetParentBillingItemRecordId ensures that no value is present for ParentBillingItemRecordId, not even an explicit nil
func (o *QuoteLineDto) UnsetParentBillingItemRecordId() {
	o.ParentBillingItemRecordId.Unset()
}

// GetQuoteId returns the QuoteId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteLineDto) GetQuoteId() string {
	if o == nil || IsNil(o.QuoteId.Get()) {
		var ret string
		return ret
	}
	return *o.QuoteId.Get()
}

// GetQuoteIdOk returns a tuple with the QuoteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteLineDto) GetQuoteIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.QuoteId.Get(), o.QuoteId.IsSet()
}

// HasQuoteId returns a boolean if a field has been set.
func (o *QuoteLineDto) HasQuoteId() bool {
	if o != nil && o.QuoteId.IsSet() {
		return true
	}

	return false
}

// SetQuoteId gets a reference to the given NullableString and assigns it to the QuoteId field.
func (o *QuoteLineDto) SetQuoteId(v string) {
	o.QuoteId.Set(&v)
}
// SetQuoteIdNil sets the value for QuoteId to be an explicit nil
func (o *QuoteLineDto) SetQuoteIdNil() {
	o.QuoteId.Set(nil)
}

// UnsetQuoteId ensures that no value is present for QuoteId, not even an explicit nil
func (o *QuoteLineDto) UnsetQuoteId() {
	o.QuoteId.Unset()
}

func (o QuoteLineDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteLineDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Timestamp.IsSet() {
		toSerialize["timestamp"] = o.Timestamp.Get()
	}
	if !IsNil(o.Closed) {
		toSerialize["closed"] = o.Closed
	}
	if o.ItemId.IsSet() {
		toSerialize["itemId"] = o.ItemId.Get()
	}
	if o.ItemTitle.IsSet() {
		toSerialize["itemTitle"] = o.ItemTitle.Get()
	}
	if o.ItemShortDescription.IsSet() {
		toSerialize["itemShortDescription"] = o.ItemShortDescription.Get()
	}
	if o.ItemPrimaryImageUrl.IsSet() {
		toSerialize["itemPrimaryImageUrl"] = o.ItemPrimaryImageUrl.Get()
	}
	if o.ShippingPolicyId.IsSet() {
		toSerialize["shippingPolicyId"] = o.ShippingPolicyId.Get()
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.EnrollmentId.IsSet() {
		toSerialize["enrollmentId"] = o.EnrollmentId.Get()
	}
	if o.CurrencyId.IsSet() {
		toSerialize["currencyId"] = o.CurrencyId.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.Free) {
		toSerialize["free"] = o.Free
	}
	if o.FreeReason.IsSet() {
		toSerialize["freeReason"] = o.FreeReason.Get()
	}
	if o.FreeReasonCode.IsSet() {
		toSerialize["freeReasonCode"] = o.FreeReasonCode.Get()
	}
	if o.Data.IsSet() {
		toSerialize["data"] = o.Data.Get()
	}
	if o.DataLabel.IsSet() {
		toSerialize["dataLabel"] = o.DataLabel.Get()
	}
	if o.Data1.IsSet() {
		toSerialize["data1"] = o.Data1.Get()
	}
	if o.Data1Label.IsSet() {
		toSerialize["data1Label"] = o.Data1Label.Get()
	}
	if o.Data2.IsSet() {
		toSerialize["data2"] = o.Data2.Get()
	}
	if o.Data2Label.IsSet() {
		toSerialize["data2Label"] = o.Data2Label.Get()
	}
	if o.Data3.IsSet() {
		toSerialize["data3"] = o.Data3.Get()
	}
	if o.Data3Label.IsSet() {
		toSerialize["data3Label"] = o.Data3Label.Get()
	}
	if o.Data4.IsSet() {
		toSerialize["data4"] = o.Data4.Get()
	}
	if o.Data4Label.IsSet() {
		toSerialize["data4Label"] = o.Data4Label.Get()
	}
	if o.Data5.IsSet() {
		toSerialize["data5"] = o.Data5.Get()
	}
	if o.Data5Label.IsSet() {
		toSerialize["data5Label"] = o.Data5Label.Get()
	}
	if o.Data6.IsSet() {
		toSerialize["data6"] = o.Data6.Get()
	}
	if o.Data6Label.IsSet() {
		toSerialize["data6Label"] = o.Data6Label.Get()
	}
	if o.Data7.IsSet() {
		toSerialize["data7"] = o.Data7.Get()
	}
	if o.Data7Label.IsSet() {
		toSerialize["data7Label"] = o.Data7Label.Get()
	}
	if o.Data8.IsSet() {
		toSerialize["data8"] = o.Data8.Get()
	}
	if o.Data8Label.IsSet() {
		toSerialize["data8Label"] = o.Data8Label.Get()
	}
	if o.Data9.IsSet() {
		toSerialize["data9"] = o.Data9.Get()
	}
	if o.Data9Label.IsSet() {
		toSerialize["data9Label"] = o.Data9Label.Get()
	}
	if o.ItemPriceId.IsSet() {
		toSerialize["itemPriceId"] = o.ItemPriceId.Get()
	}
	if o.PriceListItemId.IsSet() {
		toSerialize["priceListItemId"] = o.PriceListItemId.Get()
	}
	if o.UnitId.IsSet() {
		toSerialize["unitId"] = o.UnitId.Get()
	}
	if o.UnitGroupId.IsSet() {
		toSerialize["unitGroupId"] = o.UnitGroupId.Get()
	}
	if !IsNil(o.TaxCalculationMethod) {
		toSerialize["taxCalculationMethod"] = o.TaxCalculationMethod
	}
	if !IsNil(o.CostCalculationMethod) {
		toSerialize["costCalculationMethod"] = o.CostCalculationMethod
	}
	if o.ForexRatesSnapshot.IsSet() {
		toSerialize["forexRatesSnapshot"] = o.ForexRatesSnapshot.Get()
	}
	if !IsNil(o.ForexRate) {
		toSerialize["forexRate"] = o.ForexRate
	}
	if !IsNil(o.TotalBaseAmountInUsd) {
		toSerialize["totalBaseAmountInUsd"] = o.TotalBaseAmountInUsd
	}
	if !IsNil(o.TotalProfitInUsd) {
		toSerialize["totalProfitInUsd"] = o.TotalProfitInUsd
	}
	if !IsNil(o.TotalDetailAmountInUsd) {
		toSerialize["totalDetailAmountInUsd"] = o.TotalDetailAmountInUsd
	}
	if !IsNil(o.TotalTaxBaseInUsd) {
		toSerialize["totalTaxBaseInUsd"] = o.TotalTaxBaseInUsd
	}
	if !IsNil(o.TotalDiscountsInUsd) {
		toSerialize["totalDiscountsInUsd"] = o.TotalDiscountsInUsd
	}
	if !IsNil(o.TotalTaxesInUsd) {
		toSerialize["totalTaxesInUsd"] = o.TotalTaxesInUsd
	}
	if !IsNil(o.TotalWithholdingTaxesInUsd) {
		toSerialize["totalWithholdingTaxesInUsd"] = o.TotalWithholdingTaxesInUsd
	}
	if !IsNil(o.TotalShippingCostInUsd) {
		toSerialize["totalShippingCostInUsd"] = o.TotalShippingCostInUsd
	}
	if !IsNil(o.TotalShippingTaxesInUsd) {
		toSerialize["totalShippingTaxesInUsd"] = o.TotalShippingTaxesInUsd
	}
	if !IsNil(o.TotalWarrantyCostInUsd) {
		toSerialize["totalWarrantyCostInUsd"] = o.TotalWarrantyCostInUsd
	}
	if !IsNil(o.TotalReturnCostInUsd) {
		toSerialize["totalReturnCostInUsd"] = o.TotalReturnCostInUsd
	}
	if !IsNil(o.TotalRefundCostInUsd) {
		toSerialize["totalRefundCostInUsd"] = o.TotalRefundCostInUsd
	}
	if !IsNil(o.TotalSurchargesInUsd) {
		toSerialize["totalSurchargesInUsd"] = o.TotalSurchargesInUsd
	}
	if !IsNil(o.TotalAmountInUsd) {
		toSerialize["totalAmountInUsd"] = o.TotalAmountInUsd
	}
	if !IsNil(o.TotalGlobalDiscountsInUsd) {
		toSerialize["totalGlobalDiscountsInUsd"] = o.TotalGlobalDiscountsInUsd
	}
	if !IsNil(o.TotalGlobalSurchargesInUsd) {
		toSerialize["totalGlobalSurchargesInUsd"] = o.TotalGlobalSurchargesInUsd
	}
	if !IsNil(o.CustomGlobalSurchargesAmount) {
		toSerialize["customGlobalSurchargesAmount"] = o.CustomGlobalSurchargesAmount
	}
	if !IsNil(o.CustomGlobalDiscountsAmount) {
		toSerialize["customGlobalDiscountsAmount"] = o.CustomGlobalDiscountsAmount
	}
	if !IsNil(o.CustomBaseAmount) {
		toSerialize["customBaseAmount"] = o.CustomBaseAmount
	}
	if !IsNil(o.CustomDetailAmount) {
		toSerialize["customDetailAmount"] = o.CustomDetailAmount
	}
	if !IsNil(o.CustomDiscountsAmount) {
		toSerialize["customDiscountsAmount"] = o.CustomDiscountsAmount
	}
	if !IsNil(o.CustomTaxBase) {
		toSerialize["customTaxBase"] = o.CustomTaxBase
	}
	if !IsNil(o.CustomSurchargesAmount) {
		toSerialize["customSurchargesAmount"] = o.CustomSurchargesAmount
	}
	if !IsNil(o.CustomProfitAmount) {
		toSerialize["customProfitAmount"] = o.CustomProfitAmount
	}
	if !IsNil(o.CustomShippingCostAmount) {
		toSerialize["customShippingCostAmount"] = o.CustomShippingCostAmount
	}
	if !IsNil(o.CustomShippingTaxAmount) {
		toSerialize["customShippingTaxAmount"] = o.CustomShippingTaxAmount
	}
	if !IsNil(o.CustomTaxAmount) {
		toSerialize["customTaxAmount"] = o.CustomTaxAmount
	}
	if !IsNil(o.CustomWithholdingTaxAmount) {
		toSerialize["customWithholdingTaxAmount"] = o.CustomWithholdingTaxAmount
	}
	if !IsNil(o.CustomTotalAmount) {
		toSerialize["customTotalAmount"] = o.CustomTotalAmount
	}
	if o.ReturnPolicyId.IsSet() {
		toSerialize["returnPolicyId"] = o.ReturnPolicyId.Get()
	}
	if o.RefundPolicyId.IsSet() {
		toSerialize["refundPolicyId"] = o.RefundPolicyId.Get()
	}
	if o.WarrantyPolicyId.IsSet() {
		toSerialize["warrantyPolicyId"] = o.WarrantyPolicyId.Get()
	}
	if o.ShipmentPolicyId.IsSet() {
		toSerialize["shipmentPolicyId"] = o.ShipmentPolicyId.Get()
	}
	if o.ShippingLocationId.IsSet() {
		toSerialize["shippingLocationId"] = o.ShippingLocationId.Get()
	}
	if o.LocationId.IsSet() {
		toSerialize["locationId"] = o.LocationId.Get()
	}
	if o.QuoteItemRecordId.IsSet() {
		toSerialize["quoteItemRecordId"] = o.QuoteItemRecordId.Get()
	}
	if o.BusinessProfileRecordId.IsSet() {
		toSerialize["businessProfileRecordId"] = o.BusinessProfileRecordId.Get()
	}
	if o.ParentBillingItemRecordId.IsSet() {
		toSerialize["parentBillingItemRecordId"] = o.ParentBillingItemRecordId.Get()
	}
	if o.QuoteId.IsSet() {
		toSerialize["quoteId"] = o.QuoteId.Get()
	}
	return toSerialize, nil
}

type NullableQuoteLineDto struct {
	value *QuoteLineDto
	isSet bool
}

func (v NullableQuoteLineDto) Get() *QuoteLineDto {
	return v.value
}

func (v *NullableQuoteLineDto) Set(val *QuoteLineDto) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteLineDto) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteLineDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteLineDto(val *QuoteLineDto) *NullableQuoteLineDto {
	return &NullableQuoteLineDto{value: val, isSet: true}
}

func (v NullableQuoteLineDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteLineDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


