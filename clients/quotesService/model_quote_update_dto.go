/*
QuotesService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the QuoteUpdateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteUpdateDto{}

// QuoteUpdateDto struct for QuoteUpdateDto
type QuoteUpdateDto struct {
	Closed *bool `json:"closed,omitempty"`
	Title NullableString `json:"title,omitempty"`
	UserId NullableString `json:"userId,omitempty"`
	TenantId NullableString `json:"tenantId,omitempty"`
	ForexRate *float64 `json:"forexRate,omitempty"`
	CurrencyId NullableString `json:"currencyId,omitempty"`
	PriceListId NullableString `json:"priceListId,omitempty"`
	Description NullableString `json:"description,omitempty"`
	EnrollmentId NullableString `json:"enrollmentId,omitempty"`
	IndividualId NullableString `json:"individualId,omitempty"`
	PaymentTermId NullableString `json:"paymentTermId,omitempty"`
	OrganizationId NullableString `json:"organizationId,omitempty"`
	ReceiverTenantId NullableString `json:"receiverTenantId,omitempty"`
	FirstName NullableString `json:"firstName,omitempty"`
	LastName NullableString `json:"lastName,omitempty"`
	CompanyName NullableString `json:"companyName,omitempty"`
	BillingEmail NullableString `json:"billingEmail,omitempty"`
	AddressLine1 NullableString `json:"addressLine1,omitempty"`
	AddressLine2 NullableString `json:"addressLine2,omitempty"`
	PostalCode NullableString `json:"postalCode,omitempty"`
	CountryId NullableString `json:"countryId,omitempty"`
	StateId NullableString `json:"stateId,omitempty"`
	CityId NullableString `json:"cityId,omitempty"`
	BillingLocationId NullableString `json:"billingLocationId,omitempty"`
	ShippingLocationId NullableString `json:"shippingLocationId,omitempty"`
	ShippingMethodId NullableString `json:"shippingMethodId,omitempty"`
	CartId NullableString `json:"cartId,omitempty"`
	Total *float64 `json:"total,omitempty"`
	TotalTaxes *float64 `json:"totalTaxes,omitempty"`
	QuoteStatus *int32 `json:"quoteStatus,omitempty"`
	FreightTerms *int32 `json:"freightTerms,omitempty"`
	CostCalculationMethod *int32 `json:"costCalculationMethod,omitempty"`
	EffectiveTo NullableTime `json:"effectiveTo,omitempty"`
	EffectiveFrom NullableTime `json:"effectiveFrom,omitempty"`
	CustomTaxAmount *float64 `json:"customTaxAmount,omitempty"`
	CustomTotalAmount *float64 `json:"customTotalAmount,omitempty"`
	CustomDetailAmount *float64 `json:"customDetailAmount,omitempty"`
	CustomProfitAmount *float64 `json:"customProfitAmount,omitempty"`
	CustomDiscountsAmount *float64 `json:"customDiscountsAmount,omitempty"`
	CustomSurchargesAmount *float64 `json:"customSurchargesAmount,omitempty"`
	CustomShippingCostAmount *float64 `json:"customShippingCostAmount,omitempty"`
	CustomShippingTaxAmount *float64 `json:"customShippingTaxAmount,omitempty"`
	CustomWithholdingTaxAmount *float64 `json:"customWithholdingTaxAmount,omitempty"`
}

// NewQuoteUpdateDto instantiates a new QuoteUpdateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteUpdateDto() *QuoteUpdateDto {
	this := QuoteUpdateDto{}
	return &this
}

// NewQuoteUpdateDtoWithDefaults instantiates a new QuoteUpdateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteUpdateDtoWithDefaults() *QuoteUpdateDto {
	this := QuoteUpdateDto{}
	return &this
}

// GetClosed returns the Closed field value if set, zero value otherwise.
func (o *QuoteUpdateDto) GetClosed() bool {
	if o == nil || IsNil(o.Closed) {
		var ret bool
		return ret
	}
	return *o.Closed
}

// GetClosedOk returns a tuple with the Closed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteUpdateDto) GetClosedOk() (*bool, bool) {
	if o == nil || IsNil(o.Closed) {
		return nil, false
	}
	return o.Closed, true
}

// HasClosed returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasClosed() bool {
	if o != nil && !IsNil(o.Closed) {
		return true
	}

	return false
}

// SetClosed gets a reference to the given bool and assigns it to the Closed field.
func (o *QuoteUpdateDto) SetClosed(v bool) {
	o.Closed = &v
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *QuoteUpdateDto) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *QuoteUpdateDto) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *QuoteUpdateDto) UnsetTitle() {
	o.Title.Unset()
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetUserId() string {
	if o == nil || IsNil(o.UserId.Get()) {
		var ret string
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableString and assigns it to the UserId field.
func (o *QuoteUpdateDto) SetUserId(v string) {
	o.UserId.Set(&v)
}
// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *QuoteUpdateDto) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *QuoteUpdateDto) UnsetUserId() {
	o.UserId.Unset()
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *QuoteUpdateDto) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *QuoteUpdateDto) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *QuoteUpdateDto) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetForexRate returns the ForexRate field value if set, zero value otherwise.
func (o *QuoteUpdateDto) GetForexRate() float64 {
	if o == nil || IsNil(o.ForexRate) {
		var ret float64
		return ret
	}
	return *o.ForexRate
}

// GetForexRateOk returns a tuple with the ForexRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteUpdateDto) GetForexRateOk() (*float64, bool) {
	if o == nil || IsNil(o.ForexRate) {
		return nil, false
	}
	return o.ForexRate, true
}

// HasForexRate returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasForexRate() bool {
	if o != nil && !IsNil(o.ForexRate) {
		return true
	}

	return false
}

// SetForexRate gets a reference to the given float64 and assigns it to the ForexRate field.
func (o *QuoteUpdateDto) SetForexRate(v float64) {
	o.ForexRate = &v
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetCurrencyId() string {
	if o == nil || IsNil(o.CurrencyId.Get()) {
		var ret string
		return ret
	}
	return *o.CurrencyId.Get()
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetCurrencyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrencyId.Get(), o.CurrencyId.IsSet()
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasCurrencyId() bool {
	if o != nil && o.CurrencyId.IsSet() {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given NullableString and assigns it to the CurrencyId field.
func (o *QuoteUpdateDto) SetCurrencyId(v string) {
	o.CurrencyId.Set(&v)
}
// SetCurrencyIdNil sets the value for CurrencyId to be an explicit nil
func (o *QuoteUpdateDto) SetCurrencyIdNil() {
	o.CurrencyId.Set(nil)
}

// UnsetCurrencyId ensures that no value is present for CurrencyId, not even an explicit nil
func (o *QuoteUpdateDto) UnsetCurrencyId() {
	o.CurrencyId.Unset()
}

// GetPriceListId returns the PriceListId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetPriceListId() string {
	if o == nil || IsNil(o.PriceListId.Get()) {
		var ret string
		return ret
	}
	return *o.PriceListId.Get()
}

// GetPriceListIdOk returns a tuple with the PriceListId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetPriceListIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceListId.Get(), o.PriceListId.IsSet()
}

// HasPriceListId returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasPriceListId() bool {
	if o != nil && o.PriceListId.IsSet() {
		return true
	}

	return false
}

// SetPriceListId gets a reference to the given NullableString and assigns it to the PriceListId field.
func (o *QuoteUpdateDto) SetPriceListId(v string) {
	o.PriceListId.Set(&v)
}
// SetPriceListIdNil sets the value for PriceListId to be an explicit nil
func (o *QuoteUpdateDto) SetPriceListIdNil() {
	o.PriceListId.Set(nil)
}

// UnsetPriceListId ensures that no value is present for PriceListId, not even an explicit nil
func (o *QuoteUpdateDto) UnsetPriceListId() {
	o.PriceListId.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *QuoteUpdateDto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *QuoteUpdateDto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *QuoteUpdateDto) UnsetDescription() {
	o.Description.Unset()
}

// GetEnrollmentId returns the EnrollmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetEnrollmentId() string {
	if o == nil || IsNil(o.EnrollmentId.Get()) {
		var ret string
		return ret
	}
	return *o.EnrollmentId.Get()
}

// GetEnrollmentIdOk returns a tuple with the EnrollmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetEnrollmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnrollmentId.Get(), o.EnrollmentId.IsSet()
}

// HasEnrollmentId returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasEnrollmentId() bool {
	if o != nil && o.EnrollmentId.IsSet() {
		return true
	}

	return false
}

// SetEnrollmentId gets a reference to the given NullableString and assigns it to the EnrollmentId field.
func (o *QuoteUpdateDto) SetEnrollmentId(v string) {
	o.EnrollmentId.Set(&v)
}
// SetEnrollmentIdNil sets the value for EnrollmentId to be an explicit nil
func (o *QuoteUpdateDto) SetEnrollmentIdNil() {
	o.EnrollmentId.Set(nil)
}

// UnsetEnrollmentId ensures that no value is present for EnrollmentId, not even an explicit nil
func (o *QuoteUpdateDto) UnsetEnrollmentId() {
	o.EnrollmentId.Unset()
}

// GetIndividualId returns the IndividualId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetIndividualId() string {
	if o == nil || IsNil(o.IndividualId.Get()) {
		var ret string
		return ret
	}
	return *o.IndividualId.Get()
}

// GetIndividualIdOk returns a tuple with the IndividualId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetIndividualIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IndividualId.Get(), o.IndividualId.IsSet()
}

// HasIndividualId returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasIndividualId() bool {
	if o != nil && o.IndividualId.IsSet() {
		return true
	}

	return false
}

// SetIndividualId gets a reference to the given NullableString and assigns it to the IndividualId field.
func (o *QuoteUpdateDto) SetIndividualId(v string) {
	o.IndividualId.Set(&v)
}
// SetIndividualIdNil sets the value for IndividualId to be an explicit nil
func (o *QuoteUpdateDto) SetIndividualIdNil() {
	o.IndividualId.Set(nil)
}

// UnsetIndividualId ensures that no value is present for IndividualId, not even an explicit nil
func (o *QuoteUpdateDto) UnsetIndividualId() {
	o.IndividualId.Unset()
}

// GetPaymentTermId returns the PaymentTermId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetPaymentTermId() string {
	if o == nil || IsNil(o.PaymentTermId.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentTermId.Get()
}

// GetPaymentTermIdOk returns a tuple with the PaymentTermId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetPaymentTermIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentTermId.Get(), o.PaymentTermId.IsSet()
}

// HasPaymentTermId returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasPaymentTermId() bool {
	if o != nil && o.PaymentTermId.IsSet() {
		return true
	}

	return false
}

// SetPaymentTermId gets a reference to the given NullableString and assigns it to the PaymentTermId field.
func (o *QuoteUpdateDto) SetPaymentTermId(v string) {
	o.PaymentTermId.Set(&v)
}
// SetPaymentTermIdNil sets the value for PaymentTermId to be an explicit nil
func (o *QuoteUpdateDto) SetPaymentTermIdNil() {
	o.PaymentTermId.Set(nil)
}

// UnsetPaymentTermId ensures that no value is present for PaymentTermId, not even an explicit nil
func (o *QuoteUpdateDto) UnsetPaymentTermId() {
	o.PaymentTermId.Unset()
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId.Get()) {
		var ret string
		return ret
	}
	return *o.OrganizationId.Get()
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationId.Get(), o.OrganizationId.IsSet()
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasOrganizationId() bool {
	if o != nil && o.OrganizationId.IsSet() {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given NullableString and assigns it to the OrganizationId field.
func (o *QuoteUpdateDto) SetOrganizationId(v string) {
	o.OrganizationId.Set(&v)
}
// SetOrganizationIdNil sets the value for OrganizationId to be an explicit nil
func (o *QuoteUpdateDto) SetOrganizationIdNil() {
	o.OrganizationId.Set(nil)
}

// UnsetOrganizationId ensures that no value is present for OrganizationId, not even an explicit nil
func (o *QuoteUpdateDto) UnsetOrganizationId() {
	o.OrganizationId.Unset()
}

// GetReceiverTenantId returns the ReceiverTenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetReceiverTenantId() string {
	if o == nil || IsNil(o.ReceiverTenantId.Get()) {
		var ret string
		return ret
	}
	return *o.ReceiverTenantId.Get()
}

// GetReceiverTenantIdOk returns a tuple with the ReceiverTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetReceiverTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiverTenantId.Get(), o.ReceiverTenantId.IsSet()
}

// HasReceiverTenantId returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasReceiverTenantId() bool {
	if o != nil && o.ReceiverTenantId.IsSet() {
		return true
	}

	return false
}

// SetReceiverTenantId gets a reference to the given NullableString and assigns it to the ReceiverTenantId field.
func (o *QuoteUpdateDto) SetReceiverTenantId(v string) {
	o.ReceiverTenantId.Set(&v)
}
// SetReceiverTenantIdNil sets the value for ReceiverTenantId to be an explicit nil
func (o *QuoteUpdateDto) SetReceiverTenantIdNil() {
	o.ReceiverTenantId.Set(nil)
}

// UnsetReceiverTenantId ensures that no value is present for ReceiverTenantId, not even an explicit nil
func (o *QuoteUpdateDto) UnsetReceiverTenantId() {
	o.ReceiverTenantId.Unset()
}

// GetFirstName returns the FirstName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetFirstName() string {
	if o == nil || IsNil(o.FirstName.Get()) {
		var ret string
		return ret
	}
	return *o.FirstName.Get()
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstName.Get(), o.FirstName.IsSet()
}

// HasFirstName returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasFirstName() bool {
	if o != nil && o.FirstName.IsSet() {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given NullableString and assigns it to the FirstName field.
func (o *QuoteUpdateDto) SetFirstName(v string) {
	o.FirstName.Set(&v)
}
// SetFirstNameNil sets the value for FirstName to be an explicit nil
func (o *QuoteUpdateDto) SetFirstNameNil() {
	o.FirstName.Set(nil)
}

// UnsetFirstName ensures that no value is present for FirstName, not even an explicit nil
func (o *QuoteUpdateDto) UnsetFirstName() {
	o.FirstName.Unset()
}

// GetLastName returns the LastName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetLastName() string {
	if o == nil || IsNil(o.LastName.Get()) {
		var ret string
		return ret
	}
	return *o.LastName.Get()
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastName.Get(), o.LastName.IsSet()
}

// HasLastName returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasLastName() bool {
	if o != nil && o.LastName.IsSet() {
		return true
	}

	return false
}

// SetLastName gets a reference to the given NullableString and assigns it to the LastName field.
func (o *QuoteUpdateDto) SetLastName(v string) {
	o.LastName.Set(&v)
}
// SetLastNameNil sets the value for LastName to be an explicit nil
func (o *QuoteUpdateDto) SetLastNameNil() {
	o.LastName.Set(nil)
}

// UnsetLastName ensures that no value is present for LastName, not even an explicit nil
func (o *QuoteUpdateDto) UnsetLastName() {
	o.LastName.Unset()
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName.Get()) {
		var ret string
		return ret
	}
	return *o.CompanyName.Get()
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetCompanyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyName.Get(), o.CompanyName.IsSet()
}

// HasCompanyName returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasCompanyName() bool {
	if o != nil && o.CompanyName.IsSet() {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given NullableString and assigns it to the CompanyName field.
func (o *QuoteUpdateDto) SetCompanyName(v string) {
	o.CompanyName.Set(&v)
}
// SetCompanyNameNil sets the value for CompanyName to be an explicit nil
func (o *QuoteUpdateDto) SetCompanyNameNil() {
	o.CompanyName.Set(nil)
}

// UnsetCompanyName ensures that no value is present for CompanyName, not even an explicit nil
func (o *QuoteUpdateDto) UnsetCompanyName() {
	o.CompanyName.Unset()
}

// GetBillingEmail returns the BillingEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetBillingEmail() string {
	if o == nil || IsNil(o.BillingEmail.Get()) {
		var ret string
		return ret
	}
	return *o.BillingEmail.Get()
}

// GetBillingEmailOk returns a tuple with the BillingEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetBillingEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingEmail.Get(), o.BillingEmail.IsSet()
}

// HasBillingEmail returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasBillingEmail() bool {
	if o != nil && o.BillingEmail.IsSet() {
		return true
	}

	return false
}

// SetBillingEmail gets a reference to the given NullableString and assigns it to the BillingEmail field.
func (o *QuoteUpdateDto) SetBillingEmail(v string) {
	o.BillingEmail.Set(&v)
}
// SetBillingEmailNil sets the value for BillingEmail to be an explicit nil
func (o *QuoteUpdateDto) SetBillingEmailNil() {
	o.BillingEmail.Set(nil)
}

// UnsetBillingEmail ensures that no value is present for BillingEmail, not even an explicit nil
func (o *QuoteUpdateDto) UnsetBillingEmail() {
	o.BillingEmail.Unset()
}

// GetAddressLine1 returns the AddressLine1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetAddressLine1() string {
	if o == nil || IsNil(o.AddressLine1.Get()) {
		var ret string
		return ret
	}
	return *o.AddressLine1.Get()
}

// GetAddressLine1Ok returns a tuple with the AddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetAddressLine1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressLine1.Get(), o.AddressLine1.IsSet()
}

// HasAddressLine1 returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasAddressLine1() bool {
	if o != nil && o.AddressLine1.IsSet() {
		return true
	}

	return false
}

// SetAddressLine1 gets a reference to the given NullableString and assigns it to the AddressLine1 field.
func (o *QuoteUpdateDto) SetAddressLine1(v string) {
	o.AddressLine1.Set(&v)
}
// SetAddressLine1Nil sets the value for AddressLine1 to be an explicit nil
func (o *QuoteUpdateDto) SetAddressLine1Nil() {
	o.AddressLine1.Set(nil)
}

// UnsetAddressLine1 ensures that no value is present for AddressLine1, not even an explicit nil
func (o *QuoteUpdateDto) UnsetAddressLine1() {
	o.AddressLine1.Unset()
}

// GetAddressLine2 returns the AddressLine2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetAddressLine2() string {
	if o == nil || IsNil(o.AddressLine2.Get()) {
		var ret string
		return ret
	}
	return *o.AddressLine2.Get()
}

// GetAddressLine2Ok returns a tuple with the AddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetAddressLine2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressLine2.Get(), o.AddressLine2.IsSet()
}

// HasAddressLine2 returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasAddressLine2() bool {
	if o != nil && o.AddressLine2.IsSet() {
		return true
	}

	return false
}

// SetAddressLine2 gets a reference to the given NullableString and assigns it to the AddressLine2 field.
func (o *QuoteUpdateDto) SetAddressLine2(v string) {
	o.AddressLine2.Set(&v)
}
// SetAddressLine2Nil sets the value for AddressLine2 to be an explicit nil
func (o *QuoteUpdateDto) SetAddressLine2Nil() {
	o.AddressLine2.Set(nil)
}

// UnsetAddressLine2 ensures that no value is present for AddressLine2, not even an explicit nil
func (o *QuoteUpdateDto) UnsetAddressLine2() {
	o.AddressLine2.Unset()
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode.Get()) {
		var ret string
		return ret
	}
	return *o.PostalCode.Get()
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PostalCode.Get(), o.PostalCode.IsSet()
}

// HasPostalCode returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasPostalCode() bool {
	if o != nil && o.PostalCode.IsSet() {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given NullableString and assigns it to the PostalCode field.
func (o *QuoteUpdateDto) SetPostalCode(v string) {
	o.PostalCode.Set(&v)
}
// SetPostalCodeNil sets the value for PostalCode to be an explicit nil
func (o *QuoteUpdateDto) SetPostalCodeNil() {
	o.PostalCode.Set(nil)
}

// UnsetPostalCode ensures that no value is present for PostalCode, not even an explicit nil
func (o *QuoteUpdateDto) UnsetPostalCode() {
	o.PostalCode.Unset()
}

// GetCountryId returns the CountryId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetCountryId() string {
	if o == nil || IsNil(o.CountryId.Get()) {
		var ret string
		return ret
	}
	return *o.CountryId.Get()
}

// GetCountryIdOk returns a tuple with the CountryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetCountryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryId.Get(), o.CountryId.IsSet()
}

// HasCountryId returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasCountryId() bool {
	if o != nil && o.CountryId.IsSet() {
		return true
	}

	return false
}

// SetCountryId gets a reference to the given NullableString and assigns it to the CountryId field.
func (o *QuoteUpdateDto) SetCountryId(v string) {
	o.CountryId.Set(&v)
}
// SetCountryIdNil sets the value for CountryId to be an explicit nil
func (o *QuoteUpdateDto) SetCountryIdNil() {
	o.CountryId.Set(nil)
}

// UnsetCountryId ensures that no value is present for CountryId, not even an explicit nil
func (o *QuoteUpdateDto) UnsetCountryId() {
	o.CountryId.Unset()
}

// GetStateId returns the StateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetStateId() string {
	if o == nil || IsNil(o.StateId.Get()) {
		var ret string
		return ret
	}
	return *o.StateId.Get()
}

// GetStateIdOk returns a tuple with the StateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetStateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StateId.Get(), o.StateId.IsSet()
}

// HasStateId returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasStateId() bool {
	if o != nil && o.StateId.IsSet() {
		return true
	}

	return false
}

// SetStateId gets a reference to the given NullableString and assigns it to the StateId field.
func (o *QuoteUpdateDto) SetStateId(v string) {
	o.StateId.Set(&v)
}
// SetStateIdNil sets the value for StateId to be an explicit nil
func (o *QuoteUpdateDto) SetStateIdNil() {
	o.StateId.Set(nil)
}

// UnsetStateId ensures that no value is present for StateId, not even an explicit nil
func (o *QuoteUpdateDto) UnsetStateId() {
	o.StateId.Unset()
}

// GetCityId returns the CityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetCityId() string {
	if o == nil || IsNil(o.CityId.Get()) {
		var ret string
		return ret
	}
	return *o.CityId.Get()
}

// GetCityIdOk returns a tuple with the CityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetCityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CityId.Get(), o.CityId.IsSet()
}

// HasCityId returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasCityId() bool {
	if o != nil && o.CityId.IsSet() {
		return true
	}

	return false
}

// SetCityId gets a reference to the given NullableString and assigns it to the CityId field.
func (o *QuoteUpdateDto) SetCityId(v string) {
	o.CityId.Set(&v)
}
// SetCityIdNil sets the value for CityId to be an explicit nil
func (o *QuoteUpdateDto) SetCityIdNil() {
	o.CityId.Set(nil)
}

// UnsetCityId ensures that no value is present for CityId, not even an explicit nil
func (o *QuoteUpdateDto) UnsetCityId() {
	o.CityId.Unset()
}

// GetBillingLocationId returns the BillingLocationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetBillingLocationId() string {
	if o == nil || IsNil(o.BillingLocationId.Get()) {
		var ret string
		return ret
	}
	return *o.BillingLocationId.Get()
}

// GetBillingLocationIdOk returns a tuple with the BillingLocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetBillingLocationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingLocationId.Get(), o.BillingLocationId.IsSet()
}

// HasBillingLocationId returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasBillingLocationId() bool {
	if o != nil && o.BillingLocationId.IsSet() {
		return true
	}

	return false
}

// SetBillingLocationId gets a reference to the given NullableString and assigns it to the BillingLocationId field.
func (o *QuoteUpdateDto) SetBillingLocationId(v string) {
	o.BillingLocationId.Set(&v)
}
// SetBillingLocationIdNil sets the value for BillingLocationId to be an explicit nil
func (o *QuoteUpdateDto) SetBillingLocationIdNil() {
	o.BillingLocationId.Set(nil)
}

// UnsetBillingLocationId ensures that no value is present for BillingLocationId, not even an explicit nil
func (o *QuoteUpdateDto) UnsetBillingLocationId() {
	o.BillingLocationId.Unset()
}

// GetShippingLocationId returns the ShippingLocationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetShippingLocationId() string {
	if o == nil || IsNil(o.ShippingLocationId.Get()) {
		var ret string
		return ret
	}
	return *o.ShippingLocationId.Get()
}

// GetShippingLocationIdOk returns a tuple with the ShippingLocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetShippingLocationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippingLocationId.Get(), o.ShippingLocationId.IsSet()
}

// HasShippingLocationId returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasShippingLocationId() bool {
	if o != nil && o.ShippingLocationId.IsSet() {
		return true
	}

	return false
}

// SetShippingLocationId gets a reference to the given NullableString and assigns it to the ShippingLocationId field.
func (o *QuoteUpdateDto) SetShippingLocationId(v string) {
	o.ShippingLocationId.Set(&v)
}
// SetShippingLocationIdNil sets the value for ShippingLocationId to be an explicit nil
func (o *QuoteUpdateDto) SetShippingLocationIdNil() {
	o.ShippingLocationId.Set(nil)
}

// UnsetShippingLocationId ensures that no value is present for ShippingLocationId, not even an explicit nil
func (o *QuoteUpdateDto) UnsetShippingLocationId() {
	o.ShippingLocationId.Unset()
}

// GetShippingMethodId returns the ShippingMethodId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetShippingMethodId() string {
	if o == nil || IsNil(o.ShippingMethodId.Get()) {
		var ret string
		return ret
	}
	return *o.ShippingMethodId.Get()
}

// GetShippingMethodIdOk returns a tuple with the ShippingMethodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetShippingMethodIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippingMethodId.Get(), o.ShippingMethodId.IsSet()
}

// HasShippingMethodId returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasShippingMethodId() bool {
	if o != nil && o.ShippingMethodId.IsSet() {
		return true
	}

	return false
}

// SetShippingMethodId gets a reference to the given NullableString and assigns it to the ShippingMethodId field.
func (o *QuoteUpdateDto) SetShippingMethodId(v string) {
	o.ShippingMethodId.Set(&v)
}
// SetShippingMethodIdNil sets the value for ShippingMethodId to be an explicit nil
func (o *QuoteUpdateDto) SetShippingMethodIdNil() {
	o.ShippingMethodId.Set(nil)
}

// UnsetShippingMethodId ensures that no value is present for ShippingMethodId, not even an explicit nil
func (o *QuoteUpdateDto) UnsetShippingMethodId() {
	o.ShippingMethodId.Unset()
}

// GetCartId returns the CartId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetCartId() string {
	if o == nil || IsNil(o.CartId.Get()) {
		var ret string
		return ret
	}
	return *o.CartId.Get()
}

// GetCartIdOk returns a tuple with the CartId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetCartIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CartId.Get(), o.CartId.IsSet()
}

// HasCartId returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasCartId() bool {
	if o != nil && o.CartId.IsSet() {
		return true
	}

	return false
}

// SetCartId gets a reference to the given NullableString and assigns it to the CartId field.
func (o *QuoteUpdateDto) SetCartId(v string) {
	o.CartId.Set(&v)
}
// SetCartIdNil sets the value for CartId to be an explicit nil
func (o *QuoteUpdateDto) SetCartIdNil() {
	o.CartId.Set(nil)
}

// UnsetCartId ensures that no value is present for CartId, not even an explicit nil
func (o *QuoteUpdateDto) UnsetCartId() {
	o.CartId.Unset()
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *QuoteUpdateDto) GetTotal() float64 {
	if o == nil || IsNil(o.Total) {
		var ret float64
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteUpdateDto) GetTotalOk() (*float64, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float64 and assigns it to the Total field.
func (o *QuoteUpdateDto) SetTotal(v float64) {
	o.Total = &v
}

// GetTotalTaxes returns the TotalTaxes field value if set, zero value otherwise.
func (o *QuoteUpdateDto) GetTotalTaxes() float64 {
	if o == nil || IsNil(o.TotalTaxes) {
		var ret float64
		return ret
	}
	return *o.TotalTaxes
}

// GetTotalTaxesOk returns a tuple with the TotalTaxes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteUpdateDto) GetTotalTaxesOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalTaxes) {
		return nil, false
	}
	return o.TotalTaxes, true
}

// HasTotalTaxes returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasTotalTaxes() bool {
	if o != nil && !IsNil(o.TotalTaxes) {
		return true
	}

	return false
}

// SetTotalTaxes gets a reference to the given float64 and assigns it to the TotalTaxes field.
func (o *QuoteUpdateDto) SetTotalTaxes(v float64) {
	o.TotalTaxes = &v
}

// GetQuoteStatus returns the QuoteStatus field value if set, zero value otherwise.
func (o *QuoteUpdateDto) GetQuoteStatus() int32 {
	if o == nil || IsNil(o.QuoteStatus) {
		var ret int32
		return ret
	}
	return *o.QuoteStatus
}

// GetQuoteStatusOk returns a tuple with the QuoteStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteUpdateDto) GetQuoteStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.QuoteStatus) {
		return nil, false
	}
	return o.QuoteStatus, true
}

// HasQuoteStatus returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasQuoteStatus() bool {
	if o != nil && !IsNil(o.QuoteStatus) {
		return true
	}

	return false
}

// SetQuoteStatus gets a reference to the given int32 and assigns it to the QuoteStatus field.
func (o *QuoteUpdateDto) SetQuoteStatus(v int32) {
	o.QuoteStatus = &v
}

// GetFreightTerms returns the FreightTerms field value if set, zero value otherwise.
func (o *QuoteUpdateDto) GetFreightTerms() int32 {
	if o == nil || IsNil(o.FreightTerms) {
		var ret int32
		return ret
	}
	return *o.FreightTerms
}

// GetFreightTermsOk returns a tuple with the FreightTerms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteUpdateDto) GetFreightTermsOk() (*int32, bool) {
	if o == nil || IsNil(o.FreightTerms) {
		return nil, false
	}
	return o.FreightTerms, true
}

// HasFreightTerms returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasFreightTerms() bool {
	if o != nil && !IsNil(o.FreightTerms) {
		return true
	}

	return false
}

// SetFreightTerms gets a reference to the given int32 and assigns it to the FreightTerms field.
func (o *QuoteUpdateDto) SetFreightTerms(v int32) {
	o.FreightTerms = &v
}

// GetCostCalculationMethod returns the CostCalculationMethod field value if set, zero value otherwise.
func (o *QuoteUpdateDto) GetCostCalculationMethod() int32 {
	if o == nil || IsNil(o.CostCalculationMethod) {
		var ret int32
		return ret
	}
	return *o.CostCalculationMethod
}

// GetCostCalculationMethodOk returns a tuple with the CostCalculationMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteUpdateDto) GetCostCalculationMethodOk() (*int32, bool) {
	if o == nil || IsNil(o.CostCalculationMethod) {
		return nil, false
	}
	return o.CostCalculationMethod, true
}

// HasCostCalculationMethod returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasCostCalculationMethod() bool {
	if o != nil && !IsNil(o.CostCalculationMethod) {
		return true
	}

	return false
}

// SetCostCalculationMethod gets a reference to the given int32 and assigns it to the CostCalculationMethod field.
func (o *QuoteUpdateDto) SetCostCalculationMethod(v int32) {
	o.CostCalculationMethod = &v
}

// GetEffectiveTo returns the EffectiveTo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetEffectiveTo() time.Time {
	if o == nil || IsNil(o.EffectiveTo.Get()) {
		var ret time.Time
		return ret
	}
	return *o.EffectiveTo.Get()
}

// GetEffectiveToOk returns a tuple with the EffectiveTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetEffectiveToOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.EffectiveTo.Get(), o.EffectiveTo.IsSet()
}

// HasEffectiveTo returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasEffectiveTo() bool {
	if o != nil && o.EffectiveTo.IsSet() {
		return true
	}

	return false
}

// SetEffectiveTo gets a reference to the given NullableTime and assigns it to the EffectiveTo field.
func (o *QuoteUpdateDto) SetEffectiveTo(v time.Time) {
	o.EffectiveTo.Set(&v)
}
// SetEffectiveToNil sets the value for EffectiveTo to be an explicit nil
func (o *QuoteUpdateDto) SetEffectiveToNil() {
	o.EffectiveTo.Set(nil)
}

// UnsetEffectiveTo ensures that no value is present for EffectiveTo, not even an explicit nil
func (o *QuoteUpdateDto) UnsetEffectiveTo() {
	o.EffectiveTo.Unset()
}

// GetEffectiveFrom returns the EffectiveFrom field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteUpdateDto) GetEffectiveFrom() time.Time {
	if o == nil || IsNil(o.EffectiveFrom.Get()) {
		var ret time.Time
		return ret
	}
	return *o.EffectiveFrom.Get()
}

// GetEffectiveFromOk returns a tuple with the EffectiveFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteUpdateDto) GetEffectiveFromOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.EffectiveFrom.Get(), o.EffectiveFrom.IsSet()
}

// HasEffectiveFrom returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasEffectiveFrom() bool {
	if o != nil && o.EffectiveFrom.IsSet() {
		return true
	}

	return false
}

// SetEffectiveFrom gets a reference to the given NullableTime and assigns it to the EffectiveFrom field.
func (o *QuoteUpdateDto) SetEffectiveFrom(v time.Time) {
	o.EffectiveFrom.Set(&v)
}
// SetEffectiveFromNil sets the value for EffectiveFrom to be an explicit nil
func (o *QuoteUpdateDto) SetEffectiveFromNil() {
	o.EffectiveFrom.Set(nil)
}

// UnsetEffectiveFrom ensures that no value is present for EffectiveFrom, not even an explicit nil
func (o *QuoteUpdateDto) UnsetEffectiveFrom() {
	o.EffectiveFrom.Unset()
}

// GetCustomTaxAmount returns the CustomTaxAmount field value if set, zero value otherwise.
func (o *QuoteUpdateDto) GetCustomTaxAmount() float64 {
	if o == nil || IsNil(o.CustomTaxAmount) {
		var ret float64
		return ret
	}
	return *o.CustomTaxAmount
}

// GetCustomTaxAmountOk returns a tuple with the CustomTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteUpdateDto) GetCustomTaxAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomTaxAmount) {
		return nil, false
	}
	return o.CustomTaxAmount, true
}

// HasCustomTaxAmount returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasCustomTaxAmount() bool {
	if o != nil && !IsNil(o.CustomTaxAmount) {
		return true
	}

	return false
}

// SetCustomTaxAmount gets a reference to the given float64 and assigns it to the CustomTaxAmount field.
func (o *QuoteUpdateDto) SetCustomTaxAmount(v float64) {
	o.CustomTaxAmount = &v
}

// GetCustomTotalAmount returns the CustomTotalAmount field value if set, zero value otherwise.
func (o *QuoteUpdateDto) GetCustomTotalAmount() float64 {
	if o == nil || IsNil(o.CustomTotalAmount) {
		var ret float64
		return ret
	}
	return *o.CustomTotalAmount
}

// GetCustomTotalAmountOk returns a tuple with the CustomTotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteUpdateDto) GetCustomTotalAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomTotalAmount) {
		return nil, false
	}
	return o.CustomTotalAmount, true
}

// HasCustomTotalAmount returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasCustomTotalAmount() bool {
	if o != nil && !IsNil(o.CustomTotalAmount) {
		return true
	}

	return false
}

// SetCustomTotalAmount gets a reference to the given float64 and assigns it to the CustomTotalAmount field.
func (o *QuoteUpdateDto) SetCustomTotalAmount(v float64) {
	o.CustomTotalAmount = &v
}

// GetCustomDetailAmount returns the CustomDetailAmount field value if set, zero value otherwise.
func (o *QuoteUpdateDto) GetCustomDetailAmount() float64 {
	if o == nil || IsNil(o.CustomDetailAmount) {
		var ret float64
		return ret
	}
	return *o.CustomDetailAmount
}

// GetCustomDetailAmountOk returns a tuple with the CustomDetailAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteUpdateDto) GetCustomDetailAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomDetailAmount) {
		return nil, false
	}
	return o.CustomDetailAmount, true
}

// HasCustomDetailAmount returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasCustomDetailAmount() bool {
	if o != nil && !IsNil(o.CustomDetailAmount) {
		return true
	}

	return false
}

// SetCustomDetailAmount gets a reference to the given float64 and assigns it to the CustomDetailAmount field.
func (o *QuoteUpdateDto) SetCustomDetailAmount(v float64) {
	o.CustomDetailAmount = &v
}

// GetCustomProfitAmount returns the CustomProfitAmount field value if set, zero value otherwise.
func (o *QuoteUpdateDto) GetCustomProfitAmount() float64 {
	if o == nil || IsNil(o.CustomProfitAmount) {
		var ret float64
		return ret
	}
	return *o.CustomProfitAmount
}

// GetCustomProfitAmountOk returns a tuple with the CustomProfitAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteUpdateDto) GetCustomProfitAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomProfitAmount) {
		return nil, false
	}
	return o.CustomProfitAmount, true
}

// HasCustomProfitAmount returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasCustomProfitAmount() bool {
	if o != nil && !IsNil(o.CustomProfitAmount) {
		return true
	}

	return false
}

// SetCustomProfitAmount gets a reference to the given float64 and assigns it to the CustomProfitAmount field.
func (o *QuoteUpdateDto) SetCustomProfitAmount(v float64) {
	o.CustomProfitAmount = &v
}

// GetCustomDiscountsAmount returns the CustomDiscountsAmount field value if set, zero value otherwise.
func (o *QuoteUpdateDto) GetCustomDiscountsAmount() float64 {
	if o == nil || IsNil(o.CustomDiscountsAmount) {
		var ret float64
		return ret
	}
	return *o.CustomDiscountsAmount
}

// GetCustomDiscountsAmountOk returns a tuple with the CustomDiscountsAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteUpdateDto) GetCustomDiscountsAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomDiscountsAmount) {
		return nil, false
	}
	return o.CustomDiscountsAmount, true
}

// HasCustomDiscountsAmount returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasCustomDiscountsAmount() bool {
	if o != nil && !IsNil(o.CustomDiscountsAmount) {
		return true
	}

	return false
}

// SetCustomDiscountsAmount gets a reference to the given float64 and assigns it to the CustomDiscountsAmount field.
func (o *QuoteUpdateDto) SetCustomDiscountsAmount(v float64) {
	o.CustomDiscountsAmount = &v
}

// GetCustomSurchargesAmount returns the CustomSurchargesAmount field value if set, zero value otherwise.
func (o *QuoteUpdateDto) GetCustomSurchargesAmount() float64 {
	if o == nil || IsNil(o.CustomSurchargesAmount) {
		var ret float64
		return ret
	}
	return *o.CustomSurchargesAmount
}

// GetCustomSurchargesAmountOk returns a tuple with the CustomSurchargesAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteUpdateDto) GetCustomSurchargesAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomSurchargesAmount) {
		return nil, false
	}
	return o.CustomSurchargesAmount, true
}

// HasCustomSurchargesAmount returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasCustomSurchargesAmount() bool {
	if o != nil && !IsNil(o.CustomSurchargesAmount) {
		return true
	}

	return false
}

// SetCustomSurchargesAmount gets a reference to the given float64 and assigns it to the CustomSurchargesAmount field.
func (o *QuoteUpdateDto) SetCustomSurchargesAmount(v float64) {
	o.CustomSurchargesAmount = &v
}

// GetCustomShippingCostAmount returns the CustomShippingCostAmount field value if set, zero value otherwise.
func (o *QuoteUpdateDto) GetCustomShippingCostAmount() float64 {
	if o == nil || IsNil(o.CustomShippingCostAmount) {
		var ret float64
		return ret
	}
	return *o.CustomShippingCostAmount
}

// GetCustomShippingCostAmountOk returns a tuple with the CustomShippingCostAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteUpdateDto) GetCustomShippingCostAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomShippingCostAmount) {
		return nil, false
	}
	return o.CustomShippingCostAmount, true
}

// HasCustomShippingCostAmount returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasCustomShippingCostAmount() bool {
	if o != nil && !IsNil(o.CustomShippingCostAmount) {
		return true
	}

	return false
}

// SetCustomShippingCostAmount gets a reference to the given float64 and assigns it to the CustomShippingCostAmount field.
func (o *QuoteUpdateDto) SetCustomShippingCostAmount(v float64) {
	o.CustomShippingCostAmount = &v
}

// GetCustomShippingTaxAmount returns the CustomShippingTaxAmount field value if set, zero value otherwise.
func (o *QuoteUpdateDto) GetCustomShippingTaxAmount() float64 {
	if o == nil || IsNil(o.CustomShippingTaxAmount) {
		var ret float64
		return ret
	}
	return *o.CustomShippingTaxAmount
}

// GetCustomShippingTaxAmountOk returns a tuple with the CustomShippingTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteUpdateDto) GetCustomShippingTaxAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomShippingTaxAmount) {
		return nil, false
	}
	return o.CustomShippingTaxAmount, true
}

// HasCustomShippingTaxAmount returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasCustomShippingTaxAmount() bool {
	if o != nil && !IsNil(o.CustomShippingTaxAmount) {
		return true
	}

	return false
}

// SetCustomShippingTaxAmount gets a reference to the given float64 and assigns it to the CustomShippingTaxAmount field.
func (o *QuoteUpdateDto) SetCustomShippingTaxAmount(v float64) {
	o.CustomShippingTaxAmount = &v
}

// GetCustomWithholdingTaxAmount returns the CustomWithholdingTaxAmount field value if set, zero value otherwise.
func (o *QuoteUpdateDto) GetCustomWithholdingTaxAmount() float64 {
	if o == nil || IsNil(o.CustomWithholdingTaxAmount) {
		var ret float64
		return ret
	}
	return *o.CustomWithholdingTaxAmount
}

// GetCustomWithholdingTaxAmountOk returns a tuple with the CustomWithholdingTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteUpdateDto) GetCustomWithholdingTaxAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomWithholdingTaxAmount) {
		return nil, false
	}
	return o.CustomWithholdingTaxAmount, true
}

// HasCustomWithholdingTaxAmount returns a boolean if a field has been set.
func (o *QuoteUpdateDto) HasCustomWithholdingTaxAmount() bool {
	if o != nil && !IsNil(o.CustomWithholdingTaxAmount) {
		return true
	}

	return false
}

// SetCustomWithholdingTaxAmount gets a reference to the given float64 and assigns it to the CustomWithholdingTaxAmount field.
func (o *QuoteUpdateDto) SetCustomWithholdingTaxAmount(v float64) {
	o.CustomWithholdingTaxAmount = &v
}

func (o QuoteUpdateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteUpdateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Closed) {
		toSerialize["closed"] = o.Closed
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.UserId.IsSet() {
		toSerialize["userId"] = o.UserId.Get()
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if !IsNil(o.ForexRate) {
		toSerialize["forexRate"] = o.ForexRate
	}
	if o.CurrencyId.IsSet() {
		toSerialize["currencyId"] = o.CurrencyId.Get()
	}
	if o.PriceListId.IsSet() {
		toSerialize["priceListId"] = o.PriceListId.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.EnrollmentId.IsSet() {
		toSerialize["enrollmentId"] = o.EnrollmentId.Get()
	}
	if o.IndividualId.IsSet() {
		toSerialize["individualId"] = o.IndividualId.Get()
	}
	if o.PaymentTermId.IsSet() {
		toSerialize["paymentTermId"] = o.PaymentTermId.Get()
	}
	if o.OrganizationId.IsSet() {
		toSerialize["organizationId"] = o.OrganizationId.Get()
	}
	if o.ReceiverTenantId.IsSet() {
		toSerialize["receiverTenantId"] = o.ReceiverTenantId.Get()
	}
	if o.FirstName.IsSet() {
		toSerialize["firstName"] = o.FirstName.Get()
	}
	if o.LastName.IsSet() {
		toSerialize["lastName"] = o.LastName.Get()
	}
	if o.CompanyName.IsSet() {
		toSerialize["companyName"] = o.CompanyName.Get()
	}
	if o.BillingEmail.IsSet() {
		toSerialize["billingEmail"] = o.BillingEmail.Get()
	}
	if o.AddressLine1.IsSet() {
		toSerialize["addressLine1"] = o.AddressLine1.Get()
	}
	if o.AddressLine2.IsSet() {
		toSerialize["addressLine2"] = o.AddressLine2.Get()
	}
	if o.PostalCode.IsSet() {
		toSerialize["postalCode"] = o.PostalCode.Get()
	}
	if o.CountryId.IsSet() {
		toSerialize["countryId"] = o.CountryId.Get()
	}
	if o.StateId.IsSet() {
		toSerialize["stateId"] = o.StateId.Get()
	}
	if o.CityId.IsSet() {
		toSerialize["cityId"] = o.CityId.Get()
	}
	if o.BillingLocationId.IsSet() {
		toSerialize["billingLocationId"] = o.BillingLocationId.Get()
	}
	if o.ShippingLocationId.IsSet() {
		toSerialize["shippingLocationId"] = o.ShippingLocationId.Get()
	}
	if o.ShippingMethodId.IsSet() {
		toSerialize["shippingMethodId"] = o.ShippingMethodId.Get()
	}
	if o.CartId.IsSet() {
		toSerialize["cartId"] = o.CartId.Get()
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.TotalTaxes) {
		toSerialize["totalTaxes"] = o.TotalTaxes
	}
	if !IsNil(o.QuoteStatus) {
		toSerialize["quoteStatus"] = o.QuoteStatus
	}
	if !IsNil(o.FreightTerms) {
		toSerialize["freightTerms"] = o.FreightTerms
	}
	if !IsNil(o.CostCalculationMethod) {
		toSerialize["costCalculationMethod"] = o.CostCalculationMethod
	}
	if o.EffectiveTo.IsSet() {
		toSerialize["effectiveTo"] = o.EffectiveTo.Get()
	}
	if o.EffectiveFrom.IsSet() {
		toSerialize["effectiveFrom"] = o.EffectiveFrom.Get()
	}
	if !IsNil(o.CustomTaxAmount) {
		toSerialize["customTaxAmount"] = o.CustomTaxAmount
	}
	if !IsNil(o.CustomTotalAmount) {
		toSerialize["customTotalAmount"] = o.CustomTotalAmount
	}
	if !IsNil(o.CustomDetailAmount) {
		toSerialize["customDetailAmount"] = o.CustomDetailAmount
	}
	if !IsNil(o.CustomProfitAmount) {
		toSerialize["customProfitAmount"] = o.CustomProfitAmount
	}
	if !IsNil(o.CustomDiscountsAmount) {
		toSerialize["customDiscountsAmount"] = o.CustomDiscountsAmount
	}
	if !IsNil(o.CustomSurchargesAmount) {
		toSerialize["customSurchargesAmount"] = o.CustomSurchargesAmount
	}
	if !IsNil(o.CustomShippingCostAmount) {
		toSerialize["customShippingCostAmount"] = o.CustomShippingCostAmount
	}
	if !IsNil(o.CustomShippingTaxAmount) {
		toSerialize["customShippingTaxAmount"] = o.CustomShippingTaxAmount
	}
	if !IsNil(o.CustomWithholdingTaxAmount) {
		toSerialize["customWithholdingTaxAmount"] = o.CustomWithholdingTaxAmount
	}
	return toSerialize, nil
}

type NullableQuoteUpdateDto struct {
	value *QuoteUpdateDto
	isSet bool
}

func (v NullableQuoteUpdateDto) Get() *QuoteUpdateDto {
	return v.value
}

func (v *NullableQuoteUpdateDto) Set(val *QuoteUpdateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteUpdateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteUpdateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteUpdateDto(val *QuoteUpdateDto) *NullableQuoteUpdateDto {
	return &NullableQuoteUpdateDto{value: val, isSet: true}
}

func (v NullableQuoteUpdateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteUpdateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


