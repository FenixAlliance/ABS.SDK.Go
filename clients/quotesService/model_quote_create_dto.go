/*
QuotesService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the QuoteCreateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteCreateDto{}

// QuoteCreateDto struct for QuoteCreateDto
type QuoteCreateDto struct {
	Id *string `json:"id,omitempty"`
	Timestamp *time.Time `json:"timestamp,omitempty"`
	Closed *bool `json:"closed,omitempty"`
	Title NullableString `json:"title,omitempty"`
	UserId NullableString `json:"userId,omitempty"`
	TenantId NullableString `json:"tenantId,omitempty"`
	PriceListId NullableString `json:"priceListId,omitempty"`
	Description NullableString `json:"description,omitempty"`
	EnrollmentId NullableString `json:"enrollmentId,omitempty"`
	IndividualId NullableString `json:"individualId,omitempty"`
	PaymentTermId NullableString `json:"paymentTermId,omitempty"`
	OrganizationId NullableString `json:"organizationId,omitempty"`
	CurrencyId NullableString `json:"currencyId,omitempty"`
	ForexRate *float64 `json:"forexRate,omitempty"`
	FirstName NullableString `json:"firstName,omitempty"`
	LastName NullableString `json:"lastName,omitempty"`
	CompanyName NullableString `json:"companyName,omitempty"`
	BillingEmail NullableString `json:"billingEmail,omitempty"`
	AddressLine1 NullableString `json:"addressLine1,omitempty"`
	AddressLine2 NullableString `json:"addressLine2,omitempty"`
	PostalCode NullableString `json:"postalCode,omitempty"`
	CountryId NullableString `json:"countryId,omitempty"`
	StateId NullableString `json:"stateId,omitempty"`
	CityId NullableString `json:"cityId,omitempty"`
	CartId NullableString `json:"cartId,omitempty"`
	DealUnitId NullableString `json:"dealUnitId,omitempty"`
	ReceiverTenantId NullableString `json:"receiverTenantId,omitempty"`
	EffectiveTo NullableTime `json:"effectiveTo,omitempty"`
	EffectiveFrom NullableTime `json:"effectiveFrom,omitempty"`
	QuoteStatus *int32 `json:"quoteStatus,omitempty"`
}

// NewQuoteCreateDto instantiates a new QuoteCreateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteCreateDto() *QuoteCreateDto {
	this := QuoteCreateDto{}
	return &this
}

// NewQuoteCreateDtoWithDefaults instantiates a new QuoteCreateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteCreateDtoWithDefaults() *QuoteCreateDto {
	this := QuoteCreateDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *QuoteCreateDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteCreateDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *QuoteCreateDto) SetId(v string) {
	o.Id = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *QuoteCreateDto) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteCreateDto) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *QuoteCreateDto) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetClosed returns the Closed field value if set, zero value otherwise.
func (o *QuoteCreateDto) GetClosed() bool {
	if o == nil || IsNil(o.Closed) {
		var ret bool
		return ret
	}
	return *o.Closed
}

// GetClosedOk returns a tuple with the Closed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteCreateDto) GetClosedOk() (*bool, bool) {
	if o == nil || IsNil(o.Closed) {
		return nil, false
	}
	return o.Closed, true
}

// HasClosed returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasClosed() bool {
	if o != nil && !IsNil(o.Closed) {
		return true
	}

	return false
}

// SetClosed gets a reference to the given bool and assigns it to the Closed field.
func (o *QuoteCreateDto) SetClosed(v bool) {
	o.Closed = &v
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *QuoteCreateDto) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *QuoteCreateDto) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *QuoteCreateDto) UnsetTitle() {
	o.Title.Unset()
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetUserId() string {
	if o == nil || IsNil(o.UserId.Get()) {
		var ret string
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableString and assigns it to the UserId field.
func (o *QuoteCreateDto) SetUserId(v string) {
	o.UserId.Set(&v)
}
// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *QuoteCreateDto) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *QuoteCreateDto) UnsetUserId() {
	o.UserId.Unset()
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *QuoteCreateDto) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *QuoteCreateDto) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *QuoteCreateDto) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetPriceListId returns the PriceListId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetPriceListId() string {
	if o == nil || IsNil(o.PriceListId.Get()) {
		var ret string
		return ret
	}
	return *o.PriceListId.Get()
}

// GetPriceListIdOk returns a tuple with the PriceListId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetPriceListIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceListId.Get(), o.PriceListId.IsSet()
}

// HasPriceListId returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasPriceListId() bool {
	if o != nil && o.PriceListId.IsSet() {
		return true
	}

	return false
}

// SetPriceListId gets a reference to the given NullableString and assigns it to the PriceListId field.
func (o *QuoteCreateDto) SetPriceListId(v string) {
	o.PriceListId.Set(&v)
}
// SetPriceListIdNil sets the value for PriceListId to be an explicit nil
func (o *QuoteCreateDto) SetPriceListIdNil() {
	o.PriceListId.Set(nil)
}

// UnsetPriceListId ensures that no value is present for PriceListId, not even an explicit nil
func (o *QuoteCreateDto) UnsetPriceListId() {
	o.PriceListId.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *QuoteCreateDto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *QuoteCreateDto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *QuoteCreateDto) UnsetDescription() {
	o.Description.Unset()
}

// GetEnrollmentId returns the EnrollmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetEnrollmentId() string {
	if o == nil || IsNil(o.EnrollmentId.Get()) {
		var ret string
		return ret
	}
	return *o.EnrollmentId.Get()
}

// GetEnrollmentIdOk returns a tuple with the EnrollmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetEnrollmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnrollmentId.Get(), o.EnrollmentId.IsSet()
}

// HasEnrollmentId returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasEnrollmentId() bool {
	if o != nil && o.EnrollmentId.IsSet() {
		return true
	}

	return false
}

// SetEnrollmentId gets a reference to the given NullableString and assigns it to the EnrollmentId field.
func (o *QuoteCreateDto) SetEnrollmentId(v string) {
	o.EnrollmentId.Set(&v)
}
// SetEnrollmentIdNil sets the value for EnrollmentId to be an explicit nil
func (o *QuoteCreateDto) SetEnrollmentIdNil() {
	o.EnrollmentId.Set(nil)
}

// UnsetEnrollmentId ensures that no value is present for EnrollmentId, not even an explicit nil
func (o *QuoteCreateDto) UnsetEnrollmentId() {
	o.EnrollmentId.Unset()
}

// GetIndividualId returns the IndividualId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetIndividualId() string {
	if o == nil || IsNil(o.IndividualId.Get()) {
		var ret string
		return ret
	}
	return *o.IndividualId.Get()
}

// GetIndividualIdOk returns a tuple with the IndividualId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetIndividualIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IndividualId.Get(), o.IndividualId.IsSet()
}

// HasIndividualId returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasIndividualId() bool {
	if o != nil && o.IndividualId.IsSet() {
		return true
	}

	return false
}

// SetIndividualId gets a reference to the given NullableString and assigns it to the IndividualId field.
func (o *QuoteCreateDto) SetIndividualId(v string) {
	o.IndividualId.Set(&v)
}
// SetIndividualIdNil sets the value for IndividualId to be an explicit nil
func (o *QuoteCreateDto) SetIndividualIdNil() {
	o.IndividualId.Set(nil)
}

// UnsetIndividualId ensures that no value is present for IndividualId, not even an explicit nil
func (o *QuoteCreateDto) UnsetIndividualId() {
	o.IndividualId.Unset()
}

// GetPaymentTermId returns the PaymentTermId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetPaymentTermId() string {
	if o == nil || IsNil(o.PaymentTermId.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentTermId.Get()
}

// GetPaymentTermIdOk returns a tuple with the PaymentTermId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetPaymentTermIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentTermId.Get(), o.PaymentTermId.IsSet()
}

// HasPaymentTermId returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasPaymentTermId() bool {
	if o != nil && o.PaymentTermId.IsSet() {
		return true
	}

	return false
}

// SetPaymentTermId gets a reference to the given NullableString and assigns it to the PaymentTermId field.
func (o *QuoteCreateDto) SetPaymentTermId(v string) {
	o.PaymentTermId.Set(&v)
}
// SetPaymentTermIdNil sets the value for PaymentTermId to be an explicit nil
func (o *QuoteCreateDto) SetPaymentTermIdNil() {
	o.PaymentTermId.Set(nil)
}

// UnsetPaymentTermId ensures that no value is present for PaymentTermId, not even an explicit nil
func (o *QuoteCreateDto) UnsetPaymentTermId() {
	o.PaymentTermId.Unset()
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId.Get()) {
		var ret string
		return ret
	}
	return *o.OrganizationId.Get()
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationId.Get(), o.OrganizationId.IsSet()
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasOrganizationId() bool {
	if o != nil && o.OrganizationId.IsSet() {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given NullableString and assigns it to the OrganizationId field.
func (o *QuoteCreateDto) SetOrganizationId(v string) {
	o.OrganizationId.Set(&v)
}
// SetOrganizationIdNil sets the value for OrganizationId to be an explicit nil
func (o *QuoteCreateDto) SetOrganizationIdNil() {
	o.OrganizationId.Set(nil)
}

// UnsetOrganizationId ensures that no value is present for OrganizationId, not even an explicit nil
func (o *QuoteCreateDto) UnsetOrganizationId() {
	o.OrganizationId.Unset()
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetCurrencyId() string {
	if o == nil || IsNil(o.CurrencyId.Get()) {
		var ret string
		return ret
	}
	return *o.CurrencyId.Get()
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetCurrencyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrencyId.Get(), o.CurrencyId.IsSet()
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasCurrencyId() bool {
	if o != nil && o.CurrencyId.IsSet() {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given NullableString and assigns it to the CurrencyId field.
func (o *QuoteCreateDto) SetCurrencyId(v string) {
	o.CurrencyId.Set(&v)
}
// SetCurrencyIdNil sets the value for CurrencyId to be an explicit nil
func (o *QuoteCreateDto) SetCurrencyIdNil() {
	o.CurrencyId.Set(nil)
}

// UnsetCurrencyId ensures that no value is present for CurrencyId, not even an explicit nil
func (o *QuoteCreateDto) UnsetCurrencyId() {
	o.CurrencyId.Unset()
}

// GetForexRate returns the ForexRate field value if set, zero value otherwise.
func (o *QuoteCreateDto) GetForexRate() float64 {
	if o == nil || IsNil(o.ForexRate) {
		var ret float64
		return ret
	}
	return *o.ForexRate
}

// GetForexRateOk returns a tuple with the ForexRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteCreateDto) GetForexRateOk() (*float64, bool) {
	if o == nil || IsNil(o.ForexRate) {
		return nil, false
	}
	return o.ForexRate, true
}

// HasForexRate returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasForexRate() bool {
	if o != nil && !IsNil(o.ForexRate) {
		return true
	}

	return false
}

// SetForexRate gets a reference to the given float64 and assigns it to the ForexRate field.
func (o *QuoteCreateDto) SetForexRate(v float64) {
	o.ForexRate = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetFirstName() string {
	if o == nil || IsNil(o.FirstName.Get()) {
		var ret string
		return ret
	}
	return *o.FirstName.Get()
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstName.Get(), o.FirstName.IsSet()
}

// HasFirstName returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasFirstName() bool {
	if o != nil && o.FirstName.IsSet() {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given NullableString and assigns it to the FirstName field.
func (o *QuoteCreateDto) SetFirstName(v string) {
	o.FirstName.Set(&v)
}
// SetFirstNameNil sets the value for FirstName to be an explicit nil
func (o *QuoteCreateDto) SetFirstNameNil() {
	o.FirstName.Set(nil)
}

// UnsetFirstName ensures that no value is present for FirstName, not even an explicit nil
func (o *QuoteCreateDto) UnsetFirstName() {
	o.FirstName.Unset()
}

// GetLastName returns the LastName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetLastName() string {
	if o == nil || IsNil(o.LastName.Get()) {
		var ret string
		return ret
	}
	return *o.LastName.Get()
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastName.Get(), o.LastName.IsSet()
}

// HasLastName returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasLastName() bool {
	if o != nil && o.LastName.IsSet() {
		return true
	}

	return false
}

// SetLastName gets a reference to the given NullableString and assigns it to the LastName field.
func (o *QuoteCreateDto) SetLastName(v string) {
	o.LastName.Set(&v)
}
// SetLastNameNil sets the value for LastName to be an explicit nil
func (o *QuoteCreateDto) SetLastNameNil() {
	o.LastName.Set(nil)
}

// UnsetLastName ensures that no value is present for LastName, not even an explicit nil
func (o *QuoteCreateDto) UnsetLastName() {
	o.LastName.Unset()
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName.Get()) {
		var ret string
		return ret
	}
	return *o.CompanyName.Get()
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetCompanyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyName.Get(), o.CompanyName.IsSet()
}

// HasCompanyName returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasCompanyName() bool {
	if o != nil && o.CompanyName.IsSet() {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given NullableString and assigns it to the CompanyName field.
func (o *QuoteCreateDto) SetCompanyName(v string) {
	o.CompanyName.Set(&v)
}
// SetCompanyNameNil sets the value for CompanyName to be an explicit nil
func (o *QuoteCreateDto) SetCompanyNameNil() {
	o.CompanyName.Set(nil)
}

// UnsetCompanyName ensures that no value is present for CompanyName, not even an explicit nil
func (o *QuoteCreateDto) UnsetCompanyName() {
	o.CompanyName.Unset()
}

// GetBillingEmail returns the BillingEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetBillingEmail() string {
	if o == nil || IsNil(o.BillingEmail.Get()) {
		var ret string
		return ret
	}
	return *o.BillingEmail.Get()
}

// GetBillingEmailOk returns a tuple with the BillingEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetBillingEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingEmail.Get(), o.BillingEmail.IsSet()
}

// HasBillingEmail returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasBillingEmail() bool {
	if o != nil && o.BillingEmail.IsSet() {
		return true
	}

	return false
}

// SetBillingEmail gets a reference to the given NullableString and assigns it to the BillingEmail field.
func (o *QuoteCreateDto) SetBillingEmail(v string) {
	o.BillingEmail.Set(&v)
}
// SetBillingEmailNil sets the value for BillingEmail to be an explicit nil
func (o *QuoteCreateDto) SetBillingEmailNil() {
	o.BillingEmail.Set(nil)
}

// UnsetBillingEmail ensures that no value is present for BillingEmail, not even an explicit nil
func (o *QuoteCreateDto) UnsetBillingEmail() {
	o.BillingEmail.Unset()
}

// GetAddressLine1 returns the AddressLine1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetAddressLine1() string {
	if o == nil || IsNil(o.AddressLine1.Get()) {
		var ret string
		return ret
	}
	return *o.AddressLine1.Get()
}

// GetAddressLine1Ok returns a tuple with the AddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetAddressLine1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressLine1.Get(), o.AddressLine1.IsSet()
}

// HasAddressLine1 returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasAddressLine1() bool {
	if o != nil && o.AddressLine1.IsSet() {
		return true
	}

	return false
}

// SetAddressLine1 gets a reference to the given NullableString and assigns it to the AddressLine1 field.
func (o *QuoteCreateDto) SetAddressLine1(v string) {
	o.AddressLine1.Set(&v)
}
// SetAddressLine1Nil sets the value for AddressLine1 to be an explicit nil
func (o *QuoteCreateDto) SetAddressLine1Nil() {
	o.AddressLine1.Set(nil)
}

// UnsetAddressLine1 ensures that no value is present for AddressLine1, not even an explicit nil
func (o *QuoteCreateDto) UnsetAddressLine1() {
	o.AddressLine1.Unset()
}

// GetAddressLine2 returns the AddressLine2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetAddressLine2() string {
	if o == nil || IsNil(o.AddressLine2.Get()) {
		var ret string
		return ret
	}
	return *o.AddressLine2.Get()
}

// GetAddressLine2Ok returns a tuple with the AddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetAddressLine2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressLine2.Get(), o.AddressLine2.IsSet()
}

// HasAddressLine2 returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasAddressLine2() bool {
	if o != nil && o.AddressLine2.IsSet() {
		return true
	}

	return false
}

// SetAddressLine2 gets a reference to the given NullableString and assigns it to the AddressLine2 field.
func (o *QuoteCreateDto) SetAddressLine2(v string) {
	o.AddressLine2.Set(&v)
}
// SetAddressLine2Nil sets the value for AddressLine2 to be an explicit nil
func (o *QuoteCreateDto) SetAddressLine2Nil() {
	o.AddressLine2.Set(nil)
}

// UnsetAddressLine2 ensures that no value is present for AddressLine2, not even an explicit nil
func (o *QuoteCreateDto) UnsetAddressLine2() {
	o.AddressLine2.Unset()
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode.Get()) {
		var ret string
		return ret
	}
	return *o.PostalCode.Get()
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PostalCode.Get(), o.PostalCode.IsSet()
}

// HasPostalCode returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasPostalCode() bool {
	if o != nil && o.PostalCode.IsSet() {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given NullableString and assigns it to the PostalCode field.
func (o *QuoteCreateDto) SetPostalCode(v string) {
	o.PostalCode.Set(&v)
}
// SetPostalCodeNil sets the value for PostalCode to be an explicit nil
func (o *QuoteCreateDto) SetPostalCodeNil() {
	o.PostalCode.Set(nil)
}

// UnsetPostalCode ensures that no value is present for PostalCode, not even an explicit nil
func (o *QuoteCreateDto) UnsetPostalCode() {
	o.PostalCode.Unset()
}

// GetCountryId returns the CountryId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetCountryId() string {
	if o == nil || IsNil(o.CountryId.Get()) {
		var ret string
		return ret
	}
	return *o.CountryId.Get()
}

// GetCountryIdOk returns a tuple with the CountryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetCountryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryId.Get(), o.CountryId.IsSet()
}

// HasCountryId returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasCountryId() bool {
	if o != nil && o.CountryId.IsSet() {
		return true
	}

	return false
}

// SetCountryId gets a reference to the given NullableString and assigns it to the CountryId field.
func (o *QuoteCreateDto) SetCountryId(v string) {
	o.CountryId.Set(&v)
}
// SetCountryIdNil sets the value for CountryId to be an explicit nil
func (o *QuoteCreateDto) SetCountryIdNil() {
	o.CountryId.Set(nil)
}

// UnsetCountryId ensures that no value is present for CountryId, not even an explicit nil
func (o *QuoteCreateDto) UnsetCountryId() {
	o.CountryId.Unset()
}

// GetStateId returns the StateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetStateId() string {
	if o == nil || IsNil(o.StateId.Get()) {
		var ret string
		return ret
	}
	return *o.StateId.Get()
}

// GetStateIdOk returns a tuple with the StateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetStateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StateId.Get(), o.StateId.IsSet()
}

// HasStateId returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasStateId() bool {
	if o != nil && o.StateId.IsSet() {
		return true
	}

	return false
}

// SetStateId gets a reference to the given NullableString and assigns it to the StateId field.
func (o *QuoteCreateDto) SetStateId(v string) {
	o.StateId.Set(&v)
}
// SetStateIdNil sets the value for StateId to be an explicit nil
func (o *QuoteCreateDto) SetStateIdNil() {
	o.StateId.Set(nil)
}

// UnsetStateId ensures that no value is present for StateId, not even an explicit nil
func (o *QuoteCreateDto) UnsetStateId() {
	o.StateId.Unset()
}

// GetCityId returns the CityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetCityId() string {
	if o == nil || IsNil(o.CityId.Get()) {
		var ret string
		return ret
	}
	return *o.CityId.Get()
}

// GetCityIdOk returns a tuple with the CityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetCityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CityId.Get(), o.CityId.IsSet()
}

// HasCityId returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasCityId() bool {
	if o != nil && o.CityId.IsSet() {
		return true
	}

	return false
}

// SetCityId gets a reference to the given NullableString and assigns it to the CityId field.
func (o *QuoteCreateDto) SetCityId(v string) {
	o.CityId.Set(&v)
}
// SetCityIdNil sets the value for CityId to be an explicit nil
func (o *QuoteCreateDto) SetCityIdNil() {
	o.CityId.Set(nil)
}

// UnsetCityId ensures that no value is present for CityId, not even an explicit nil
func (o *QuoteCreateDto) UnsetCityId() {
	o.CityId.Unset()
}

// GetCartId returns the CartId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetCartId() string {
	if o == nil || IsNil(o.CartId.Get()) {
		var ret string
		return ret
	}
	return *o.CartId.Get()
}

// GetCartIdOk returns a tuple with the CartId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetCartIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CartId.Get(), o.CartId.IsSet()
}

// HasCartId returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasCartId() bool {
	if o != nil && o.CartId.IsSet() {
		return true
	}

	return false
}

// SetCartId gets a reference to the given NullableString and assigns it to the CartId field.
func (o *QuoteCreateDto) SetCartId(v string) {
	o.CartId.Set(&v)
}
// SetCartIdNil sets the value for CartId to be an explicit nil
func (o *QuoteCreateDto) SetCartIdNil() {
	o.CartId.Set(nil)
}

// UnsetCartId ensures that no value is present for CartId, not even an explicit nil
func (o *QuoteCreateDto) UnsetCartId() {
	o.CartId.Unset()
}

// GetDealUnitId returns the DealUnitId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetDealUnitId() string {
	if o == nil || IsNil(o.DealUnitId.Get()) {
		var ret string
		return ret
	}
	return *o.DealUnitId.Get()
}

// GetDealUnitIdOk returns a tuple with the DealUnitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetDealUnitIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DealUnitId.Get(), o.DealUnitId.IsSet()
}

// HasDealUnitId returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasDealUnitId() bool {
	if o != nil && o.DealUnitId.IsSet() {
		return true
	}

	return false
}

// SetDealUnitId gets a reference to the given NullableString and assigns it to the DealUnitId field.
func (o *QuoteCreateDto) SetDealUnitId(v string) {
	o.DealUnitId.Set(&v)
}
// SetDealUnitIdNil sets the value for DealUnitId to be an explicit nil
func (o *QuoteCreateDto) SetDealUnitIdNil() {
	o.DealUnitId.Set(nil)
}

// UnsetDealUnitId ensures that no value is present for DealUnitId, not even an explicit nil
func (o *QuoteCreateDto) UnsetDealUnitId() {
	o.DealUnitId.Unset()
}

// GetReceiverTenantId returns the ReceiverTenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetReceiverTenantId() string {
	if o == nil || IsNil(o.ReceiverTenantId.Get()) {
		var ret string
		return ret
	}
	return *o.ReceiverTenantId.Get()
}

// GetReceiverTenantIdOk returns a tuple with the ReceiverTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetReceiverTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiverTenantId.Get(), o.ReceiverTenantId.IsSet()
}

// HasReceiverTenantId returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasReceiverTenantId() bool {
	if o != nil && o.ReceiverTenantId.IsSet() {
		return true
	}

	return false
}

// SetReceiverTenantId gets a reference to the given NullableString and assigns it to the ReceiverTenantId field.
func (o *QuoteCreateDto) SetReceiverTenantId(v string) {
	o.ReceiverTenantId.Set(&v)
}
// SetReceiverTenantIdNil sets the value for ReceiverTenantId to be an explicit nil
func (o *QuoteCreateDto) SetReceiverTenantIdNil() {
	o.ReceiverTenantId.Set(nil)
}

// UnsetReceiverTenantId ensures that no value is present for ReceiverTenantId, not even an explicit nil
func (o *QuoteCreateDto) UnsetReceiverTenantId() {
	o.ReceiverTenantId.Unset()
}

// GetEffectiveTo returns the EffectiveTo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetEffectiveTo() time.Time {
	if o == nil || IsNil(o.EffectiveTo.Get()) {
		var ret time.Time
		return ret
	}
	return *o.EffectiveTo.Get()
}

// GetEffectiveToOk returns a tuple with the EffectiveTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetEffectiveToOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.EffectiveTo.Get(), o.EffectiveTo.IsSet()
}

// HasEffectiveTo returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasEffectiveTo() bool {
	if o != nil && o.EffectiveTo.IsSet() {
		return true
	}

	return false
}

// SetEffectiveTo gets a reference to the given NullableTime and assigns it to the EffectiveTo field.
func (o *QuoteCreateDto) SetEffectiveTo(v time.Time) {
	o.EffectiveTo.Set(&v)
}
// SetEffectiveToNil sets the value for EffectiveTo to be an explicit nil
func (o *QuoteCreateDto) SetEffectiveToNil() {
	o.EffectiveTo.Set(nil)
}

// UnsetEffectiveTo ensures that no value is present for EffectiveTo, not even an explicit nil
func (o *QuoteCreateDto) UnsetEffectiveTo() {
	o.EffectiveTo.Unset()
}

// GetEffectiveFrom returns the EffectiveFrom field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteCreateDto) GetEffectiveFrom() time.Time {
	if o == nil || IsNil(o.EffectiveFrom.Get()) {
		var ret time.Time
		return ret
	}
	return *o.EffectiveFrom.Get()
}

// GetEffectiveFromOk returns a tuple with the EffectiveFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteCreateDto) GetEffectiveFromOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.EffectiveFrom.Get(), o.EffectiveFrom.IsSet()
}

// HasEffectiveFrom returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasEffectiveFrom() bool {
	if o != nil && o.EffectiveFrom.IsSet() {
		return true
	}

	return false
}

// SetEffectiveFrom gets a reference to the given NullableTime and assigns it to the EffectiveFrom field.
func (o *QuoteCreateDto) SetEffectiveFrom(v time.Time) {
	o.EffectiveFrom.Set(&v)
}
// SetEffectiveFromNil sets the value for EffectiveFrom to be an explicit nil
func (o *QuoteCreateDto) SetEffectiveFromNil() {
	o.EffectiveFrom.Set(nil)
}

// UnsetEffectiveFrom ensures that no value is present for EffectiveFrom, not even an explicit nil
func (o *QuoteCreateDto) UnsetEffectiveFrom() {
	o.EffectiveFrom.Unset()
}

// GetQuoteStatus returns the QuoteStatus field value if set, zero value otherwise.
func (o *QuoteCreateDto) GetQuoteStatus() int32 {
	if o == nil || IsNil(o.QuoteStatus) {
		var ret int32
		return ret
	}
	return *o.QuoteStatus
}

// GetQuoteStatusOk returns a tuple with the QuoteStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteCreateDto) GetQuoteStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.QuoteStatus) {
		return nil, false
	}
	return o.QuoteStatus, true
}

// HasQuoteStatus returns a boolean if a field has been set.
func (o *QuoteCreateDto) HasQuoteStatus() bool {
	if o != nil && !IsNil(o.QuoteStatus) {
		return true
	}

	return false
}

// SetQuoteStatus gets a reference to the given int32 and assigns it to the QuoteStatus field.
func (o *QuoteCreateDto) SetQuoteStatus(v int32) {
	o.QuoteStatus = &v
}

func (o QuoteCreateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteCreateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Closed) {
		toSerialize["closed"] = o.Closed
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.UserId.IsSet() {
		toSerialize["userId"] = o.UserId.Get()
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.PriceListId.IsSet() {
		toSerialize["priceListId"] = o.PriceListId.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.EnrollmentId.IsSet() {
		toSerialize["enrollmentId"] = o.EnrollmentId.Get()
	}
	if o.IndividualId.IsSet() {
		toSerialize["individualId"] = o.IndividualId.Get()
	}
	if o.PaymentTermId.IsSet() {
		toSerialize["paymentTermId"] = o.PaymentTermId.Get()
	}
	if o.OrganizationId.IsSet() {
		toSerialize["organizationId"] = o.OrganizationId.Get()
	}
	if o.CurrencyId.IsSet() {
		toSerialize["currencyId"] = o.CurrencyId.Get()
	}
	if !IsNil(o.ForexRate) {
		toSerialize["forexRate"] = o.ForexRate
	}
	if o.FirstName.IsSet() {
		toSerialize["firstName"] = o.FirstName.Get()
	}
	if o.LastName.IsSet() {
		toSerialize["lastName"] = o.LastName.Get()
	}
	if o.CompanyName.IsSet() {
		toSerialize["companyName"] = o.CompanyName.Get()
	}
	if o.BillingEmail.IsSet() {
		toSerialize["billingEmail"] = o.BillingEmail.Get()
	}
	if o.AddressLine1.IsSet() {
		toSerialize["addressLine1"] = o.AddressLine1.Get()
	}
	if o.AddressLine2.IsSet() {
		toSerialize["addressLine2"] = o.AddressLine2.Get()
	}
	if o.PostalCode.IsSet() {
		toSerialize["postalCode"] = o.PostalCode.Get()
	}
	if o.CountryId.IsSet() {
		toSerialize["countryId"] = o.CountryId.Get()
	}
	if o.StateId.IsSet() {
		toSerialize["stateId"] = o.StateId.Get()
	}
	if o.CityId.IsSet() {
		toSerialize["cityId"] = o.CityId.Get()
	}
	if o.CartId.IsSet() {
		toSerialize["cartId"] = o.CartId.Get()
	}
	if o.DealUnitId.IsSet() {
		toSerialize["dealUnitId"] = o.DealUnitId.Get()
	}
	if o.ReceiverTenantId.IsSet() {
		toSerialize["receiverTenantId"] = o.ReceiverTenantId.Get()
	}
	if o.EffectiveTo.IsSet() {
		toSerialize["effectiveTo"] = o.EffectiveTo.Get()
	}
	if o.EffectiveFrom.IsSet() {
		toSerialize["effectiveFrom"] = o.EffectiveFrom.Get()
	}
	if !IsNil(o.QuoteStatus) {
		toSerialize["quoteStatus"] = o.QuoteStatus
	}
	return toSerialize, nil
}

type NullableQuoteCreateDto struct {
	value *QuoteCreateDto
	isSet bool
}

func (v NullableQuoteCreateDto) Get() *QuoteCreateDto {
	return v.value
}

func (v *NullableQuoteCreateDto) Set(val *QuoteCreateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteCreateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteCreateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteCreateDto(val *QuoteCreateDto) *NullableQuoteCreateDto {
	return &NullableQuoteCreateDto{value: val, isSet: true}
}

func (v NullableQuoteCreateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteCreateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


