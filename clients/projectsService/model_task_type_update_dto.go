/*
ProjectsService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TaskTypeUpdateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaskTypeUpdateDto{}

// TaskTypeUpdateDto struct for TaskTypeUpdateDto
type TaskTypeUpdateDto struct {
	Title NullableString `json:"title,omitempty"`
	DisplayInTimeTracker *bool `json:"displayInTimeTracker,omitempty"`
	RequiresDescription *bool `json:"requiresDescription,omitempty"`
}

// NewTaskTypeUpdateDto instantiates a new TaskTypeUpdateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskTypeUpdateDto() *TaskTypeUpdateDto {
	this := TaskTypeUpdateDto{}
	return &this
}

// NewTaskTypeUpdateDtoWithDefaults instantiates a new TaskTypeUpdateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskTypeUpdateDtoWithDefaults() *TaskTypeUpdateDto {
	this := TaskTypeUpdateDto{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskTypeUpdateDto) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskTypeUpdateDto) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *TaskTypeUpdateDto) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *TaskTypeUpdateDto) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *TaskTypeUpdateDto) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *TaskTypeUpdateDto) UnsetTitle() {
	o.Title.Unset()
}

// GetDisplayInTimeTracker returns the DisplayInTimeTracker field value if set, zero value otherwise.
func (o *TaskTypeUpdateDto) GetDisplayInTimeTracker() bool {
	if o == nil || IsNil(o.DisplayInTimeTracker) {
		var ret bool
		return ret
	}
	return *o.DisplayInTimeTracker
}

// GetDisplayInTimeTrackerOk returns a tuple with the DisplayInTimeTracker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskTypeUpdateDto) GetDisplayInTimeTrackerOk() (*bool, bool) {
	if o == nil || IsNil(o.DisplayInTimeTracker) {
		return nil, false
	}
	return o.DisplayInTimeTracker, true
}

// HasDisplayInTimeTracker returns a boolean if a field has been set.
func (o *TaskTypeUpdateDto) HasDisplayInTimeTracker() bool {
	if o != nil && !IsNil(o.DisplayInTimeTracker) {
		return true
	}

	return false
}

// SetDisplayInTimeTracker gets a reference to the given bool and assigns it to the DisplayInTimeTracker field.
func (o *TaskTypeUpdateDto) SetDisplayInTimeTracker(v bool) {
	o.DisplayInTimeTracker = &v
}

// GetRequiresDescription returns the RequiresDescription field value if set, zero value otherwise.
func (o *TaskTypeUpdateDto) GetRequiresDescription() bool {
	if o == nil || IsNil(o.RequiresDescription) {
		var ret bool
		return ret
	}
	return *o.RequiresDescription
}

// GetRequiresDescriptionOk returns a tuple with the RequiresDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskTypeUpdateDto) GetRequiresDescriptionOk() (*bool, bool) {
	if o == nil || IsNil(o.RequiresDescription) {
		return nil, false
	}
	return o.RequiresDescription, true
}

// HasRequiresDescription returns a boolean if a field has been set.
func (o *TaskTypeUpdateDto) HasRequiresDescription() bool {
	if o != nil && !IsNil(o.RequiresDescription) {
		return true
	}

	return false
}

// SetRequiresDescription gets a reference to the given bool and assigns it to the RequiresDescription field.
func (o *TaskTypeUpdateDto) SetRequiresDescription(v bool) {
	o.RequiresDescription = &v
}

func (o TaskTypeUpdateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaskTypeUpdateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if !IsNil(o.DisplayInTimeTracker) {
		toSerialize["displayInTimeTracker"] = o.DisplayInTimeTracker
	}
	if !IsNil(o.RequiresDescription) {
		toSerialize["requiresDescription"] = o.RequiresDescription
	}
	return toSerialize, nil
}

type NullableTaskTypeUpdateDto struct {
	value *TaskTypeUpdateDto
	isSet bool
}

func (v NullableTaskTypeUpdateDto) Get() *TaskTypeUpdateDto {
	return v.value
}

func (v *NullableTaskTypeUpdateDto) Set(val *TaskTypeUpdateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskTypeUpdateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskTypeUpdateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskTypeUpdateDto(val *TaskTypeUpdateDto) *NullableTaskTypeUpdateDto {
	return &NullableTaskTypeUpdateDto{value: val, isSet: true}
}

func (v NullableTaskTypeUpdateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskTypeUpdateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


