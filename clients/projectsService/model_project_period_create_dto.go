/*
ProjectsService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ProjectPeriodCreateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectPeriodCreateDto{}

// ProjectPeriodCreateDto struct for ProjectPeriodCreateDto
type ProjectPeriodCreateDto struct {
	Id *string `json:"id,omitempty"`
	Timestamp *time.Time `json:"timestamp,omitempty"`
	PeriodStartDate *time.Time `json:"periodStartDate,omitempty"`
	PeriodEndDate *time.Time `json:"periodEndDate,omitempty"`
	ProjectID NullableString `json:"projectID,omitempty"`
}

// NewProjectPeriodCreateDto instantiates a new ProjectPeriodCreateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectPeriodCreateDto() *ProjectPeriodCreateDto {
	this := ProjectPeriodCreateDto{}
	return &this
}

// NewProjectPeriodCreateDtoWithDefaults instantiates a new ProjectPeriodCreateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectPeriodCreateDtoWithDefaults() *ProjectPeriodCreateDto {
	this := ProjectPeriodCreateDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProjectPeriodCreateDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectPeriodCreateDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProjectPeriodCreateDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProjectPeriodCreateDto) SetId(v string) {
	o.Id = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ProjectPeriodCreateDto) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectPeriodCreateDto) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ProjectPeriodCreateDto) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *ProjectPeriodCreateDto) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetPeriodStartDate returns the PeriodStartDate field value if set, zero value otherwise.
func (o *ProjectPeriodCreateDto) GetPeriodStartDate() time.Time {
	if o == nil || IsNil(o.PeriodStartDate) {
		var ret time.Time
		return ret
	}
	return *o.PeriodStartDate
}

// GetPeriodStartDateOk returns a tuple with the PeriodStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectPeriodCreateDto) GetPeriodStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.PeriodStartDate) {
		return nil, false
	}
	return o.PeriodStartDate, true
}

// HasPeriodStartDate returns a boolean if a field has been set.
func (o *ProjectPeriodCreateDto) HasPeriodStartDate() bool {
	if o != nil && !IsNil(o.PeriodStartDate) {
		return true
	}

	return false
}

// SetPeriodStartDate gets a reference to the given time.Time and assigns it to the PeriodStartDate field.
func (o *ProjectPeriodCreateDto) SetPeriodStartDate(v time.Time) {
	o.PeriodStartDate = &v
}

// GetPeriodEndDate returns the PeriodEndDate field value if set, zero value otherwise.
func (o *ProjectPeriodCreateDto) GetPeriodEndDate() time.Time {
	if o == nil || IsNil(o.PeriodEndDate) {
		var ret time.Time
		return ret
	}
	return *o.PeriodEndDate
}

// GetPeriodEndDateOk returns a tuple with the PeriodEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectPeriodCreateDto) GetPeriodEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.PeriodEndDate) {
		return nil, false
	}
	return o.PeriodEndDate, true
}

// HasPeriodEndDate returns a boolean if a field has been set.
func (o *ProjectPeriodCreateDto) HasPeriodEndDate() bool {
	if o != nil && !IsNil(o.PeriodEndDate) {
		return true
	}

	return false
}

// SetPeriodEndDate gets a reference to the given time.Time and assigns it to the PeriodEndDate field.
func (o *ProjectPeriodCreateDto) SetPeriodEndDate(v time.Time) {
	o.PeriodEndDate = &v
}

// GetProjectID returns the ProjectID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectPeriodCreateDto) GetProjectID() string {
	if o == nil || IsNil(o.ProjectID.Get()) {
		var ret string
		return ret
	}
	return *o.ProjectID.Get()
}

// GetProjectIDOk returns a tuple with the ProjectID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectPeriodCreateDto) GetProjectIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectID.Get(), o.ProjectID.IsSet()
}

// HasProjectID returns a boolean if a field has been set.
func (o *ProjectPeriodCreateDto) HasProjectID() bool {
	if o != nil && o.ProjectID.IsSet() {
		return true
	}

	return false
}

// SetProjectID gets a reference to the given NullableString and assigns it to the ProjectID field.
func (o *ProjectPeriodCreateDto) SetProjectID(v string) {
	o.ProjectID.Set(&v)
}
// SetProjectIDNil sets the value for ProjectID to be an explicit nil
func (o *ProjectPeriodCreateDto) SetProjectIDNil() {
	o.ProjectID.Set(nil)
}

// UnsetProjectID ensures that no value is present for ProjectID, not even an explicit nil
func (o *ProjectPeriodCreateDto) UnsetProjectID() {
	o.ProjectID.Unset()
}

func (o ProjectPeriodCreateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectPeriodCreateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.PeriodStartDate) {
		toSerialize["periodStartDate"] = o.PeriodStartDate
	}
	if !IsNil(o.PeriodEndDate) {
		toSerialize["periodEndDate"] = o.PeriodEndDate
	}
	if o.ProjectID.IsSet() {
		toSerialize["projectID"] = o.ProjectID.Get()
	}
	return toSerialize, nil
}

type NullableProjectPeriodCreateDto struct {
	value *ProjectPeriodCreateDto
	isSet bool
}

func (v NullableProjectPeriodCreateDto) Get() *ProjectPeriodCreateDto {
	return v.value
}

func (v *NullableProjectPeriodCreateDto) Set(val *ProjectPeriodCreateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectPeriodCreateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectPeriodCreateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectPeriodCreateDto(val *ProjectPeriodCreateDto) *NullableProjectPeriodCreateDto {
	return &NullableProjectPeriodCreateDto{value: val, isSet: true}
}

func (v NullableProjectPeriodCreateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectPeriodCreateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


