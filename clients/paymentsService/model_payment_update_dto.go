/*
PaymentsService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the PaymentUpdateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentUpdateDto{}

// PaymentUpdateDto struct for PaymentUpdateDto
type PaymentUpdateDto struct {
	InvoiceId NullableString `json:"invoiceId,omitempty"`
	TenantId NullableString `json:"tenantId,omitempty"`
	EmisorWalletId NullableString `json:"emisorWalletId,omitempty"`
	ReceiverWalletId NullableString `json:"receiverWalletId,omitempty"`
	CurrencyId NullableString `json:"currencyId,omitempty"`
	ForexRate *float64 `json:"forexRate,omitempty"`
	TotalCost *float64 `json:"totalCost,omitempty"`
	TotalTaxes *float64 `json:"totalTaxes,omitempty"`
	Closed *bool `json:"closed,omitempty"`
	Data NullableString `json:"data,omitempty"`
	DataLabel NullableString `json:"dataLabel,omitempty"`
	Data1 NullableString `json:"data1,omitempty"`
	Data1Label NullableString `json:"data1Label,omitempty"`
	Response NullableString `json:"response,omitempty"`
	Authorization NullableString `json:"authorization,omitempty"`
	ReferenceCode NullableString `json:"referenceCode,omitempty"`
	CorrelationCode NullableString `json:"correlationCode,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	OnBehalfOf *int32 `json:"onBehalfOf,omitempty"`
	PaymentType *int32 `json:"paymentType,omitempty"`
	PaymentStatus *int32 `json:"paymentStatus,omitempty"`
	BaseCost *float64 `json:"baseCost,omitempty"`
	Signature NullableString `json:"signature,omitempty"`
	SignatureMismatch *bool `json:"signatureMismatch,omitempty"`
	IsExternal *bool `json:"isExternal,omitempty"`
	MarkedForRevision *bool `json:"markedForRevision,omitempty"`
	ForexRatesSnapshot NullableString `json:"forexRatesSnapshot,omitempty"`
	OfficialId NullableString `json:"officialId,omitempty"`
	OfficialIdExpeditionDate *time.Time `json:"officialIdExpeditionDate,omitempty"`
	FiscalIdentificationTypeId NullableString `json:"fiscalIdentificationTypeId,omitempty"`
	BillingAddress NullableString `json:"billingAddress,omitempty"`
	Phone NullableString `json:"phone,omitempty"`
	Cellphone NullableString `json:"cellphone,omitempty"`
	Department NullableString `json:"department,omitempty"`
	City NullableString `json:"city,omitempty"`
	CountryId NullableString `json:"countryId,omitempty"`
	LocationId NullableString `json:"locationId,omitempty"`
	EntitlementId NullableString `json:"entitlementId,omitempty"`
	AntiFraudScore *float64 `json:"antiFraudScore,omitempty"`
	CallRecordURL NullableString `json:"callRecordURL,omitempty"`
	Called *bool `json:"called,omitempty"`
	Verified *bool `json:"verified,omitempty"`
	PayerPictureTimestamp NullableString `json:"payerPictureTimestamp,omitempty"`
	PayerPicture NullableString `json:"payerPicture,omitempty"`
	IdentificationPictureTimestamp NullableString `json:"identificationPictureTimestamp,omitempty"`
	IdentificationPicture NullableString `json:"identificationPicture,omitempty"`
	IdentificationBackPicture NullableString `json:"identificationBackPicture,omitempty"`
	IdentificationBackPictureTimestamp NullableString `json:"identificationBackPictureTimestamp,omitempty"`
	IpLookupId NullableString `json:"ipLookupId,omitempty"`
	OrderId NullableString `json:"orderId,omitempty"`
	AccountingEntryId NullableString `json:"accountingEntryId,omitempty"`
	PaymentGatewayId NullableString `json:"paymentGatewayId,omitempty"`
	BankAccountId NullableString `json:"bankAccountId,omitempty"`
	EnrolmentId NullableString `json:"enrolmentId,omitempty"`
	BankId NullableString `json:"bankId,omitempty"`
	PaymentTokenId NullableString `json:"paymentTokenId,omitempty"`
	EmisorWalletAccountId NullableString `json:"emisorWalletAccountId,omitempty"`
	ReceiverWalletAccountId NullableString `json:"receiverWalletAccountId,omitempty"`
}

// NewPaymentUpdateDto instantiates a new PaymentUpdateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentUpdateDto() *PaymentUpdateDto {
	this := PaymentUpdateDto{}
	return &this
}

// NewPaymentUpdateDtoWithDefaults instantiates a new PaymentUpdateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentUpdateDtoWithDefaults() *PaymentUpdateDto {
	this := PaymentUpdateDto{}
	return &this
}

// GetInvoiceId returns the InvoiceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetInvoiceId() string {
	if o == nil || IsNil(o.InvoiceId.Get()) {
		var ret string
		return ret
	}
	return *o.InvoiceId.Get()
}

// GetInvoiceIdOk returns a tuple with the InvoiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetInvoiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceId.Get(), o.InvoiceId.IsSet()
}

// HasInvoiceId returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasInvoiceId() bool {
	if o != nil && o.InvoiceId.IsSet() {
		return true
	}

	return false
}

// SetInvoiceId gets a reference to the given NullableString and assigns it to the InvoiceId field.
func (o *PaymentUpdateDto) SetInvoiceId(v string) {
	o.InvoiceId.Set(&v)
}
// SetInvoiceIdNil sets the value for InvoiceId to be an explicit nil
func (o *PaymentUpdateDto) SetInvoiceIdNil() {
	o.InvoiceId.Set(nil)
}

// UnsetInvoiceId ensures that no value is present for InvoiceId, not even an explicit nil
func (o *PaymentUpdateDto) UnsetInvoiceId() {
	o.InvoiceId.Unset()
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *PaymentUpdateDto) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *PaymentUpdateDto) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *PaymentUpdateDto) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetEmisorWalletId returns the EmisorWalletId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetEmisorWalletId() string {
	if o == nil || IsNil(o.EmisorWalletId.Get()) {
		var ret string
		return ret
	}
	return *o.EmisorWalletId.Get()
}

// GetEmisorWalletIdOk returns a tuple with the EmisorWalletId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetEmisorWalletIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EmisorWalletId.Get(), o.EmisorWalletId.IsSet()
}

// HasEmisorWalletId returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasEmisorWalletId() bool {
	if o != nil && o.EmisorWalletId.IsSet() {
		return true
	}

	return false
}

// SetEmisorWalletId gets a reference to the given NullableString and assigns it to the EmisorWalletId field.
func (o *PaymentUpdateDto) SetEmisorWalletId(v string) {
	o.EmisorWalletId.Set(&v)
}
// SetEmisorWalletIdNil sets the value for EmisorWalletId to be an explicit nil
func (o *PaymentUpdateDto) SetEmisorWalletIdNil() {
	o.EmisorWalletId.Set(nil)
}

// UnsetEmisorWalletId ensures that no value is present for EmisorWalletId, not even an explicit nil
func (o *PaymentUpdateDto) UnsetEmisorWalletId() {
	o.EmisorWalletId.Unset()
}

// GetReceiverWalletId returns the ReceiverWalletId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetReceiverWalletId() string {
	if o == nil || IsNil(o.ReceiverWalletId.Get()) {
		var ret string
		return ret
	}
	return *o.ReceiverWalletId.Get()
}

// GetReceiverWalletIdOk returns a tuple with the ReceiverWalletId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetReceiverWalletIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiverWalletId.Get(), o.ReceiverWalletId.IsSet()
}

// HasReceiverWalletId returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasReceiverWalletId() bool {
	if o != nil && o.ReceiverWalletId.IsSet() {
		return true
	}

	return false
}

// SetReceiverWalletId gets a reference to the given NullableString and assigns it to the ReceiverWalletId field.
func (o *PaymentUpdateDto) SetReceiverWalletId(v string) {
	o.ReceiverWalletId.Set(&v)
}
// SetReceiverWalletIdNil sets the value for ReceiverWalletId to be an explicit nil
func (o *PaymentUpdateDto) SetReceiverWalletIdNil() {
	o.ReceiverWalletId.Set(nil)
}

// UnsetReceiverWalletId ensures that no value is present for ReceiverWalletId, not even an explicit nil
func (o *PaymentUpdateDto) UnsetReceiverWalletId() {
	o.ReceiverWalletId.Unset()
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetCurrencyId() string {
	if o == nil || IsNil(o.CurrencyId.Get()) {
		var ret string
		return ret
	}
	return *o.CurrencyId.Get()
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetCurrencyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrencyId.Get(), o.CurrencyId.IsSet()
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasCurrencyId() bool {
	if o != nil && o.CurrencyId.IsSet() {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given NullableString and assigns it to the CurrencyId field.
func (o *PaymentUpdateDto) SetCurrencyId(v string) {
	o.CurrencyId.Set(&v)
}
// SetCurrencyIdNil sets the value for CurrencyId to be an explicit nil
func (o *PaymentUpdateDto) SetCurrencyIdNil() {
	o.CurrencyId.Set(nil)
}

// UnsetCurrencyId ensures that no value is present for CurrencyId, not even an explicit nil
func (o *PaymentUpdateDto) UnsetCurrencyId() {
	o.CurrencyId.Unset()
}

// GetForexRate returns the ForexRate field value if set, zero value otherwise.
func (o *PaymentUpdateDto) GetForexRate() float64 {
	if o == nil || IsNil(o.ForexRate) {
		var ret float64
		return ret
	}
	return *o.ForexRate
}

// GetForexRateOk returns a tuple with the ForexRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentUpdateDto) GetForexRateOk() (*float64, bool) {
	if o == nil || IsNil(o.ForexRate) {
		return nil, false
	}
	return o.ForexRate, true
}

// HasForexRate returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasForexRate() bool {
	if o != nil && !IsNil(o.ForexRate) {
		return true
	}

	return false
}

// SetForexRate gets a reference to the given float64 and assigns it to the ForexRate field.
func (o *PaymentUpdateDto) SetForexRate(v float64) {
	o.ForexRate = &v
}

// GetTotalCost returns the TotalCost field value if set, zero value otherwise.
func (o *PaymentUpdateDto) GetTotalCost() float64 {
	if o == nil || IsNil(o.TotalCost) {
		var ret float64
		return ret
	}
	return *o.TotalCost
}

// GetTotalCostOk returns a tuple with the TotalCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentUpdateDto) GetTotalCostOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalCost) {
		return nil, false
	}
	return o.TotalCost, true
}

// HasTotalCost returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasTotalCost() bool {
	if o != nil && !IsNil(o.TotalCost) {
		return true
	}

	return false
}

// SetTotalCost gets a reference to the given float64 and assigns it to the TotalCost field.
func (o *PaymentUpdateDto) SetTotalCost(v float64) {
	o.TotalCost = &v
}

// GetTotalTaxes returns the TotalTaxes field value if set, zero value otherwise.
func (o *PaymentUpdateDto) GetTotalTaxes() float64 {
	if o == nil || IsNil(o.TotalTaxes) {
		var ret float64
		return ret
	}
	return *o.TotalTaxes
}

// GetTotalTaxesOk returns a tuple with the TotalTaxes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentUpdateDto) GetTotalTaxesOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalTaxes) {
		return nil, false
	}
	return o.TotalTaxes, true
}

// HasTotalTaxes returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasTotalTaxes() bool {
	if o != nil && !IsNil(o.TotalTaxes) {
		return true
	}

	return false
}

// SetTotalTaxes gets a reference to the given float64 and assigns it to the TotalTaxes field.
func (o *PaymentUpdateDto) SetTotalTaxes(v float64) {
	o.TotalTaxes = &v
}

// GetClosed returns the Closed field value if set, zero value otherwise.
func (o *PaymentUpdateDto) GetClosed() bool {
	if o == nil || IsNil(o.Closed) {
		var ret bool
		return ret
	}
	return *o.Closed
}

// GetClosedOk returns a tuple with the Closed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentUpdateDto) GetClosedOk() (*bool, bool) {
	if o == nil || IsNil(o.Closed) {
		return nil, false
	}
	return o.Closed, true
}

// HasClosed returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasClosed() bool {
	if o != nil && !IsNil(o.Closed) {
		return true
	}

	return false
}

// SetClosed gets a reference to the given bool and assigns it to the Closed field.
func (o *PaymentUpdateDto) SetClosed(v bool) {
	o.Closed = &v
}

// GetData returns the Data field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetData() string {
	if o == nil || IsNil(o.Data.Get()) {
		var ret string
		return ret
	}
	return *o.Data.Get()
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data.Get(), o.Data.IsSet()
}

// HasData returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasData() bool {
	if o != nil && o.Data.IsSet() {
		return true
	}

	return false
}

// SetData gets a reference to the given NullableString and assigns it to the Data field.
func (o *PaymentUpdateDto) SetData(v string) {
	o.Data.Set(&v)
}
// SetDataNil sets the value for Data to be an explicit nil
func (o *PaymentUpdateDto) SetDataNil() {
	o.Data.Set(nil)
}

// UnsetData ensures that no value is present for Data, not even an explicit nil
func (o *PaymentUpdateDto) UnsetData() {
	o.Data.Unset()
}

// GetDataLabel returns the DataLabel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetDataLabel() string {
	if o == nil || IsNil(o.DataLabel.Get()) {
		var ret string
		return ret
	}
	return *o.DataLabel.Get()
}

// GetDataLabelOk returns a tuple with the DataLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetDataLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DataLabel.Get(), o.DataLabel.IsSet()
}

// HasDataLabel returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasDataLabel() bool {
	if o != nil && o.DataLabel.IsSet() {
		return true
	}

	return false
}

// SetDataLabel gets a reference to the given NullableString and assigns it to the DataLabel field.
func (o *PaymentUpdateDto) SetDataLabel(v string) {
	o.DataLabel.Set(&v)
}
// SetDataLabelNil sets the value for DataLabel to be an explicit nil
func (o *PaymentUpdateDto) SetDataLabelNil() {
	o.DataLabel.Set(nil)
}

// UnsetDataLabel ensures that no value is present for DataLabel, not even an explicit nil
func (o *PaymentUpdateDto) UnsetDataLabel() {
	o.DataLabel.Unset()
}

// GetData1 returns the Data1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetData1() string {
	if o == nil || IsNil(o.Data1.Get()) {
		var ret string
		return ret
	}
	return *o.Data1.Get()
}

// GetData1Ok returns a tuple with the Data1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetData1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data1.Get(), o.Data1.IsSet()
}

// HasData1 returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasData1() bool {
	if o != nil && o.Data1.IsSet() {
		return true
	}

	return false
}

// SetData1 gets a reference to the given NullableString and assigns it to the Data1 field.
func (o *PaymentUpdateDto) SetData1(v string) {
	o.Data1.Set(&v)
}
// SetData1Nil sets the value for Data1 to be an explicit nil
func (o *PaymentUpdateDto) SetData1Nil() {
	o.Data1.Set(nil)
}

// UnsetData1 ensures that no value is present for Data1, not even an explicit nil
func (o *PaymentUpdateDto) UnsetData1() {
	o.Data1.Unset()
}

// GetData1Label returns the Data1Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetData1Label() string {
	if o == nil || IsNil(o.Data1Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data1Label.Get()
}

// GetData1LabelOk returns a tuple with the Data1Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetData1LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data1Label.Get(), o.Data1Label.IsSet()
}

// HasData1Label returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasData1Label() bool {
	if o != nil && o.Data1Label.IsSet() {
		return true
	}

	return false
}

// SetData1Label gets a reference to the given NullableString and assigns it to the Data1Label field.
func (o *PaymentUpdateDto) SetData1Label(v string) {
	o.Data1Label.Set(&v)
}
// SetData1LabelNil sets the value for Data1Label to be an explicit nil
func (o *PaymentUpdateDto) SetData1LabelNil() {
	o.Data1Label.Set(nil)
}

// UnsetData1Label ensures that no value is present for Data1Label, not even an explicit nil
func (o *PaymentUpdateDto) UnsetData1Label() {
	o.Data1Label.Unset()
}

// GetResponse returns the Response field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetResponse() string {
	if o == nil || IsNil(o.Response.Get()) {
		var ret string
		return ret
	}
	return *o.Response.Get()
}

// GetResponseOk returns a tuple with the Response field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetResponseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Response.Get(), o.Response.IsSet()
}

// HasResponse returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasResponse() bool {
	if o != nil && o.Response.IsSet() {
		return true
	}

	return false
}

// SetResponse gets a reference to the given NullableString and assigns it to the Response field.
func (o *PaymentUpdateDto) SetResponse(v string) {
	o.Response.Set(&v)
}
// SetResponseNil sets the value for Response to be an explicit nil
func (o *PaymentUpdateDto) SetResponseNil() {
	o.Response.Set(nil)
}

// UnsetResponse ensures that no value is present for Response, not even an explicit nil
func (o *PaymentUpdateDto) UnsetResponse() {
	o.Response.Unset()
}

// GetAuthorization returns the Authorization field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetAuthorization() string {
	if o == nil || IsNil(o.Authorization.Get()) {
		var ret string
		return ret
	}
	return *o.Authorization.Get()
}

// GetAuthorizationOk returns a tuple with the Authorization field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetAuthorizationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Authorization.Get(), o.Authorization.IsSet()
}

// HasAuthorization returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasAuthorization() bool {
	if o != nil && o.Authorization.IsSet() {
		return true
	}

	return false
}

// SetAuthorization gets a reference to the given NullableString and assigns it to the Authorization field.
func (o *PaymentUpdateDto) SetAuthorization(v string) {
	o.Authorization.Set(&v)
}
// SetAuthorizationNil sets the value for Authorization to be an explicit nil
func (o *PaymentUpdateDto) SetAuthorizationNil() {
	o.Authorization.Set(nil)
}

// UnsetAuthorization ensures that no value is present for Authorization, not even an explicit nil
func (o *PaymentUpdateDto) UnsetAuthorization() {
	o.Authorization.Unset()
}

// GetReferenceCode returns the ReferenceCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetReferenceCode() string {
	if o == nil || IsNil(o.ReferenceCode.Get()) {
		var ret string
		return ret
	}
	return *o.ReferenceCode.Get()
}

// GetReferenceCodeOk returns a tuple with the ReferenceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetReferenceCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReferenceCode.Get(), o.ReferenceCode.IsSet()
}

// HasReferenceCode returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasReferenceCode() bool {
	if o != nil && o.ReferenceCode.IsSet() {
		return true
	}

	return false
}

// SetReferenceCode gets a reference to the given NullableString and assigns it to the ReferenceCode field.
func (o *PaymentUpdateDto) SetReferenceCode(v string) {
	o.ReferenceCode.Set(&v)
}
// SetReferenceCodeNil sets the value for ReferenceCode to be an explicit nil
func (o *PaymentUpdateDto) SetReferenceCodeNil() {
	o.ReferenceCode.Set(nil)
}

// UnsetReferenceCode ensures that no value is present for ReferenceCode, not even an explicit nil
func (o *PaymentUpdateDto) UnsetReferenceCode() {
	o.ReferenceCode.Unset()
}

// GetCorrelationCode returns the CorrelationCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetCorrelationCode() string {
	if o == nil || IsNil(o.CorrelationCode.Get()) {
		var ret string
		return ret
	}
	return *o.CorrelationCode.Get()
}

// GetCorrelationCodeOk returns a tuple with the CorrelationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetCorrelationCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CorrelationCode.Get(), o.CorrelationCode.IsSet()
}

// HasCorrelationCode returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasCorrelationCode() bool {
	if o != nil && o.CorrelationCode.IsSet() {
		return true
	}

	return false
}

// SetCorrelationCode gets a reference to the given NullableString and assigns it to the CorrelationCode field.
func (o *PaymentUpdateDto) SetCorrelationCode(v string) {
	o.CorrelationCode.Set(&v)
}
// SetCorrelationCodeNil sets the value for CorrelationCode to be an explicit nil
func (o *PaymentUpdateDto) SetCorrelationCodeNil() {
	o.CorrelationCode.Set(nil)
}

// UnsetCorrelationCode ensures that no value is present for CorrelationCode, not even an explicit nil
func (o *PaymentUpdateDto) UnsetCorrelationCode() {
	o.CorrelationCode.Unset()
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *PaymentUpdateDto) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentUpdateDto) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *PaymentUpdateDto) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetOnBehalfOf returns the OnBehalfOf field value if set, zero value otherwise.
func (o *PaymentUpdateDto) GetOnBehalfOf() int32 {
	if o == nil || IsNil(o.OnBehalfOf) {
		var ret int32
		return ret
	}
	return *o.OnBehalfOf
}

// GetOnBehalfOfOk returns a tuple with the OnBehalfOf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentUpdateDto) GetOnBehalfOfOk() (*int32, bool) {
	if o == nil || IsNil(o.OnBehalfOf) {
		return nil, false
	}
	return o.OnBehalfOf, true
}

// HasOnBehalfOf returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasOnBehalfOf() bool {
	if o != nil && !IsNil(o.OnBehalfOf) {
		return true
	}

	return false
}

// SetOnBehalfOf gets a reference to the given int32 and assigns it to the OnBehalfOf field.
func (o *PaymentUpdateDto) SetOnBehalfOf(v int32) {
	o.OnBehalfOf = &v
}

// GetPaymentType returns the PaymentType field value if set, zero value otherwise.
func (o *PaymentUpdateDto) GetPaymentType() int32 {
	if o == nil || IsNil(o.PaymentType) {
		var ret int32
		return ret
	}
	return *o.PaymentType
}

// GetPaymentTypeOk returns a tuple with the PaymentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentUpdateDto) GetPaymentTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.PaymentType) {
		return nil, false
	}
	return o.PaymentType, true
}

// HasPaymentType returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasPaymentType() bool {
	if o != nil && !IsNil(o.PaymentType) {
		return true
	}

	return false
}

// SetPaymentType gets a reference to the given int32 and assigns it to the PaymentType field.
func (o *PaymentUpdateDto) SetPaymentType(v int32) {
	o.PaymentType = &v
}

// GetPaymentStatus returns the PaymentStatus field value if set, zero value otherwise.
func (o *PaymentUpdateDto) GetPaymentStatus() int32 {
	if o == nil || IsNil(o.PaymentStatus) {
		var ret int32
		return ret
	}
	return *o.PaymentStatus
}

// GetPaymentStatusOk returns a tuple with the PaymentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentUpdateDto) GetPaymentStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.PaymentStatus) {
		return nil, false
	}
	return o.PaymentStatus, true
}

// HasPaymentStatus returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasPaymentStatus() bool {
	if o != nil && !IsNil(o.PaymentStatus) {
		return true
	}

	return false
}

// SetPaymentStatus gets a reference to the given int32 and assigns it to the PaymentStatus field.
func (o *PaymentUpdateDto) SetPaymentStatus(v int32) {
	o.PaymentStatus = &v
}

// GetBaseCost returns the BaseCost field value if set, zero value otherwise.
func (o *PaymentUpdateDto) GetBaseCost() float64 {
	if o == nil || IsNil(o.BaseCost) {
		var ret float64
		return ret
	}
	return *o.BaseCost
}

// GetBaseCostOk returns a tuple with the BaseCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentUpdateDto) GetBaseCostOk() (*float64, bool) {
	if o == nil || IsNil(o.BaseCost) {
		return nil, false
	}
	return o.BaseCost, true
}

// HasBaseCost returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasBaseCost() bool {
	if o != nil && !IsNil(o.BaseCost) {
		return true
	}

	return false
}

// SetBaseCost gets a reference to the given float64 and assigns it to the BaseCost field.
func (o *PaymentUpdateDto) SetBaseCost(v float64) {
	o.BaseCost = &v
}

// GetSignature returns the Signature field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetSignature() string {
	if o == nil || IsNil(o.Signature.Get()) {
		var ret string
		return ret
	}
	return *o.Signature.Get()
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Signature.Get(), o.Signature.IsSet()
}

// HasSignature returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasSignature() bool {
	if o != nil && o.Signature.IsSet() {
		return true
	}

	return false
}

// SetSignature gets a reference to the given NullableString and assigns it to the Signature field.
func (o *PaymentUpdateDto) SetSignature(v string) {
	o.Signature.Set(&v)
}
// SetSignatureNil sets the value for Signature to be an explicit nil
func (o *PaymentUpdateDto) SetSignatureNil() {
	o.Signature.Set(nil)
}

// UnsetSignature ensures that no value is present for Signature, not even an explicit nil
func (o *PaymentUpdateDto) UnsetSignature() {
	o.Signature.Unset()
}

// GetSignatureMismatch returns the SignatureMismatch field value if set, zero value otherwise.
func (o *PaymentUpdateDto) GetSignatureMismatch() bool {
	if o == nil || IsNil(o.SignatureMismatch) {
		var ret bool
		return ret
	}
	return *o.SignatureMismatch
}

// GetSignatureMismatchOk returns a tuple with the SignatureMismatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentUpdateDto) GetSignatureMismatchOk() (*bool, bool) {
	if o == nil || IsNil(o.SignatureMismatch) {
		return nil, false
	}
	return o.SignatureMismatch, true
}

// HasSignatureMismatch returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasSignatureMismatch() bool {
	if o != nil && !IsNil(o.SignatureMismatch) {
		return true
	}

	return false
}

// SetSignatureMismatch gets a reference to the given bool and assigns it to the SignatureMismatch field.
func (o *PaymentUpdateDto) SetSignatureMismatch(v bool) {
	o.SignatureMismatch = &v
}

// GetIsExternal returns the IsExternal field value if set, zero value otherwise.
func (o *PaymentUpdateDto) GetIsExternal() bool {
	if o == nil || IsNil(o.IsExternal) {
		var ret bool
		return ret
	}
	return *o.IsExternal
}

// GetIsExternalOk returns a tuple with the IsExternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentUpdateDto) GetIsExternalOk() (*bool, bool) {
	if o == nil || IsNil(o.IsExternal) {
		return nil, false
	}
	return o.IsExternal, true
}

// HasIsExternal returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasIsExternal() bool {
	if o != nil && !IsNil(o.IsExternal) {
		return true
	}

	return false
}

// SetIsExternal gets a reference to the given bool and assigns it to the IsExternal field.
func (o *PaymentUpdateDto) SetIsExternal(v bool) {
	o.IsExternal = &v
}

// GetMarkedForRevision returns the MarkedForRevision field value if set, zero value otherwise.
func (o *PaymentUpdateDto) GetMarkedForRevision() bool {
	if o == nil || IsNil(o.MarkedForRevision) {
		var ret bool
		return ret
	}
	return *o.MarkedForRevision
}

// GetMarkedForRevisionOk returns a tuple with the MarkedForRevision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentUpdateDto) GetMarkedForRevisionOk() (*bool, bool) {
	if o == nil || IsNil(o.MarkedForRevision) {
		return nil, false
	}
	return o.MarkedForRevision, true
}

// HasMarkedForRevision returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasMarkedForRevision() bool {
	if o != nil && !IsNil(o.MarkedForRevision) {
		return true
	}

	return false
}

// SetMarkedForRevision gets a reference to the given bool and assigns it to the MarkedForRevision field.
func (o *PaymentUpdateDto) SetMarkedForRevision(v bool) {
	o.MarkedForRevision = &v
}

// GetForexRatesSnapshot returns the ForexRatesSnapshot field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetForexRatesSnapshot() string {
	if o == nil || IsNil(o.ForexRatesSnapshot.Get()) {
		var ret string
		return ret
	}
	return *o.ForexRatesSnapshot.Get()
}

// GetForexRatesSnapshotOk returns a tuple with the ForexRatesSnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetForexRatesSnapshotOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ForexRatesSnapshot.Get(), o.ForexRatesSnapshot.IsSet()
}

// HasForexRatesSnapshot returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasForexRatesSnapshot() bool {
	if o != nil && o.ForexRatesSnapshot.IsSet() {
		return true
	}

	return false
}

// SetForexRatesSnapshot gets a reference to the given NullableString and assigns it to the ForexRatesSnapshot field.
func (o *PaymentUpdateDto) SetForexRatesSnapshot(v string) {
	o.ForexRatesSnapshot.Set(&v)
}
// SetForexRatesSnapshotNil sets the value for ForexRatesSnapshot to be an explicit nil
func (o *PaymentUpdateDto) SetForexRatesSnapshotNil() {
	o.ForexRatesSnapshot.Set(nil)
}

// UnsetForexRatesSnapshot ensures that no value is present for ForexRatesSnapshot, not even an explicit nil
func (o *PaymentUpdateDto) UnsetForexRatesSnapshot() {
	o.ForexRatesSnapshot.Unset()
}

// GetOfficialId returns the OfficialId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetOfficialId() string {
	if o == nil || IsNil(o.OfficialId.Get()) {
		var ret string
		return ret
	}
	return *o.OfficialId.Get()
}

// GetOfficialIdOk returns a tuple with the OfficialId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetOfficialIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OfficialId.Get(), o.OfficialId.IsSet()
}

// HasOfficialId returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasOfficialId() bool {
	if o != nil && o.OfficialId.IsSet() {
		return true
	}

	return false
}

// SetOfficialId gets a reference to the given NullableString and assigns it to the OfficialId field.
func (o *PaymentUpdateDto) SetOfficialId(v string) {
	o.OfficialId.Set(&v)
}
// SetOfficialIdNil sets the value for OfficialId to be an explicit nil
func (o *PaymentUpdateDto) SetOfficialIdNil() {
	o.OfficialId.Set(nil)
}

// UnsetOfficialId ensures that no value is present for OfficialId, not even an explicit nil
func (o *PaymentUpdateDto) UnsetOfficialId() {
	o.OfficialId.Unset()
}

// GetOfficialIdExpeditionDate returns the OfficialIdExpeditionDate field value if set, zero value otherwise.
func (o *PaymentUpdateDto) GetOfficialIdExpeditionDate() time.Time {
	if o == nil || IsNil(o.OfficialIdExpeditionDate) {
		var ret time.Time
		return ret
	}
	return *o.OfficialIdExpeditionDate
}

// GetOfficialIdExpeditionDateOk returns a tuple with the OfficialIdExpeditionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentUpdateDto) GetOfficialIdExpeditionDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.OfficialIdExpeditionDate) {
		return nil, false
	}
	return o.OfficialIdExpeditionDate, true
}

// HasOfficialIdExpeditionDate returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasOfficialIdExpeditionDate() bool {
	if o != nil && !IsNil(o.OfficialIdExpeditionDate) {
		return true
	}

	return false
}

// SetOfficialIdExpeditionDate gets a reference to the given time.Time and assigns it to the OfficialIdExpeditionDate field.
func (o *PaymentUpdateDto) SetOfficialIdExpeditionDate(v time.Time) {
	o.OfficialIdExpeditionDate = &v
}

// GetFiscalIdentificationTypeId returns the FiscalIdentificationTypeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetFiscalIdentificationTypeId() string {
	if o == nil || IsNil(o.FiscalIdentificationTypeId.Get()) {
		var ret string
		return ret
	}
	return *o.FiscalIdentificationTypeId.Get()
}

// GetFiscalIdentificationTypeIdOk returns a tuple with the FiscalIdentificationTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetFiscalIdentificationTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FiscalIdentificationTypeId.Get(), o.FiscalIdentificationTypeId.IsSet()
}

// HasFiscalIdentificationTypeId returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasFiscalIdentificationTypeId() bool {
	if o != nil && o.FiscalIdentificationTypeId.IsSet() {
		return true
	}

	return false
}

// SetFiscalIdentificationTypeId gets a reference to the given NullableString and assigns it to the FiscalIdentificationTypeId field.
func (o *PaymentUpdateDto) SetFiscalIdentificationTypeId(v string) {
	o.FiscalIdentificationTypeId.Set(&v)
}
// SetFiscalIdentificationTypeIdNil sets the value for FiscalIdentificationTypeId to be an explicit nil
func (o *PaymentUpdateDto) SetFiscalIdentificationTypeIdNil() {
	o.FiscalIdentificationTypeId.Set(nil)
}

// UnsetFiscalIdentificationTypeId ensures that no value is present for FiscalIdentificationTypeId, not even an explicit nil
func (o *PaymentUpdateDto) UnsetFiscalIdentificationTypeId() {
	o.FiscalIdentificationTypeId.Unset()
}

// GetBillingAddress returns the BillingAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetBillingAddress() string {
	if o == nil || IsNil(o.BillingAddress.Get()) {
		var ret string
		return ret
	}
	return *o.BillingAddress.Get()
}

// GetBillingAddressOk returns a tuple with the BillingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetBillingAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingAddress.Get(), o.BillingAddress.IsSet()
}

// HasBillingAddress returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasBillingAddress() bool {
	if o != nil && o.BillingAddress.IsSet() {
		return true
	}

	return false
}

// SetBillingAddress gets a reference to the given NullableString and assigns it to the BillingAddress field.
func (o *PaymentUpdateDto) SetBillingAddress(v string) {
	o.BillingAddress.Set(&v)
}
// SetBillingAddressNil sets the value for BillingAddress to be an explicit nil
func (o *PaymentUpdateDto) SetBillingAddressNil() {
	o.BillingAddress.Set(nil)
}

// UnsetBillingAddress ensures that no value is present for BillingAddress, not even an explicit nil
func (o *PaymentUpdateDto) UnsetBillingAddress() {
	o.BillingAddress.Unset()
}

// GetPhone returns the Phone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetPhone() string {
	if o == nil || IsNil(o.Phone.Get()) {
		var ret string
		return ret
	}
	return *o.Phone.Get()
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Phone.Get(), o.Phone.IsSet()
}

// HasPhone returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasPhone() bool {
	if o != nil && o.Phone.IsSet() {
		return true
	}

	return false
}

// SetPhone gets a reference to the given NullableString and assigns it to the Phone field.
func (o *PaymentUpdateDto) SetPhone(v string) {
	o.Phone.Set(&v)
}
// SetPhoneNil sets the value for Phone to be an explicit nil
func (o *PaymentUpdateDto) SetPhoneNil() {
	o.Phone.Set(nil)
}

// UnsetPhone ensures that no value is present for Phone, not even an explicit nil
func (o *PaymentUpdateDto) UnsetPhone() {
	o.Phone.Unset()
}

// GetCellphone returns the Cellphone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetCellphone() string {
	if o == nil || IsNil(o.Cellphone.Get()) {
		var ret string
		return ret
	}
	return *o.Cellphone.Get()
}

// GetCellphoneOk returns a tuple with the Cellphone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetCellphoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cellphone.Get(), o.Cellphone.IsSet()
}

// HasCellphone returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasCellphone() bool {
	if o != nil && o.Cellphone.IsSet() {
		return true
	}

	return false
}

// SetCellphone gets a reference to the given NullableString and assigns it to the Cellphone field.
func (o *PaymentUpdateDto) SetCellphone(v string) {
	o.Cellphone.Set(&v)
}
// SetCellphoneNil sets the value for Cellphone to be an explicit nil
func (o *PaymentUpdateDto) SetCellphoneNil() {
	o.Cellphone.Set(nil)
}

// UnsetCellphone ensures that no value is present for Cellphone, not even an explicit nil
func (o *PaymentUpdateDto) UnsetCellphone() {
	o.Cellphone.Unset()
}

// GetDepartment returns the Department field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetDepartment() string {
	if o == nil || IsNil(o.Department.Get()) {
		var ret string
		return ret
	}
	return *o.Department.Get()
}

// GetDepartmentOk returns a tuple with the Department field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetDepartmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Department.Get(), o.Department.IsSet()
}

// HasDepartment returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasDepartment() bool {
	if o != nil && o.Department.IsSet() {
		return true
	}

	return false
}

// SetDepartment gets a reference to the given NullableString and assigns it to the Department field.
func (o *PaymentUpdateDto) SetDepartment(v string) {
	o.Department.Set(&v)
}
// SetDepartmentNil sets the value for Department to be an explicit nil
func (o *PaymentUpdateDto) SetDepartmentNil() {
	o.Department.Set(nil)
}

// UnsetDepartment ensures that no value is present for Department, not even an explicit nil
func (o *PaymentUpdateDto) UnsetDepartment() {
	o.Department.Unset()
}

// GetCity returns the City field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetCity() string {
	if o == nil || IsNil(o.City.Get()) {
		var ret string
		return ret
	}
	return *o.City.Get()
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.City.Get(), o.City.IsSet()
}

// HasCity returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasCity() bool {
	if o != nil && o.City.IsSet() {
		return true
	}

	return false
}

// SetCity gets a reference to the given NullableString and assigns it to the City field.
func (o *PaymentUpdateDto) SetCity(v string) {
	o.City.Set(&v)
}
// SetCityNil sets the value for City to be an explicit nil
func (o *PaymentUpdateDto) SetCityNil() {
	o.City.Set(nil)
}

// UnsetCity ensures that no value is present for City, not even an explicit nil
func (o *PaymentUpdateDto) UnsetCity() {
	o.City.Unset()
}

// GetCountryId returns the CountryId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetCountryId() string {
	if o == nil || IsNil(o.CountryId.Get()) {
		var ret string
		return ret
	}
	return *o.CountryId.Get()
}

// GetCountryIdOk returns a tuple with the CountryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetCountryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryId.Get(), o.CountryId.IsSet()
}

// HasCountryId returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasCountryId() bool {
	if o != nil && o.CountryId.IsSet() {
		return true
	}

	return false
}

// SetCountryId gets a reference to the given NullableString and assigns it to the CountryId field.
func (o *PaymentUpdateDto) SetCountryId(v string) {
	o.CountryId.Set(&v)
}
// SetCountryIdNil sets the value for CountryId to be an explicit nil
func (o *PaymentUpdateDto) SetCountryIdNil() {
	o.CountryId.Set(nil)
}

// UnsetCountryId ensures that no value is present for CountryId, not even an explicit nil
func (o *PaymentUpdateDto) UnsetCountryId() {
	o.CountryId.Unset()
}

// GetLocationId returns the LocationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetLocationId() string {
	if o == nil || IsNil(o.LocationId.Get()) {
		var ret string
		return ret
	}
	return *o.LocationId.Get()
}

// GetLocationIdOk returns a tuple with the LocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetLocationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocationId.Get(), o.LocationId.IsSet()
}

// HasLocationId returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasLocationId() bool {
	if o != nil && o.LocationId.IsSet() {
		return true
	}

	return false
}

// SetLocationId gets a reference to the given NullableString and assigns it to the LocationId field.
func (o *PaymentUpdateDto) SetLocationId(v string) {
	o.LocationId.Set(&v)
}
// SetLocationIdNil sets the value for LocationId to be an explicit nil
func (o *PaymentUpdateDto) SetLocationIdNil() {
	o.LocationId.Set(nil)
}

// UnsetLocationId ensures that no value is present for LocationId, not even an explicit nil
func (o *PaymentUpdateDto) UnsetLocationId() {
	o.LocationId.Unset()
}

// GetEntitlementId returns the EntitlementId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetEntitlementId() string {
	if o == nil || IsNil(o.EntitlementId.Get()) {
		var ret string
		return ret
	}
	return *o.EntitlementId.Get()
}

// GetEntitlementIdOk returns a tuple with the EntitlementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetEntitlementIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EntitlementId.Get(), o.EntitlementId.IsSet()
}

// HasEntitlementId returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasEntitlementId() bool {
	if o != nil && o.EntitlementId.IsSet() {
		return true
	}

	return false
}

// SetEntitlementId gets a reference to the given NullableString and assigns it to the EntitlementId field.
func (o *PaymentUpdateDto) SetEntitlementId(v string) {
	o.EntitlementId.Set(&v)
}
// SetEntitlementIdNil sets the value for EntitlementId to be an explicit nil
func (o *PaymentUpdateDto) SetEntitlementIdNil() {
	o.EntitlementId.Set(nil)
}

// UnsetEntitlementId ensures that no value is present for EntitlementId, not even an explicit nil
func (o *PaymentUpdateDto) UnsetEntitlementId() {
	o.EntitlementId.Unset()
}

// GetAntiFraudScore returns the AntiFraudScore field value if set, zero value otherwise.
func (o *PaymentUpdateDto) GetAntiFraudScore() float64 {
	if o == nil || IsNil(o.AntiFraudScore) {
		var ret float64
		return ret
	}
	return *o.AntiFraudScore
}

// GetAntiFraudScoreOk returns a tuple with the AntiFraudScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentUpdateDto) GetAntiFraudScoreOk() (*float64, bool) {
	if o == nil || IsNil(o.AntiFraudScore) {
		return nil, false
	}
	return o.AntiFraudScore, true
}

// HasAntiFraudScore returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasAntiFraudScore() bool {
	if o != nil && !IsNil(o.AntiFraudScore) {
		return true
	}

	return false
}

// SetAntiFraudScore gets a reference to the given float64 and assigns it to the AntiFraudScore field.
func (o *PaymentUpdateDto) SetAntiFraudScore(v float64) {
	o.AntiFraudScore = &v
}

// GetCallRecordURL returns the CallRecordURL field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetCallRecordURL() string {
	if o == nil || IsNil(o.CallRecordURL.Get()) {
		var ret string
		return ret
	}
	return *o.CallRecordURL.Get()
}

// GetCallRecordURLOk returns a tuple with the CallRecordURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetCallRecordURLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CallRecordURL.Get(), o.CallRecordURL.IsSet()
}

// HasCallRecordURL returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasCallRecordURL() bool {
	if o != nil && o.CallRecordURL.IsSet() {
		return true
	}

	return false
}

// SetCallRecordURL gets a reference to the given NullableString and assigns it to the CallRecordURL field.
func (o *PaymentUpdateDto) SetCallRecordURL(v string) {
	o.CallRecordURL.Set(&v)
}
// SetCallRecordURLNil sets the value for CallRecordURL to be an explicit nil
func (o *PaymentUpdateDto) SetCallRecordURLNil() {
	o.CallRecordURL.Set(nil)
}

// UnsetCallRecordURL ensures that no value is present for CallRecordURL, not even an explicit nil
func (o *PaymentUpdateDto) UnsetCallRecordURL() {
	o.CallRecordURL.Unset()
}

// GetCalled returns the Called field value if set, zero value otherwise.
func (o *PaymentUpdateDto) GetCalled() bool {
	if o == nil || IsNil(o.Called) {
		var ret bool
		return ret
	}
	return *o.Called
}

// GetCalledOk returns a tuple with the Called field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentUpdateDto) GetCalledOk() (*bool, bool) {
	if o == nil || IsNil(o.Called) {
		return nil, false
	}
	return o.Called, true
}

// HasCalled returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasCalled() bool {
	if o != nil && !IsNil(o.Called) {
		return true
	}

	return false
}

// SetCalled gets a reference to the given bool and assigns it to the Called field.
func (o *PaymentUpdateDto) SetCalled(v bool) {
	o.Called = &v
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *PaymentUpdateDto) GetVerified() bool {
	if o == nil || IsNil(o.Verified) {
		var ret bool
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentUpdateDto) GetVerifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.Verified) {
		return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasVerified() bool {
	if o != nil && !IsNil(o.Verified) {
		return true
	}

	return false
}

// SetVerified gets a reference to the given bool and assigns it to the Verified field.
func (o *PaymentUpdateDto) SetVerified(v bool) {
	o.Verified = &v
}

// GetPayerPictureTimestamp returns the PayerPictureTimestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetPayerPictureTimestamp() string {
	if o == nil || IsNil(o.PayerPictureTimestamp.Get()) {
		var ret string
		return ret
	}
	return *o.PayerPictureTimestamp.Get()
}

// GetPayerPictureTimestampOk returns a tuple with the PayerPictureTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetPayerPictureTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PayerPictureTimestamp.Get(), o.PayerPictureTimestamp.IsSet()
}

// HasPayerPictureTimestamp returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasPayerPictureTimestamp() bool {
	if o != nil && o.PayerPictureTimestamp.IsSet() {
		return true
	}

	return false
}

// SetPayerPictureTimestamp gets a reference to the given NullableString and assigns it to the PayerPictureTimestamp field.
func (o *PaymentUpdateDto) SetPayerPictureTimestamp(v string) {
	o.PayerPictureTimestamp.Set(&v)
}
// SetPayerPictureTimestampNil sets the value for PayerPictureTimestamp to be an explicit nil
func (o *PaymentUpdateDto) SetPayerPictureTimestampNil() {
	o.PayerPictureTimestamp.Set(nil)
}

// UnsetPayerPictureTimestamp ensures that no value is present for PayerPictureTimestamp, not even an explicit nil
func (o *PaymentUpdateDto) UnsetPayerPictureTimestamp() {
	o.PayerPictureTimestamp.Unset()
}

// GetPayerPicture returns the PayerPicture field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetPayerPicture() string {
	if o == nil || IsNil(o.PayerPicture.Get()) {
		var ret string
		return ret
	}
	return *o.PayerPicture.Get()
}

// GetPayerPictureOk returns a tuple with the PayerPicture field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetPayerPictureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PayerPicture.Get(), o.PayerPicture.IsSet()
}

// HasPayerPicture returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasPayerPicture() bool {
	if o != nil && o.PayerPicture.IsSet() {
		return true
	}

	return false
}

// SetPayerPicture gets a reference to the given NullableString and assigns it to the PayerPicture field.
func (o *PaymentUpdateDto) SetPayerPicture(v string) {
	o.PayerPicture.Set(&v)
}
// SetPayerPictureNil sets the value for PayerPicture to be an explicit nil
func (o *PaymentUpdateDto) SetPayerPictureNil() {
	o.PayerPicture.Set(nil)
}

// UnsetPayerPicture ensures that no value is present for PayerPicture, not even an explicit nil
func (o *PaymentUpdateDto) UnsetPayerPicture() {
	o.PayerPicture.Unset()
}

// GetIdentificationPictureTimestamp returns the IdentificationPictureTimestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetIdentificationPictureTimestamp() string {
	if o == nil || IsNil(o.IdentificationPictureTimestamp.Get()) {
		var ret string
		return ret
	}
	return *o.IdentificationPictureTimestamp.Get()
}

// GetIdentificationPictureTimestampOk returns a tuple with the IdentificationPictureTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetIdentificationPictureTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IdentificationPictureTimestamp.Get(), o.IdentificationPictureTimestamp.IsSet()
}

// HasIdentificationPictureTimestamp returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasIdentificationPictureTimestamp() bool {
	if o != nil && o.IdentificationPictureTimestamp.IsSet() {
		return true
	}

	return false
}

// SetIdentificationPictureTimestamp gets a reference to the given NullableString and assigns it to the IdentificationPictureTimestamp field.
func (o *PaymentUpdateDto) SetIdentificationPictureTimestamp(v string) {
	o.IdentificationPictureTimestamp.Set(&v)
}
// SetIdentificationPictureTimestampNil sets the value for IdentificationPictureTimestamp to be an explicit nil
func (o *PaymentUpdateDto) SetIdentificationPictureTimestampNil() {
	o.IdentificationPictureTimestamp.Set(nil)
}

// UnsetIdentificationPictureTimestamp ensures that no value is present for IdentificationPictureTimestamp, not even an explicit nil
func (o *PaymentUpdateDto) UnsetIdentificationPictureTimestamp() {
	o.IdentificationPictureTimestamp.Unset()
}

// GetIdentificationPicture returns the IdentificationPicture field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetIdentificationPicture() string {
	if o == nil || IsNil(o.IdentificationPicture.Get()) {
		var ret string
		return ret
	}
	return *o.IdentificationPicture.Get()
}

// GetIdentificationPictureOk returns a tuple with the IdentificationPicture field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetIdentificationPictureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IdentificationPicture.Get(), o.IdentificationPicture.IsSet()
}

// HasIdentificationPicture returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasIdentificationPicture() bool {
	if o != nil && o.IdentificationPicture.IsSet() {
		return true
	}

	return false
}

// SetIdentificationPicture gets a reference to the given NullableString and assigns it to the IdentificationPicture field.
func (o *PaymentUpdateDto) SetIdentificationPicture(v string) {
	o.IdentificationPicture.Set(&v)
}
// SetIdentificationPictureNil sets the value for IdentificationPicture to be an explicit nil
func (o *PaymentUpdateDto) SetIdentificationPictureNil() {
	o.IdentificationPicture.Set(nil)
}

// UnsetIdentificationPicture ensures that no value is present for IdentificationPicture, not even an explicit nil
func (o *PaymentUpdateDto) UnsetIdentificationPicture() {
	o.IdentificationPicture.Unset()
}

// GetIdentificationBackPicture returns the IdentificationBackPicture field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetIdentificationBackPicture() string {
	if o == nil || IsNil(o.IdentificationBackPicture.Get()) {
		var ret string
		return ret
	}
	return *o.IdentificationBackPicture.Get()
}

// GetIdentificationBackPictureOk returns a tuple with the IdentificationBackPicture field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetIdentificationBackPictureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IdentificationBackPicture.Get(), o.IdentificationBackPicture.IsSet()
}

// HasIdentificationBackPicture returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasIdentificationBackPicture() bool {
	if o != nil && o.IdentificationBackPicture.IsSet() {
		return true
	}

	return false
}

// SetIdentificationBackPicture gets a reference to the given NullableString and assigns it to the IdentificationBackPicture field.
func (o *PaymentUpdateDto) SetIdentificationBackPicture(v string) {
	o.IdentificationBackPicture.Set(&v)
}
// SetIdentificationBackPictureNil sets the value for IdentificationBackPicture to be an explicit nil
func (o *PaymentUpdateDto) SetIdentificationBackPictureNil() {
	o.IdentificationBackPicture.Set(nil)
}

// UnsetIdentificationBackPicture ensures that no value is present for IdentificationBackPicture, not even an explicit nil
func (o *PaymentUpdateDto) UnsetIdentificationBackPicture() {
	o.IdentificationBackPicture.Unset()
}

// GetIdentificationBackPictureTimestamp returns the IdentificationBackPictureTimestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetIdentificationBackPictureTimestamp() string {
	if o == nil || IsNil(o.IdentificationBackPictureTimestamp.Get()) {
		var ret string
		return ret
	}
	return *o.IdentificationBackPictureTimestamp.Get()
}

// GetIdentificationBackPictureTimestampOk returns a tuple with the IdentificationBackPictureTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetIdentificationBackPictureTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IdentificationBackPictureTimestamp.Get(), o.IdentificationBackPictureTimestamp.IsSet()
}

// HasIdentificationBackPictureTimestamp returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasIdentificationBackPictureTimestamp() bool {
	if o != nil && o.IdentificationBackPictureTimestamp.IsSet() {
		return true
	}

	return false
}

// SetIdentificationBackPictureTimestamp gets a reference to the given NullableString and assigns it to the IdentificationBackPictureTimestamp field.
func (o *PaymentUpdateDto) SetIdentificationBackPictureTimestamp(v string) {
	o.IdentificationBackPictureTimestamp.Set(&v)
}
// SetIdentificationBackPictureTimestampNil sets the value for IdentificationBackPictureTimestamp to be an explicit nil
func (o *PaymentUpdateDto) SetIdentificationBackPictureTimestampNil() {
	o.IdentificationBackPictureTimestamp.Set(nil)
}

// UnsetIdentificationBackPictureTimestamp ensures that no value is present for IdentificationBackPictureTimestamp, not even an explicit nil
func (o *PaymentUpdateDto) UnsetIdentificationBackPictureTimestamp() {
	o.IdentificationBackPictureTimestamp.Unset()
}

// GetIpLookupId returns the IpLookupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetIpLookupId() string {
	if o == nil || IsNil(o.IpLookupId.Get()) {
		var ret string
		return ret
	}
	return *o.IpLookupId.Get()
}

// GetIpLookupIdOk returns a tuple with the IpLookupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetIpLookupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IpLookupId.Get(), o.IpLookupId.IsSet()
}

// HasIpLookupId returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasIpLookupId() bool {
	if o != nil && o.IpLookupId.IsSet() {
		return true
	}

	return false
}

// SetIpLookupId gets a reference to the given NullableString and assigns it to the IpLookupId field.
func (o *PaymentUpdateDto) SetIpLookupId(v string) {
	o.IpLookupId.Set(&v)
}
// SetIpLookupIdNil sets the value for IpLookupId to be an explicit nil
func (o *PaymentUpdateDto) SetIpLookupIdNil() {
	o.IpLookupId.Set(nil)
}

// UnsetIpLookupId ensures that no value is present for IpLookupId, not even an explicit nil
func (o *PaymentUpdateDto) UnsetIpLookupId() {
	o.IpLookupId.Unset()
}

// GetOrderId returns the OrderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetOrderId() string {
	if o == nil || IsNil(o.OrderId.Get()) {
		var ret string
		return ret
	}
	return *o.OrderId.Get()
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetOrderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderId.Get(), o.OrderId.IsSet()
}

// HasOrderId returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasOrderId() bool {
	if o != nil && o.OrderId.IsSet() {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given NullableString and assigns it to the OrderId field.
func (o *PaymentUpdateDto) SetOrderId(v string) {
	o.OrderId.Set(&v)
}
// SetOrderIdNil sets the value for OrderId to be an explicit nil
func (o *PaymentUpdateDto) SetOrderIdNil() {
	o.OrderId.Set(nil)
}

// UnsetOrderId ensures that no value is present for OrderId, not even an explicit nil
func (o *PaymentUpdateDto) UnsetOrderId() {
	o.OrderId.Unset()
}

// GetAccountingEntryId returns the AccountingEntryId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetAccountingEntryId() string {
	if o == nil || IsNil(o.AccountingEntryId.Get()) {
		var ret string
		return ret
	}
	return *o.AccountingEntryId.Get()
}

// GetAccountingEntryIdOk returns a tuple with the AccountingEntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetAccountingEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountingEntryId.Get(), o.AccountingEntryId.IsSet()
}

// HasAccountingEntryId returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasAccountingEntryId() bool {
	if o != nil && o.AccountingEntryId.IsSet() {
		return true
	}

	return false
}

// SetAccountingEntryId gets a reference to the given NullableString and assigns it to the AccountingEntryId field.
func (o *PaymentUpdateDto) SetAccountingEntryId(v string) {
	o.AccountingEntryId.Set(&v)
}
// SetAccountingEntryIdNil sets the value for AccountingEntryId to be an explicit nil
func (o *PaymentUpdateDto) SetAccountingEntryIdNil() {
	o.AccountingEntryId.Set(nil)
}

// UnsetAccountingEntryId ensures that no value is present for AccountingEntryId, not even an explicit nil
func (o *PaymentUpdateDto) UnsetAccountingEntryId() {
	o.AccountingEntryId.Unset()
}

// GetPaymentGatewayId returns the PaymentGatewayId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetPaymentGatewayId() string {
	if o == nil || IsNil(o.PaymentGatewayId.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentGatewayId.Get()
}

// GetPaymentGatewayIdOk returns a tuple with the PaymentGatewayId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetPaymentGatewayIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentGatewayId.Get(), o.PaymentGatewayId.IsSet()
}

// HasPaymentGatewayId returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasPaymentGatewayId() bool {
	if o != nil && o.PaymentGatewayId.IsSet() {
		return true
	}

	return false
}

// SetPaymentGatewayId gets a reference to the given NullableString and assigns it to the PaymentGatewayId field.
func (o *PaymentUpdateDto) SetPaymentGatewayId(v string) {
	o.PaymentGatewayId.Set(&v)
}
// SetPaymentGatewayIdNil sets the value for PaymentGatewayId to be an explicit nil
func (o *PaymentUpdateDto) SetPaymentGatewayIdNil() {
	o.PaymentGatewayId.Set(nil)
}

// UnsetPaymentGatewayId ensures that no value is present for PaymentGatewayId, not even an explicit nil
func (o *PaymentUpdateDto) UnsetPaymentGatewayId() {
	o.PaymentGatewayId.Unset()
}

// GetBankAccountId returns the BankAccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetBankAccountId() string {
	if o == nil || IsNil(o.BankAccountId.Get()) {
		var ret string
		return ret
	}
	return *o.BankAccountId.Get()
}

// GetBankAccountIdOk returns a tuple with the BankAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetBankAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BankAccountId.Get(), o.BankAccountId.IsSet()
}

// HasBankAccountId returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasBankAccountId() bool {
	if o != nil && o.BankAccountId.IsSet() {
		return true
	}

	return false
}

// SetBankAccountId gets a reference to the given NullableString and assigns it to the BankAccountId field.
func (o *PaymentUpdateDto) SetBankAccountId(v string) {
	o.BankAccountId.Set(&v)
}
// SetBankAccountIdNil sets the value for BankAccountId to be an explicit nil
func (o *PaymentUpdateDto) SetBankAccountIdNil() {
	o.BankAccountId.Set(nil)
}

// UnsetBankAccountId ensures that no value is present for BankAccountId, not even an explicit nil
func (o *PaymentUpdateDto) UnsetBankAccountId() {
	o.BankAccountId.Unset()
}

// GetEnrolmentId returns the EnrolmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetEnrolmentId() string {
	if o == nil || IsNil(o.EnrolmentId.Get()) {
		var ret string
		return ret
	}
	return *o.EnrolmentId.Get()
}

// GetEnrolmentIdOk returns a tuple with the EnrolmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetEnrolmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnrolmentId.Get(), o.EnrolmentId.IsSet()
}

// HasEnrolmentId returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasEnrolmentId() bool {
	if o != nil && o.EnrolmentId.IsSet() {
		return true
	}

	return false
}

// SetEnrolmentId gets a reference to the given NullableString and assigns it to the EnrolmentId field.
func (o *PaymentUpdateDto) SetEnrolmentId(v string) {
	o.EnrolmentId.Set(&v)
}
// SetEnrolmentIdNil sets the value for EnrolmentId to be an explicit nil
func (o *PaymentUpdateDto) SetEnrolmentIdNil() {
	o.EnrolmentId.Set(nil)
}

// UnsetEnrolmentId ensures that no value is present for EnrolmentId, not even an explicit nil
func (o *PaymentUpdateDto) UnsetEnrolmentId() {
	o.EnrolmentId.Unset()
}

// GetBankId returns the BankId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetBankId() string {
	if o == nil || IsNil(o.BankId.Get()) {
		var ret string
		return ret
	}
	return *o.BankId.Get()
}

// GetBankIdOk returns a tuple with the BankId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetBankIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BankId.Get(), o.BankId.IsSet()
}

// HasBankId returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasBankId() bool {
	if o != nil && o.BankId.IsSet() {
		return true
	}

	return false
}

// SetBankId gets a reference to the given NullableString and assigns it to the BankId field.
func (o *PaymentUpdateDto) SetBankId(v string) {
	o.BankId.Set(&v)
}
// SetBankIdNil sets the value for BankId to be an explicit nil
func (o *PaymentUpdateDto) SetBankIdNil() {
	o.BankId.Set(nil)
}

// UnsetBankId ensures that no value is present for BankId, not even an explicit nil
func (o *PaymentUpdateDto) UnsetBankId() {
	o.BankId.Unset()
}

// GetPaymentTokenId returns the PaymentTokenId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetPaymentTokenId() string {
	if o == nil || IsNil(o.PaymentTokenId.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentTokenId.Get()
}

// GetPaymentTokenIdOk returns a tuple with the PaymentTokenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetPaymentTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentTokenId.Get(), o.PaymentTokenId.IsSet()
}

// HasPaymentTokenId returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasPaymentTokenId() bool {
	if o != nil && o.PaymentTokenId.IsSet() {
		return true
	}

	return false
}

// SetPaymentTokenId gets a reference to the given NullableString and assigns it to the PaymentTokenId field.
func (o *PaymentUpdateDto) SetPaymentTokenId(v string) {
	o.PaymentTokenId.Set(&v)
}
// SetPaymentTokenIdNil sets the value for PaymentTokenId to be an explicit nil
func (o *PaymentUpdateDto) SetPaymentTokenIdNil() {
	o.PaymentTokenId.Set(nil)
}

// UnsetPaymentTokenId ensures that no value is present for PaymentTokenId, not even an explicit nil
func (o *PaymentUpdateDto) UnsetPaymentTokenId() {
	o.PaymentTokenId.Unset()
}

// GetEmisorWalletAccountId returns the EmisorWalletAccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetEmisorWalletAccountId() string {
	if o == nil || IsNil(o.EmisorWalletAccountId.Get()) {
		var ret string
		return ret
	}
	return *o.EmisorWalletAccountId.Get()
}

// GetEmisorWalletAccountIdOk returns a tuple with the EmisorWalletAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetEmisorWalletAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EmisorWalletAccountId.Get(), o.EmisorWalletAccountId.IsSet()
}

// HasEmisorWalletAccountId returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasEmisorWalletAccountId() bool {
	if o != nil && o.EmisorWalletAccountId.IsSet() {
		return true
	}

	return false
}

// SetEmisorWalletAccountId gets a reference to the given NullableString and assigns it to the EmisorWalletAccountId field.
func (o *PaymentUpdateDto) SetEmisorWalletAccountId(v string) {
	o.EmisorWalletAccountId.Set(&v)
}
// SetEmisorWalletAccountIdNil sets the value for EmisorWalletAccountId to be an explicit nil
func (o *PaymentUpdateDto) SetEmisorWalletAccountIdNil() {
	o.EmisorWalletAccountId.Set(nil)
}

// UnsetEmisorWalletAccountId ensures that no value is present for EmisorWalletAccountId, not even an explicit nil
func (o *PaymentUpdateDto) UnsetEmisorWalletAccountId() {
	o.EmisorWalletAccountId.Unset()
}

// GetReceiverWalletAccountId returns the ReceiverWalletAccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentUpdateDto) GetReceiverWalletAccountId() string {
	if o == nil || IsNil(o.ReceiverWalletAccountId.Get()) {
		var ret string
		return ret
	}
	return *o.ReceiverWalletAccountId.Get()
}

// GetReceiverWalletAccountIdOk returns a tuple with the ReceiverWalletAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentUpdateDto) GetReceiverWalletAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiverWalletAccountId.Get(), o.ReceiverWalletAccountId.IsSet()
}

// HasReceiverWalletAccountId returns a boolean if a field has been set.
func (o *PaymentUpdateDto) HasReceiverWalletAccountId() bool {
	if o != nil && o.ReceiverWalletAccountId.IsSet() {
		return true
	}

	return false
}

// SetReceiverWalletAccountId gets a reference to the given NullableString and assigns it to the ReceiverWalletAccountId field.
func (o *PaymentUpdateDto) SetReceiverWalletAccountId(v string) {
	o.ReceiverWalletAccountId.Set(&v)
}
// SetReceiverWalletAccountIdNil sets the value for ReceiverWalletAccountId to be an explicit nil
func (o *PaymentUpdateDto) SetReceiverWalletAccountIdNil() {
	o.ReceiverWalletAccountId.Set(nil)
}

// UnsetReceiverWalletAccountId ensures that no value is present for ReceiverWalletAccountId, not even an explicit nil
func (o *PaymentUpdateDto) UnsetReceiverWalletAccountId() {
	o.ReceiverWalletAccountId.Unset()
}

func (o PaymentUpdateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentUpdateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.InvoiceId.IsSet() {
		toSerialize["invoiceId"] = o.InvoiceId.Get()
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.EmisorWalletId.IsSet() {
		toSerialize["emisorWalletId"] = o.EmisorWalletId.Get()
	}
	if o.ReceiverWalletId.IsSet() {
		toSerialize["receiverWalletId"] = o.ReceiverWalletId.Get()
	}
	if o.CurrencyId.IsSet() {
		toSerialize["currencyId"] = o.CurrencyId.Get()
	}
	if !IsNil(o.ForexRate) {
		toSerialize["forexRate"] = o.ForexRate
	}
	if !IsNil(o.TotalCost) {
		toSerialize["totalCost"] = o.TotalCost
	}
	if !IsNil(o.TotalTaxes) {
		toSerialize["totalTaxes"] = o.TotalTaxes
	}
	if !IsNil(o.Closed) {
		toSerialize["closed"] = o.Closed
	}
	if o.Data.IsSet() {
		toSerialize["data"] = o.Data.Get()
	}
	if o.DataLabel.IsSet() {
		toSerialize["dataLabel"] = o.DataLabel.Get()
	}
	if o.Data1.IsSet() {
		toSerialize["data1"] = o.Data1.Get()
	}
	if o.Data1Label.IsSet() {
		toSerialize["data1Label"] = o.Data1Label.Get()
	}
	if o.Response.IsSet() {
		toSerialize["response"] = o.Response.Get()
	}
	if o.Authorization.IsSet() {
		toSerialize["authorization"] = o.Authorization.Get()
	}
	if o.ReferenceCode.IsSet() {
		toSerialize["referenceCode"] = o.ReferenceCode.Get()
	}
	if o.CorrelationCode.IsSet() {
		toSerialize["correlationCode"] = o.CorrelationCode.Get()
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.OnBehalfOf) {
		toSerialize["onBehalfOf"] = o.OnBehalfOf
	}
	if !IsNil(o.PaymentType) {
		toSerialize["paymentType"] = o.PaymentType
	}
	if !IsNil(o.PaymentStatus) {
		toSerialize["paymentStatus"] = o.PaymentStatus
	}
	if !IsNil(o.BaseCost) {
		toSerialize["baseCost"] = o.BaseCost
	}
	if o.Signature.IsSet() {
		toSerialize["signature"] = o.Signature.Get()
	}
	if !IsNil(o.SignatureMismatch) {
		toSerialize["signatureMismatch"] = o.SignatureMismatch
	}
	if !IsNil(o.IsExternal) {
		toSerialize["isExternal"] = o.IsExternal
	}
	if !IsNil(o.MarkedForRevision) {
		toSerialize["markedForRevision"] = o.MarkedForRevision
	}
	if o.ForexRatesSnapshot.IsSet() {
		toSerialize["forexRatesSnapshot"] = o.ForexRatesSnapshot.Get()
	}
	if o.OfficialId.IsSet() {
		toSerialize["officialId"] = o.OfficialId.Get()
	}
	if !IsNil(o.OfficialIdExpeditionDate) {
		toSerialize["officialIdExpeditionDate"] = o.OfficialIdExpeditionDate
	}
	if o.FiscalIdentificationTypeId.IsSet() {
		toSerialize["fiscalIdentificationTypeId"] = o.FiscalIdentificationTypeId.Get()
	}
	if o.BillingAddress.IsSet() {
		toSerialize["billingAddress"] = o.BillingAddress.Get()
	}
	if o.Phone.IsSet() {
		toSerialize["phone"] = o.Phone.Get()
	}
	if o.Cellphone.IsSet() {
		toSerialize["cellphone"] = o.Cellphone.Get()
	}
	if o.Department.IsSet() {
		toSerialize["department"] = o.Department.Get()
	}
	if o.City.IsSet() {
		toSerialize["city"] = o.City.Get()
	}
	if o.CountryId.IsSet() {
		toSerialize["countryId"] = o.CountryId.Get()
	}
	if o.LocationId.IsSet() {
		toSerialize["locationId"] = o.LocationId.Get()
	}
	if o.EntitlementId.IsSet() {
		toSerialize["entitlementId"] = o.EntitlementId.Get()
	}
	if !IsNil(o.AntiFraudScore) {
		toSerialize["antiFraudScore"] = o.AntiFraudScore
	}
	if o.CallRecordURL.IsSet() {
		toSerialize["callRecordURL"] = o.CallRecordURL.Get()
	}
	if !IsNil(o.Called) {
		toSerialize["called"] = o.Called
	}
	if !IsNil(o.Verified) {
		toSerialize["verified"] = o.Verified
	}
	if o.PayerPictureTimestamp.IsSet() {
		toSerialize["payerPictureTimestamp"] = o.PayerPictureTimestamp.Get()
	}
	if o.PayerPicture.IsSet() {
		toSerialize["payerPicture"] = o.PayerPicture.Get()
	}
	if o.IdentificationPictureTimestamp.IsSet() {
		toSerialize["identificationPictureTimestamp"] = o.IdentificationPictureTimestamp.Get()
	}
	if o.IdentificationPicture.IsSet() {
		toSerialize["identificationPicture"] = o.IdentificationPicture.Get()
	}
	if o.IdentificationBackPicture.IsSet() {
		toSerialize["identificationBackPicture"] = o.IdentificationBackPicture.Get()
	}
	if o.IdentificationBackPictureTimestamp.IsSet() {
		toSerialize["identificationBackPictureTimestamp"] = o.IdentificationBackPictureTimestamp.Get()
	}
	if o.IpLookupId.IsSet() {
		toSerialize["ipLookupId"] = o.IpLookupId.Get()
	}
	if o.OrderId.IsSet() {
		toSerialize["orderId"] = o.OrderId.Get()
	}
	if o.AccountingEntryId.IsSet() {
		toSerialize["accountingEntryId"] = o.AccountingEntryId.Get()
	}
	if o.PaymentGatewayId.IsSet() {
		toSerialize["paymentGatewayId"] = o.PaymentGatewayId.Get()
	}
	if o.BankAccountId.IsSet() {
		toSerialize["bankAccountId"] = o.BankAccountId.Get()
	}
	if o.EnrolmentId.IsSet() {
		toSerialize["enrolmentId"] = o.EnrolmentId.Get()
	}
	if o.BankId.IsSet() {
		toSerialize["bankId"] = o.BankId.Get()
	}
	if o.PaymentTokenId.IsSet() {
		toSerialize["paymentTokenId"] = o.PaymentTokenId.Get()
	}
	if o.EmisorWalletAccountId.IsSet() {
		toSerialize["emisorWalletAccountId"] = o.EmisorWalletAccountId.Get()
	}
	if o.ReceiverWalletAccountId.IsSet() {
		toSerialize["receiverWalletAccountId"] = o.ReceiverWalletAccountId.Get()
	}
	return toSerialize, nil
}

type NullablePaymentUpdateDto struct {
	value *PaymentUpdateDto
	isSet bool
}

func (v NullablePaymentUpdateDto) Get() *PaymentUpdateDto {
	return v.value
}

func (v *NullablePaymentUpdateDto) Set(val *PaymentUpdateDto) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentUpdateDto) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentUpdateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentUpdateDto(val *PaymentUpdateDto) *NullablePaymentUpdateDto {
	return &NullablePaymentUpdateDto{value: val, isSet: true}
}

func (v NullablePaymentUpdateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentUpdateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


