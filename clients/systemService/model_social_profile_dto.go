/*
SystemService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the SocialProfileDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SocialProfileDto{}

// SocialProfileDto struct for SocialProfileDto
type SocialProfileDto struct {
	Id NullableString `json:"id,omitempty"`
	Timestamp NullableTime `json:"timestamp,omitempty"`
	Name NullableString `json:"name,omitempty"`
	About NullableString `json:"about,omitempty"`
	Cover NullableString `json:"cover,omitempty"`
	Avatar NullableString `json:"avatar,omitempty"`
	CountryId NullableString `json:"countryId,omitempty"`
	CountryName NullableString `json:"countryName,omitempty"`
	IdentityId NullableString `json:"identityId,omitempty"`
	FollowsCount NullableInt32 `json:"followsCount,omitempty"`
	MessagesCount NullableInt32 `json:"messagesCount,omitempty"`
	FollowersCount NullableInt32 `json:"followersCount,omitempty"`
	NotificationsCount NullableInt32 `json:"notificationsCount,omitempty"`
	UnreadNotificationsCount NullableInt32 `json:"unreadNotificationsCount,omitempty"`
	UnreadMessagesCount NullableInt32 `json:"unreadMessagesCount,omitempty"`
	Type NullableInt32 `json:"type,omitempty"`
	SocialFeedId NullableString `json:"socialFeedId,omitempty"`
	TwitterUrl NullableString `json:"twitterUrl,omitempty"`
	FacebookURL NullableString `json:"facebookURL,omitempty"`
	LinkedInURL NullableString `json:"linkedInURL,omitempty"`
	YoutubeURL NullableString `json:"youtubeURL,omitempty"`
	GithubURL NullableString `json:"githubURL,omitempty"`
	PinterestURL NullableString `json:"pinterestURL,omitempty"`
	DribbleURL NullableString `json:"dribbleURL,omitempty"`
	Domain NullableString `json:"domain,omitempty"`
	Notes NullableString `json:"notes,omitempty"`
}

// NewSocialProfileDto instantiates a new SocialProfileDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSocialProfileDto() *SocialProfileDto {
	this := SocialProfileDto{}
	return &this
}

// NewSocialProfileDtoWithDefaults instantiates a new SocialProfileDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSocialProfileDtoWithDefaults() *SocialProfileDto {
	this := SocialProfileDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *SocialProfileDto) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *SocialProfileDto) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *SocialProfileDto) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *SocialProfileDto) UnsetId() {
	o.Id.Unset()
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp.Get()
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timestamp.Get(), o.Timestamp.IsSet()
}

// HasTimestamp returns a boolean if a field has been set.
func (o *SocialProfileDto) HasTimestamp() bool {
	if o != nil && o.Timestamp.IsSet() {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given NullableTime and assigns it to the Timestamp field.
func (o *SocialProfileDto) SetTimestamp(v time.Time) {
	o.Timestamp.Set(&v)
}
// SetTimestampNil sets the value for Timestamp to be an explicit nil
func (o *SocialProfileDto) SetTimestampNil() {
	o.Timestamp.Set(nil)
}

// UnsetTimestamp ensures that no value is present for Timestamp, not even an explicit nil
func (o *SocialProfileDto) UnsetTimestamp() {
	o.Timestamp.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *SocialProfileDto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *SocialProfileDto) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *SocialProfileDto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *SocialProfileDto) UnsetName() {
	o.Name.Unset()
}

// GetAbout returns the About field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetAbout() string {
	if o == nil || IsNil(o.About.Get()) {
		var ret string
		return ret
	}
	return *o.About.Get()
}

// GetAboutOk returns a tuple with the About field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetAboutOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.About.Get(), o.About.IsSet()
}

// HasAbout returns a boolean if a field has been set.
func (o *SocialProfileDto) HasAbout() bool {
	if o != nil && o.About.IsSet() {
		return true
	}

	return false
}

// SetAbout gets a reference to the given NullableString and assigns it to the About field.
func (o *SocialProfileDto) SetAbout(v string) {
	o.About.Set(&v)
}
// SetAboutNil sets the value for About to be an explicit nil
func (o *SocialProfileDto) SetAboutNil() {
	o.About.Set(nil)
}

// UnsetAbout ensures that no value is present for About, not even an explicit nil
func (o *SocialProfileDto) UnsetAbout() {
	o.About.Unset()
}

// GetCover returns the Cover field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetCover() string {
	if o == nil || IsNil(o.Cover.Get()) {
		var ret string
		return ret
	}
	return *o.Cover.Get()
}

// GetCoverOk returns a tuple with the Cover field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetCoverOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cover.Get(), o.Cover.IsSet()
}

// HasCover returns a boolean if a field has been set.
func (o *SocialProfileDto) HasCover() bool {
	if o != nil && o.Cover.IsSet() {
		return true
	}

	return false
}

// SetCover gets a reference to the given NullableString and assigns it to the Cover field.
func (o *SocialProfileDto) SetCover(v string) {
	o.Cover.Set(&v)
}
// SetCoverNil sets the value for Cover to be an explicit nil
func (o *SocialProfileDto) SetCoverNil() {
	o.Cover.Set(nil)
}

// UnsetCover ensures that no value is present for Cover, not even an explicit nil
func (o *SocialProfileDto) UnsetCover() {
	o.Cover.Unset()
}

// GetAvatar returns the Avatar field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetAvatar() string {
	if o == nil || IsNil(o.Avatar.Get()) {
		var ret string
		return ret
	}
	return *o.Avatar.Get()
}

// GetAvatarOk returns a tuple with the Avatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetAvatarOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Avatar.Get(), o.Avatar.IsSet()
}

// HasAvatar returns a boolean if a field has been set.
func (o *SocialProfileDto) HasAvatar() bool {
	if o != nil && o.Avatar.IsSet() {
		return true
	}

	return false
}

// SetAvatar gets a reference to the given NullableString and assigns it to the Avatar field.
func (o *SocialProfileDto) SetAvatar(v string) {
	o.Avatar.Set(&v)
}
// SetAvatarNil sets the value for Avatar to be an explicit nil
func (o *SocialProfileDto) SetAvatarNil() {
	o.Avatar.Set(nil)
}

// UnsetAvatar ensures that no value is present for Avatar, not even an explicit nil
func (o *SocialProfileDto) UnsetAvatar() {
	o.Avatar.Unset()
}

// GetCountryId returns the CountryId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetCountryId() string {
	if o == nil || IsNil(o.CountryId.Get()) {
		var ret string
		return ret
	}
	return *o.CountryId.Get()
}

// GetCountryIdOk returns a tuple with the CountryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetCountryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryId.Get(), o.CountryId.IsSet()
}

// HasCountryId returns a boolean if a field has been set.
func (o *SocialProfileDto) HasCountryId() bool {
	if o != nil && o.CountryId.IsSet() {
		return true
	}

	return false
}

// SetCountryId gets a reference to the given NullableString and assigns it to the CountryId field.
func (o *SocialProfileDto) SetCountryId(v string) {
	o.CountryId.Set(&v)
}
// SetCountryIdNil sets the value for CountryId to be an explicit nil
func (o *SocialProfileDto) SetCountryIdNil() {
	o.CountryId.Set(nil)
}

// UnsetCountryId ensures that no value is present for CountryId, not even an explicit nil
func (o *SocialProfileDto) UnsetCountryId() {
	o.CountryId.Unset()
}

// GetCountryName returns the CountryName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetCountryName() string {
	if o == nil || IsNil(o.CountryName.Get()) {
		var ret string
		return ret
	}
	return *o.CountryName.Get()
}

// GetCountryNameOk returns a tuple with the CountryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetCountryNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryName.Get(), o.CountryName.IsSet()
}

// HasCountryName returns a boolean if a field has been set.
func (o *SocialProfileDto) HasCountryName() bool {
	if o != nil && o.CountryName.IsSet() {
		return true
	}

	return false
}

// SetCountryName gets a reference to the given NullableString and assigns it to the CountryName field.
func (o *SocialProfileDto) SetCountryName(v string) {
	o.CountryName.Set(&v)
}
// SetCountryNameNil sets the value for CountryName to be an explicit nil
func (o *SocialProfileDto) SetCountryNameNil() {
	o.CountryName.Set(nil)
}

// UnsetCountryName ensures that no value is present for CountryName, not even an explicit nil
func (o *SocialProfileDto) UnsetCountryName() {
	o.CountryName.Unset()
}

// GetIdentityId returns the IdentityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetIdentityId() string {
	if o == nil || IsNil(o.IdentityId.Get()) {
		var ret string
		return ret
	}
	return *o.IdentityId.Get()
}

// GetIdentityIdOk returns a tuple with the IdentityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetIdentityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IdentityId.Get(), o.IdentityId.IsSet()
}

// HasIdentityId returns a boolean if a field has been set.
func (o *SocialProfileDto) HasIdentityId() bool {
	if o != nil && o.IdentityId.IsSet() {
		return true
	}

	return false
}

// SetIdentityId gets a reference to the given NullableString and assigns it to the IdentityId field.
func (o *SocialProfileDto) SetIdentityId(v string) {
	o.IdentityId.Set(&v)
}
// SetIdentityIdNil sets the value for IdentityId to be an explicit nil
func (o *SocialProfileDto) SetIdentityIdNil() {
	o.IdentityId.Set(nil)
}

// UnsetIdentityId ensures that no value is present for IdentityId, not even an explicit nil
func (o *SocialProfileDto) UnsetIdentityId() {
	o.IdentityId.Unset()
}

// GetFollowsCount returns the FollowsCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetFollowsCount() int32 {
	if o == nil || IsNil(o.FollowsCount.Get()) {
		var ret int32
		return ret
	}
	return *o.FollowsCount.Get()
}

// GetFollowsCountOk returns a tuple with the FollowsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetFollowsCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.FollowsCount.Get(), o.FollowsCount.IsSet()
}

// HasFollowsCount returns a boolean if a field has been set.
func (o *SocialProfileDto) HasFollowsCount() bool {
	if o != nil && o.FollowsCount.IsSet() {
		return true
	}

	return false
}

// SetFollowsCount gets a reference to the given NullableInt32 and assigns it to the FollowsCount field.
func (o *SocialProfileDto) SetFollowsCount(v int32) {
	o.FollowsCount.Set(&v)
}
// SetFollowsCountNil sets the value for FollowsCount to be an explicit nil
func (o *SocialProfileDto) SetFollowsCountNil() {
	o.FollowsCount.Set(nil)
}

// UnsetFollowsCount ensures that no value is present for FollowsCount, not even an explicit nil
func (o *SocialProfileDto) UnsetFollowsCount() {
	o.FollowsCount.Unset()
}

// GetMessagesCount returns the MessagesCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetMessagesCount() int32 {
	if o == nil || IsNil(o.MessagesCount.Get()) {
		var ret int32
		return ret
	}
	return *o.MessagesCount.Get()
}

// GetMessagesCountOk returns a tuple with the MessagesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetMessagesCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MessagesCount.Get(), o.MessagesCount.IsSet()
}

// HasMessagesCount returns a boolean if a field has been set.
func (o *SocialProfileDto) HasMessagesCount() bool {
	if o != nil && o.MessagesCount.IsSet() {
		return true
	}

	return false
}

// SetMessagesCount gets a reference to the given NullableInt32 and assigns it to the MessagesCount field.
func (o *SocialProfileDto) SetMessagesCount(v int32) {
	o.MessagesCount.Set(&v)
}
// SetMessagesCountNil sets the value for MessagesCount to be an explicit nil
func (o *SocialProfileDto) SetMessagesCountNil() {
	o.MessagesCount.Set(nil)
}

// UnsetMessagesCount ensures that no value is present for MessagesCount, not even an explicit nil
func (o *SocialProfileDto) UnsetMessagesCount() {
	o.MessagesCount.Unset()
}

// GetFollowersCount returns the FollowersCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetFollowersCount() int32 {
	if o == nil || IsNil(o.FollowersCount.Get()) {
		var ret int32
		return ret
	}
	return *o.FollowersCount.Get()
}

// GetFollowersCountOk returns a tuple with the FollowersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetFollowersCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.FollowersCount.Get(), o.FollowersCount.IsSet()
}

// HasFollowersCount returns a boolean if a field has been set.
func (o *SocialProfileDto) HasFollowersCount() bool {
	if o != nil && o.FollowersCount.IsSet() {
		return true
	}

	return false
}

// SetFollowersCount gets a reference to the given NullableInt32 and assigns it to the FollowersCount field.
func (o *SocialProfileDto) SetFollowersCount(v int32) {
	o.FollowersCount.Set(&v)
}
// SetFollowersCountNil sets the value for FollowersCount to be an explicit nil
func (o *SocialProfileDto) SetFollowersCountNil() {
	o.FollowersCount.Set(nil)
}

// UnsetFollowersCount ensures that no value is present for FollowersCount, not even an explicit nil
func (o *SocialProfileDto) UnsetFollowersCount() {
	o.FollowersCount.Unset()
}

// GetNotificationsCount returns the NotificationsCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetNotificationsCount() int32 {
	if o == nil || IsNil(o.NotificationsCount.Get()) {
		var ret int32
		return ret
	}
	return *o.NotificationsCount.Get()
}

// GetNotificationsCountOk returns a tuple with the NotificationsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetNotificationsCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NotificationsCount.Get(), o.NotificationsCount.IsSet()
}

// HasNotificationsCount returns a boolean if a field has been set.
func (o *SocialProfileDto) HasNotificationsCount() bool {
	if o != nil && o.NotificationsCount.IsSet() {
		return true
	}

	return false
}

// SetNotificationsCount gets a reference to the given NullableInt32 and assigns it to the NotificationsCount field.
func (o *SocialProfileDto) SetNotificationsCount(v int32) {
	o.NotificationsCount.Set(&v)
}
// SetNotificationsCountNil sets the value for NotificationsCount to be an explicit nil
func (o *SocialProfileDto) SetNotificationsCountNil() {
	o.NotificationsCount.Set(nil)
}

// UnsetNotificationsCount ensures that no value is present for NotificationsCount, not even an explicit nil
func (o *SocialProfileDto) UnsetNotificationsCount() {
	o.NotificationsCount.Unset()
}

// GetUnreadNotificationsCount returns the UnreadNotificationsCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetUnreadNotificationsCount() int32 {
	if o == nil || IsNil(o.UnreadNotificationsCount.Get()) {
		var ret int32
		return ret
	}
	return *o.UnreadNotificationsCount.Get()
}

// GetUnreadNotificationsCountOk returns a tuple with the UnreadNotificationsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetUnreadNotificationsCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnreadNotificationsCount.Get(), o.UnreadNotificationsCount.IsSet()
}

// HasUnreadNotificationsCount returns a boolean if a field has been set.
func (o *SocialProfileDto) HasUnreadNotificationsCount() bool {
	if o != nil && o.UnreadNotificationsCount.IsSet() {
		return true
	}

	return false
}

// SetUnreadNotificationsCount gets a reference to the given NullableInt32 and assigns it to the UnreadNotificationsCount field.
func (o *SocialProfileDto) SetUnreadNotificationsCount(v int32) {
	o.UnreadNotificationsCount.Set(&v)
}
// SetUnreadNotificationsCountNil sets the value for UnreadNotificationsCount to be an explicit nil
func (o *SocialProfileDto) SetUnreadNotificationsCountNil() {
	o.UnreadNotificationsCount.Set(nil)
}

// UnsetUnreadNotificationsCount ensures that no value is present for UnreadNotificationsCount, not even an explicit nil
func (o *SocialProfileDto) UnsetUnreadNotificationsCount() {
	o.UnreadNotificationsCount.Unset()
}

// GetUnreadMessagesCount returns the UnreadMessagesCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetUnreadMessagesCount() int32 {
	if o == nil || IsNil(o.UnreadMessagesCount.Get()) {
		var ret int32
		return ret
	}
	return *o.UnreadMessagesCount.Get()
}

// GetUnreadMessagesCountOk returns a tuple with the UnreadMessagesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetUnreadMessagesCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnreadMessagesCount.Get(), o.UnreadMessagesCount.IsSet()
}

// HasUnreadMessagesCount returns a boolean if a field has been set.
func (o *SocialProfileDto) HasUnreadMessagesCount() bool {
	if o != nil && o.UnreadMessagesCount.IsSet() {
		return true
	}

	return false
}

// SetUnreadMessagesCount gets a reference to the given NullableInt32 and assigns it to the UnreadMessagesCount field.
func (o *SocialProfileDto) SetUnreadMessagesCount(v int32) {
	o.UnreadMessagesCount.Set(&v)
}
// SetUnreadMessagesCountNil sets the value for UnreadMessagesCount to be an explicit nil
func (o *SocialProfileDto) SetUnreadMessagesCountNil() {
	o.UnreadMessagesCount.Set(nil)
}

// UnsetUnreadMessagesCount ensures that no value is present for UnreadMessagesCount, not even an explicit nil
func (o *SocialProfileDto) UnsetUnreadMessagesCount() {
	o.UnreadMessagesCount.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetType() int32 {
	if o == nil || IsNil(o.Type.Get()) {
		var ret int32
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *SocialProfileDto) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableInt32 and assigns it to the Type field.
func (o *SocialProfileDto) SetType(v int32) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *SocialProfileDto) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *SocialProfileDto) UnsetType() {
	o.Type.Unset()
}

// GetSocialFeedId returns the SocialFeedId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetSocialFeedId() string {
	if o == nil || IsNil(o.SocialFeedId.Get()) {
		var ret string
		return ret
	}
	return *o.SocialFeedId.Get()
}

// GetSocialFeedIdOk returns a tuple with the SocialFeedId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetSocialFeedIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SocialFeedId.Get(), o.SocialFeedId.IsSet()
}

// HasSocialFeedId returns a boolean if a field has been set.
func (o *SocialProfileDto) HasSocialFeedId() bool {
	if o != nil && o.SocialFeedId.IsSet() {
		return true
	}

	return false
}

// SetSocialFeedId gets a reference to the given NullableString and assigns it to the SocialFeedId field.
func (o *SocialProfileDto) SetSocialFeedId(v string) {
	o.SocialFeedId.Set(&v)
}
// SetSocialFeedIdNil sets the value for SocialFeedId to be an explicit nil
func (o *SocialProfileDto) SetSocialFeedIdNil() {
	o.SocialFeedId.Set(nil)
}

// UnsetSocialFeedId ensures that no value is present for SocialFeedId, not even an explicit nil
func (o *SocialProfileDto) UnsetSocialFeedId() {
	o.SocialFeedId.Unset()
}

// GetTwitterUrl returns the TwitterUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetTwitterUrl() string {
	if o == nil || IsNil(o.TwitterUrl.Get()) {
		var ret string
		return ret
	}
	return *o.TwitterUrl.Get()
}

// GetTwitterUrlOk returns a tuple with the TwitterUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetTwitterUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TwitterUrl.Get(), o.TwitterUrl.IsSet()
}

// HasTwitterUrl returns a boolean if a field has been set.
func (o *SocialProfileDto) HasTwitterUrl() bool {
	if o != nil && o.TwitterUrl.IsSet() {
		return true
	}

	return false
}

// SetTwitterUrl gets a reference to the given NullableString and assigns it to the TwitterUrl field.
func (o *SocialProfileDto) SetTwitterUrl(v string) {
	o.TwitterUrl.Set(&v)
}
// SetTwitterUrlNil sets the value for TwitterUrl to be an explicit nil
func (o *SocialProfileDto) SetTwitterUrlNil() {
	o.TwitterUrl.Set(nil)
}

// UnsetTwitterUrl ensures that no value is present for TwitterUrl, not even an explicit nil
func (o *SocialProfileDto) UnsetTwitterUrl() {
	o.TwitterUrl.Unset()
}

// GetFacebookURL returns the FacebookURL field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetFacebookURL() string {
	if o == nil || IsNil(o.FacebookURL.Get()) {
		var ret string
		return ret
	}
	return *o.FacebookURL.Get()
}

// GetFacebookURLOk returns a tuple with the FacebookURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetFacebookURLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FacebookURL.Get(), o.FacebookURL.IsSet()
}

// HasFacebookURL returns a boolean if a field has been set.
func (o *SocialProfileDto) HasFacebookURL() bool {
	if o != nil && o.FacebookURL.IsSet() {
		return true
	}

	return false
}

// SetFacebookURL gets a reference to the given NullableString and assigns it to the FacebookURL field.
func (o *SocialProfileDto) SetFacebookURL(v string) {
	o.FacebookURL.Set(&v)
}
// SetFacebookURLNil sets the value for FacebookURL to be an explicit nil
func (o *SocialProfileDto) SetFacebookURLNil() {
	o.FacebookURL.Set(nil)
}

// UnsetFacebookURL ensures that no value is present for FacebookURL, not even an explicit nil
func (o *SocialProfileDto) UnsetFacebookURL() {
	o.FacebookURL.Unset()
}

// GetLinkedInURL returns the LinkedInURL field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetLinkedInURL() string {
	if o == nil || IsNil(o.LinkedInURL.Get()) {
		var ret string
		return ret
	}
	return *o.LinkedInURL.Get()
}

// GetLinkedInURLOk returns a tuple with the LinkedInURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetLinkedInURLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LinkedInURL.Get(), o.LinkedInURL.IsSet()
}

// HasLinkedInURL returns a boolean if a field has been set.
func (o *SocialProfileDto) HasLinkedInURL() bool {
	if o != nil && o.LinkedInURL.IsSet() {
		return true
	}

	return false
}

// SetLinkedInURL gets a reference to the given NullableString and assigns it to the LinkedInURL field.
func (o *SocialProfileDto) SetLinkedInURL(v string) {
	o.LinkedInURL.Set(&v)
}
// SetLinkedInURLNil sets the value for LinkedInURL to be an explicit nil
func (o *SocialProfileDto) SetLinkedInURLNil() {
	o.LinkedInURL.Set(nil)
}

// UnsetLinkedInURL ensures that no value is present for LinkedInURL, not even an explicit nil
func (o *SocialProfileDto) UnsetLinkedInURL() {
	o.LinkedInURL.Unset()
}

// GetYoutubeURL returns the YoutubeURL field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetYoutubeURL() string {
	if o == nil || IsNil(o.YoutubeURL.Get()) {
		var ret string
		return ret
	}
	return *o.YoutubeURL.Get()
}

// GetYoutubeURLOk returns a tuple with the YoutubeURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetYoutubeURLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.YoutubeURL.Get(), o.YoutubeURL.IsSet()
}

// HasYoutubeURL returns a boolean if a field has been set.
func (o *SocialProfileDto) HasYoutubeURL() bool {
	if o != nil && o.YoutubeURL.IsSet() {
		return true
	}

	return false
}

// SetYoutubeURL gets a reference to the given NullableString and assigns it to the YoutubeURL field.
func (o *SocialProfileDto) SetYoutubeURL(v string) {
	o.YoutubeURL.Set(&v)
}
// SetYoutubeURLNil sets the value for YoutubeURL to be an explicit nil
func (o *SocialProfileDto) SetYoutubeURLNil() {
	o.YoutubeURL.Set(nil)
}

// UnsetYoutubeURL ensures that no value is present for YoutubeURL, not even an explicit nil
func (o *SocialProfileDto) UnsetYoutubeURL() {
	o.YoutubeURL.Unset()
}

// GetGithubURL returns the GithubURL field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetGithubURL() string {
	if o == nil || IsNil(o.GithubURL.Get()) {
		var ret string
		return ret
	}
	return *o.GithubURL.Get()
}

// GetGithubURLOk returns a tuple with the GithubURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetGithubURLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GithubURL.Get(), o.GithubURL.IsSet()
}

// HasGithubURL returns a boolean if a field has been set.
func (o *SocialProfileDto) HasGithubURL() bool {
	if o != nil && o.GithubURL.IsSet() {
		return true
	}

	return false
}

// SetGithubURL gets a reference to the given NullableString and assigns it to the GithubURL field.
func (o *SocialProfileDto) SetGithubURL(v string) {
	o.GithubURL.Set(&v)
}
// SetGithubURLNil sets the value for GithubURL to be an explicit nil
func (o *SocialProfileDto) SetGithubURLNil() {
	o.GithubURL.Set(nil)
}

// UnsetGithubURL ensures that no value is present for GithubURL, not even an explicit nil
func (o *SocialProfileDto) UnsetGithubURL() {
	o.GithubURL.Unset()
}

// GetPinterestURL returns the PinterestURL field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetPinterestURL() string {
	if o == nil || IsNil(o.PinterestURL.Get()) {
		var ret string
		return ret
	}
	return *o.PinterestURL.Get()
}

// GetPinterestURLOk returns a tuple with the PinterestURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetPinterestURLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PinterestURL.Get(), o.PinterestURL.IsSet()
}

// HasPinterestURL returns a boolean if a field has been set.
func (o *SocialProfileDto) HasPinterestURL() bool {
	if o != nil && o.PinterestURL.IsSet() {
		return true
	}

	return false
}

// SetPinterestURL gets a reference to the given NullableString and assigns it to the PinterestURL field.
func (o *SocialProfileDto) SetPinterestURL(v string) {
	o.PinterestURL.Set(&v)
}
// SetPinterestURLNil sets the value for PinterestURL to be an explicit nil
func (o *SocialProfileDto) SetPinterestURLNil() {
	o.PinterestURL.Set(nil)
}

// UnsetPinterestURL ensures that no value is present for PinterestURL, not even an explicit nil
func (o *SocialProfileDto) UnsetPinterestURL() {
	o.PinterestURL.Unset()
}

// GetDribbleURL returns the DribbleURL field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetDribbleURL() string {
	if o == nil || IsNil(o.DribbleURL.Get()) {
		var ret string
		return ret
	}
	return *o.DribbleURL.Get()
}

// GetDribbleURLOk returns a tuple with the DribbleURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetDribbleURLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DribbleURL.Get(), o.DribbleURL.IsSet()
}

// HasDribbleURL returns a boolean if a field has been set.
func (o *SocialProfileDto) HasDribbleURL() bool {
	if o != nil && o.DribbleURL.IsSet() {
		return true
	}

	return false
}

// SetDribbleURL gets a reference to the given NullableString and assigns it to the DribbleURL field.
func (o *SocialProfileDto) SetDribbleURL(v string) {
	o.DribbleURL.Set(&v)
}
// SetDribbleURLNil sets the value for DribbleURL to be an explicit nil
func (o *SocialProfileDto) SetDribbleURLNil() {
	o.DribbleURL.Set(nil)
}

// UnsetDribbleURL ensures that no value is present for DribbleURL, not even an explicit nil
func (o *SocialProfileDto) UnsetDribbleURL() {
	o.DribbleURL.Unset()
}

// GetDomain returns the Domain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetDomain() string {
	if o == nil || IsNil(o.Domain.Get()) {
		var ret string
		return ret
	}
	return *o.Domain.Get()
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Domain.Get(), o.Domain.IsSet()
}

// HasDomain returns a boolean if a field has been set.
func (o *SocialProfileDto) HasDomain() bool {
	if o != nil && o.Domain.IsSet() {
		return true
	}

	return false
}

// SetDomain gets a reference to the given NullableString and assigns it to the Domain field.
func (o *SocialProfileDto) SetDomain(v string) {
	o.Domain.Set(&v)
}
// SetDomainNil sets the value for Domain to be an explicit nil
func (o *SocialProfileDto) SetDomainNil() {
	o.Domain.Set(nil)
}

// UnsetDomain ensures that no value is present for Domain, not even an explicit nil
func (o *SocialProfileDto) UnsetDomain() {
	o.Domain.Unset()
}

// GetNotes returns the Notes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SocialProfileDto) GetNotes() string {
	if o == nil || IsNil(o.Notes.Get()) {
		var ret string
		return ret
	}
	return *o.Notes.Get()
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SocialProfileDto) GetNotesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Notes.Get(), o.Notes.IsSet()
}

// HasNotes returns a boolean if a field has been set.
func (o *SocialProfileDto) HasNotes() bool {
	if o != nil && o.Notes.IsSet() {
		return true
	}

	return false
}

// SetNotes gets a reference to the given NullableString and assigns it to the Notes field.
func (o *SocialProfileDto) SetNotes(v string) {
	o.Notes.Set(&v)
}
// SetNotesNil sets the value for Notes to be an explicit nil
func (o *SocialProfileDto) SetNotesNil() {
	o.Notes.Set(nil)
}

// UnsetNotes ensures that no value is present for Notes, not even an explicit nil
func (o *SocialProfileDto) UnsetNotes() {
	o.Notes.Unset()
}

func (o SocialProfileDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SocialProfileDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Timestamp.IsSet() {
		toSerialize["timestamp"] = o.Timestamp.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.About.IsSet() {
		toSerialize["about"] = o.About.Get()
	}
	if o.Cover.IsSet() {
		toSerialize["cover"] = o.Cover.Get()
	}
	if o.Avatar.IsSet() {
		toSerialize["avatar"] = o.Avatar.Get()
	}
	if o.CountryId.IsSet() {
		toSerialize["countryId"] = o.CountryId.Get()
	}
	if o.CountryName.IsSet() {
		toSerialize["countryName"] = o.CountryName.Get()
	}
	if o.IdentityId.IsSet() {
		toSerialize["identityId"] = o.IdentityId.Get()
	}
	if o.FollowsCount.IsSet() {
		toSerialize["followsCount"] = o.FollowsCount.Get()
	}
	if o.MessagesCount.IsSet() {
		toSerialize["messagesCount"] = o.MessagesCount.Get()
	}
	if o.FollowersCount.IsSet() {
		toSerialize["followersCount"] = o.FollowersCount.Get()
	}
	if o.NotificationsCount.IsSet() {
		toSerialize["notificationsCount"] = o.NotificationsCount.Get()
	}
	if o.UnreadNotificationsCount.IsSet() {
		toSerialize["unreadNotificationsCount"] = o.UnreadNotificationsCount.Get()
	}
	if o.UnreadMessagesCount.IsSet() {
		toSerialize["unreadMessagesCount"] = o.UnreadMessagesCount.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.SocialFeedId.IsSet() {
		toSerialize["socialFeedId"] = o.SocialFeedId.Get()
	}
	if o.TwitterUrl.IsSet() {
		toSerialize["twitterUrl"] = o.TwitterUrl.Get()
	}
	if o.FacebookURL.IsSet() {
		toSerialize["facebookURL"] = o.FacebookURL.Get()
	}
	if o.LinkedInURL.IsSet() {
		toSerialize["linkedInURL"] = o.LinkedInURL.Get()
	}
	if o.YoutubeURL.IsSet() {
		toSerialize["youtubeURL"] = o.YoutubeURL.Get()
	}
	if o.GithubURL.IsSet() {
		toSerialize["githubURL"] = o.GithubURL.Get()
	}
	if o.PinterestURL.IsSet() {
		toSerialize["pinterestURL"] = o.PinterestURL.Get()
	}
	if o.DribbleURL.IsSet() {
		toSerialize["dribbleURL"] = o.DribbleURL.Get()
	}
	if o.Domain.IsSet() {
		toSerialize["domain"] = o.Domain.Get()
	}
	if o.Notes.IsSet() {
		toSerialize["notes"] = o.Notes.Get()
	}
	return toSerialize, nil
}

type NullableSocialProfileDto struct {
	value *SocialProfileDto
	isSet bool
}

func (v NullableSocialProfileDto) Get() *SocialProfileDto {
	return v.value
}

func (v *NullableSocialProfileDto) Set(val *SocialProfileDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSocialProfileDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSocialProfileDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSocialProfileDto(val *SocialProfileDto) *NullableSocialProfileDto {
	return &NullableSocialProfileDto{value: val, isSet: true}
}

func (v NullableSocialProfileDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSocialProfileDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


