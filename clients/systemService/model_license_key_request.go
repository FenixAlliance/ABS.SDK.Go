/*
SystemService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the LicenseKeyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LicenseKeyRequest{}

// LicenseKeyRequest struct for LicenseKeyRequest
type LicenseKeyRequest struct {
	UserId *string `json:"userId,omitempty"`
	TenantId NullableString `json:"tenantId,omitempty"`
	OrderId NullableString `json:"orderId,omitempty"`
	PaymentId NullableString `json:"paymentId,omitempty"`
	InvoiceId NullableString `json:"invoiceId,omitempty"`
	EnrollmentId NullableString `json:"enrollmentId,omitempty"`
	EntitlementId NullableString `json:"entitlementId,omitempty"`
	Seats *int32 `json:"seats,omitempty"`
	LicenseType *int32 `json:"licenseType,omitempty"`
	ExpirationDate *time.Time `json:"expirationDate,omitempty"`
	Features []LicenseFeature `json:"features,omitempty"`
	AdditionalAttributes []AdditionalAttribute `json:"additionalAttributes,omitempty"`
}

// NewLicenseKeyRequest instantiates a new LicenseKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLicenseKeyRequest() *LicenseKeyRequest {
	this := LicenseKeyRequest{}
	return &this
}

// NewLicenseKeyRequestWithDefaults instantiates a new LicenseKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLicenseKeyRequestWithDefaults() *LicenseKeyRequest {
	this := LicenseKeyRequest{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *LicenseKeyRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseKeyRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *LicenseKeyRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *LicenseKeyRequest) SetUserId(v string) {
	o.UserId = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LicenseKeyRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LicenseKeyRequest) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *LicenseKeyRequest) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *LicenseKeyRequest) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *LicenseKeyRequest) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *LicenseKeyRequest) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetOrderId returns the OrderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LicenseKeyRequest) GetOrderId() string {
	if o == nil || IsNil(o.OrderId.Get()) {
		var ret string
		return ret
	}
	return *o.OrderId.Get()
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LicenseKeyRequest) GetOrderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderId.Get(), o.OrderId.IsSet()
}

// HasOrderId returns a boolean if a field has been set.
func (o *LicenseKeyRequest) HasOrderId() bool {
	if o != nil && o.OrderId.IsSet() {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given NullableString and assigns it to the OrderId field.
func (o *LicenseKeyRequest) SetOrderId(v string) {
	o.OrderId.Set(&v)
}
// SetOrderIdNil sets the value for OrderId to be an explicit nil
func (o *LicenseKeyRequest) SetOrderIdNil() {
	o.OrderId.Set(nil)
}

// UnsetOrderId ensures that no value is present for OrderId, not even an explicit nil
func (o *LicenseKeyRequest) UnsetOrderId() {
	o.OrderId.Unset()
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LicenseKeyRequest) GetPaymentId() string {
	if o == nil || IsNil(o.PaymentId.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentId.Get()
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LicenseKeyRequest) GetPaymentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentId.Get(), o.PaymentId.IsSet()
}

// HasPaymentId returns a boolean if a field has been set.
func (o *LicenseKeyRequest) HasPaymentId() bool {
	if o != nil && o.PaymentId.IsSet() {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given NullableString and assigns it to the PaymentId field.
func (o *LicenseKeyRequest) SetPaymentId(v string) {
	o.PaymentId.Set(&v)
}
// SetPaymentIdNil sets the value for PaymentId to be an explicit nil
func (o *LicenseKeyRequest) SetPaymentIdNil() {
	o.PaymentId.Set(nil)
}

// UnsetPaymentId ensures that no value is present for PaymentId, not even an explicit nil
func (o *LicenseKeyRequest) UnsetPaymentId() {
	o.PaymentId.Unset()
}

// GetInvoiceId returns the InvoiceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LicenseKeyRequest) GetInvoiceId() string {
	if o == nil || IsNil(o.InvoiceId.Get()) {
		var ret string
		return ret
	}
	return *o.InvoiceId.Get()
}

// GetInvoiceIdOk returns a tuple with the InvoiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LicenseKeyRequest) GetInvoiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceId.Get(), o.InvoiceId.IsSet()
}

// HasInvoiceId returns a boolean if a field has been set.
func (o *LicenseKeyRequest) HasInvoiceId() bool {
	if o != nil && o.InvoiceId.IsSet() {
		return true
	}

	return false
}

// SetInvoiceId gets a reference to the given NullableString and assigns it to the InvoiceId field.
func (o *LicenseKeyRequest) SetInvoiceId(v string) {
	o.InvoiceId.Set(&v)
}
// SetInvoiceIdNil sets the value for InvoiceId to be an explicit nil
func (o *LicenseKeyRequest) SetInvoiceIdNil() {
	o.InvoiceId.Set(nil)
}

// UnsetInvoiceId ensures that no value is present for InvoiceId, not even an explicit nil
func (o *LicenseKeyRequest) UnsetInvoiceId() {
	o.InvoiceId.Unset()
}

// GetEnrollmentId returns the EnrollmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LicenseKeyRequest) GetEnrollmentId() string {
	if o == nil || IsNil(o.EnrollmentId.Get()) {
		var ret string
		return ret
	}
	return *o.EnrollmentId.Get()
}

// GetEnrollmentIdOk returns a tuple with the EnrollmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LicenseKeyRequest) GetEnrollmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnrollmentId.Get(), o.EnrollmentId.IsSet()
}

// HasEnrollmentId returns a boolean if a field has been set.
func (o *LicenseKeyRequest) HasEnrollmentId() bool {
	if o != nil && o.EnrollmentId.IsSet() {
		return true
	}

	return false
}

// SetEnrollmentId gets a reference to the given NullableString and assigns it to the EnrollmentId field.
func (o *LicenseKeyRequest) SetEnrollmentId(v string) {
	o.EnrollmentId.Set(&v)
}
// SetEnrollmentIdNil sets the value for EnrollmentId to be an explicit nil
func (o *LicenseKeyRequest) SetEnrollmentIdNil() {
	o.EnrollmentId.Set(nil)
}

// UnsetEnrollmentId ensures that no value is present for EnrollmentId, not even an explicit nil
func (o *LicenseKeyRequest) UnsetEnrollmentId() {
	o.EnrollmentId.Unset()
}

// GetEntitlementId returns the EntitlementId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LicenseKeyRequest) GetEntitlementId() string {
	if o == nil || IsNil(o.EntitlementId.Get()) {
		var ret string
		return ret
	}
	return *o.EntitlementId.Get()
}

// GetEntitlementIdOk returns a tuple with the EntitlementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LicenseKeyRequest) GetEntitlementIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EntitlementId.Get(), o.EntitlementId.IsSet()
}

// HasEntitlementId returns a boolean if a field has been set.
func (o *LicenseKeyRequest) HasEntitlementId() bool {
	if o != nil && o.EntitlementId.IsSet() {
		return true
	}

	return false
}

// SetEntitlementId gets a reference to the given NullableString and assigns it to the EntitlementId field.
func (o *LicenseKeyRequest) SetEntitlementId(v string) {
	o.EntitlementId.Set(&v)
}
// SetEntitlementIdNil sets the value for EntitlementId to be an explicit nil
func (o *LicenseKeyRequest) SetEntitlementIdNil() {
	o.EntitlementId.Set(nil)
}

// UnsetEntitlementId ensures that no value is present for EntitlementId, not even an explicit nil
func (o *LicenseKeyRequest) UnsetEntitlementId() {
	o.EntitlementId.Unset()
}

// GetSeats returns the Seats field value if set, zero value otherwise.
func (o *LicenseKeyRequest) GetSeats() int32 {
	if o == nil || IsNil(o.Seats) {
		var ret int32
		return ret
	}
	return *o.Seats
}

// GetSeatsOk returns a tuple with the Seats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseKeyRequest) GetSeatsOk() (*int32, bool) {
	if o == nil || IsNil(o.Seats) {
		return nil, false
	}
	return o.Seats, true
}

// HasSeats returns a boolean if a field has been set.
func (o *LicenseKeyRequest) HasSeats() bool {
	if o != nil && !IsNil(o.Seats) {
		return true
	}

	return false
}

// SetSeats gets a reference to the given int32 and assigns it to the Seats field.
func (o *LicenseKeyRequest) SetSeats(v int32) {
	o.Seats = &v
}

// GetLicenseType returns the LicenseType field value if set, zero value otherwise.
func (o *LicenseKeyRequest) GetLicenseType() int32 {
	if o == nil || IsNil(o.LicenseType) {
		var ret int32
		return ret
	}
	return *o.LicenseType
}

// GetLicenseTypeOk returns a tuple with the LicenseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseKeyRequest) GetLicenseTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.LicenseType) {
		return nil, false
	}
	return o.LicenseType, true
}

// HasLicenseType returns a boolean if a field has been set.
func (o *LicenseKeyRequest) HasLicenseType() bool {
	if o != nil && !IsNil(o.LicenseType) {
		return true
	}

	return false
}

// SetLicenseType gets a reference to the given int32 and assigns it to the LicenseType field.
func (o *LicenseKeyRequest) SetLicenseType(v int32) {
	o.LicenseType = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *LicenseKeyRequest) GetExpirationDate() time.Time {
	if o == nil || IsNil(o.ExpirationDate) {
		var ret time.Time
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseKeyRequest) GetExpirationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *LicenseKeyRequest) HasExpirationDate() bool {
	if o != nil && !IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given time.Time and assigns it to the ExpirationDate field.
func (o *LicenseKeyRequest) SetExpirationDate(v time.Time) {
	o.ExpirationDate = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LicenseKeyRequest) GetFeatures() []LicenseFeature {
	if o == nil {
		var ret []LicenseFeature
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LicenseKeyRequest) GetFeaturesOk() ([]LicenseFeature, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *LicenseKeyRequest) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []LicenseFeature and assigns it to the Features field.
func (o *LicenseKeyRequest) SetFeatures(v []LicenseFeature) {
	o.Features = v
}

// GetAdditionalAttributes returns the AdditionalAttributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LicenseKeyRequest) GetAdditionalAttributes() []AdditionalAttribute {
	if o == nil {
		var ret []AdditionalAttribute
		return ret
	}
	return o.AdditionalAttributes
}

// GetAdditionalAttributesOk returns a tuple with the AdditionalAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LicenseKeyRequest) GetAdditionalAttributesOk() ([]AdditionalAttribute, bool) {
	if o == nil || IsNil(o.AdditionalAttributes) {
		return nil, false
	}
	return o.AdditionalAttributes, true
}

// HasAdditionalAttributes returns a boolean if a field has been set.
func (o *LicenseKeyRequest) HasAdditionalAttributes() bool {
	if o != nil && !IsNil(o.AdditionalAttributes) {
		return true
	}

	return false
}

// SetAdditionalAttributes gets a reference to the given []AdditionalAttribute and assigns it to the AdditionalAttributes field.
func (o *LicenseKeyRequest) SetAdditionalAttributes(v []AdditionalAttribute) {
	o.AdditionalAttributes = v
}

func (o LicenseKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LicenseKeyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.OrderId.IsSet() {
		toSerialize["orderId"] = o.OrderId.Get()
	}
	if o.PaymentId.IsSet() {
		toSerialize["paymentId"] = o.PaymentId.Get()
	}
	if o.InvoiceId.IsSet() {
		toSerialize["invoiceId"] = o.InvoiceId.Get()
	}
	if o.EnrollmentId.IsSet() {
		toSerialize["enrollmentId"] = o.EnrollmentId.Get()
	}
	if o.EntitlementId.IsSet() {
		toSerialize["entitlementId"] = o.EntitlementId.Get()
	}
	if !IsNil(o.Seats) {
		toSerialize["seats"] = o.Seats
	}
	if !IsNil(o.LicenseType) {
		toSerialize["licenseType"] = o.LicenseType
	}
	if !IsNil(o.ExpirationDate) {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	if o.Features != nil {
		toSerialize["features"] = o.Features
	}
	if o.AdditionalAttributes != nil {
		toSerialize["additionalAttributes"] = o.AdditionalAttributes
	}
	return toSerialize, nil
}

type NullableLicenseKeyRequest struct {
	value *LicenseKeyRequest
	isSet bool
}

func (v NullableLicenseKeyRequest) Get() *LicenseKeyRequest {
	return v.value
}

func (v *NullableLicenseKeyRequest) Set(val *LicenseKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLicenseKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLicenseKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLicenseKeyRequest(val *LicenseKeyRequest) *NullableLicenseKeyRequest {
	return &NullableLicenseKeyRequest{value: val, isSet: true}
}

func (v NullableLicenseKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLicenseKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


