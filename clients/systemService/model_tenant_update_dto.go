/*
SystemService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TenantUpdateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TenantUpdateDto{}

// TenantUpdateDto struct for TenantUpdateDto
type TenantUpdateDto struct {
	Name NullableString `json:"name,omitempty"`
	Duns NullableString `json:"duns,omitempty"`
	Slogan NullableString `json:"slogan,omitempty"`
	LegalName NullableString `json:"legalName,omitempty"`
	Phone NullableString `json:"phone,omitempty"`
	WebUrl NullableString `json:"webUrl,omitempty"`
	TwitterUsername NullableString `json:"twitterUsername,omitempty"`
	FacebookUrl NullableString `json:"facebookUrl,omitempty"`
	TwitterUrl NullableString `json:"twitterUrl,omitempty"`
	GitHubUrl NullableString `json:"gitHubUrl,omitempty"`
	LinkedInUrl NullableString `json:"linkedInUrl,omitempty"`
	InstagramUrl NullableString `json:"instagramUrl,omitempty"`
	YouTubeUrl NullableString `json:"youTubeUrl,omitempty"`
	WhatsAppNumber NullableString `json:"whatsAppNumber,omitempty"`
	SupportPhoneNumber NullableString `json:"supportPhoneNumber,omitempty"`
	TaxId NullableString `json:"taxId,omitempty"`
	About NullableString `json:"about,omitempty"`
	CurrencyId NullableString `json:"currencyId,omitempty"`
	TimezoneId NullableString `json:"timezoneId,omitempty"`
	LanguageId NullableString `json:"languageId,omitempty"`
	CountryId NullableString `json:"countryId,omitempty"`
	StateId NullableString `json:"stateId,omitempty"`
	CityId NullableString `json:"cityId,omitempty"`
	Email NullableString `json:"email,omitempty"`
}

// NewTenantUpdateDto instantiates a new TenantUpdateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantUpdateDto() *TenantUpdateDto {
	this := TenantUpdateDto{}
	return &this
}

// NewTenantUpdateDtoWithDefaults instantiates a new TenantUpdateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantUpdateDtoWithDefaults() *TenantUpdateDto {
	this := TenantUpdateDto{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *TenantUpdateDto) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *TenantUpdateDto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *TenantUpdateDto) UnsetName() {
	o.Name.Unset()
}

// GetDuns returns the Duns field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetDuns() string {
	if o == nil || IsNil(o.Duns.Get()) {
		var ret string
		return ret
	}
	return *o.Duns.Get()
}

// GetDunsOk returns a tuple with the Duns field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetDunsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Duns.Get(), o.Duns.IsSet()
}

// HasDuns returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasDuns() bool {
	if o != nil && o.Duns.IsSet() {
		return true
	}

	return false
}

// SetDuns gets a reference to the given NullableString and assigns it to the Duns field.
func (o *TenantUpdateDto) SetDuns(v string) {
	o.Duns.Set(&v)
}
// SetDunsNil sets the value for Duns to be an explicit nil
func (o *TenantUpdateDto) SetDunsNil() {
	o.Duns.Set(nil)
}

// UnsetDuns ensures that no value is present for Duns, not even an explicit nil
func (o *TenantUpdateDto) UnsetDuns() {
	o.Duns.Unset()
}

// GetSlogan returns the Slogan field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetSlogan() string {
	if o == nil || IsNil(o.Slogan.Get()) {
		var ret string
		return ret
	}
	return *o.Slogan.Get()
}

// GetSloganOk returns a tuple with the Slogan field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetSloganOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Slogan.Get(), o.Slogan.IsSet()
}

// HasSlogan returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasSlogan() bool {
	if o != nil && o.Slogan.IsSet() {
		return true
	}

	return false
}

// SetSlogan gets a reference to the given NullableString and assigns it to the Slogan field.
func (o *TenantUpdateDto) SetSlogan(v string) {
	o.Slogan.Set(&v)
}
// SetSloganNil sets the value for Slogan to be an explicit nil
func (o *TenantUpdateDto) SetSloganNil() {
	o.Slogan.Set(nil)
}

// UnsetSlogan ensures that no value is present for Slogan, not even an explicit nil
func (o *TenantUpdateDto) UnsetSlogan() {
	o.Slogan.Unset()
}

// GetLegalName returns the LegalName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetLegalName() string {
	if o == nil || IsNil(o.LegalName.Get()) {
		var ret string
		return ret
	}
	return *o.LegalName.Get()
}

// GetLegalNameOk returns a tuple with the LegalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetLegalNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LegalName.Get(), o.LegalName.IsSet()
}

// HasLegalName returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasLegalName() bool {
	if o != nil && o.LegalName.IsSet() {
		return true
	}

	return false
}

// SetLegalName gets a reference to the given NullableString and assigns it to the LegalName field.
func (o *TenantUpdateDto) SetLegalName(v string) {
	o.LegalName.Set(&v)
}
// SetLegalNameNil sets the value for LegalName to be an explicit nil
func (o *TenantUpdateDto) SetLegalNameNil() {
	o.LegalName.Set(nil)
}

// UnsetLegalName ensures that no value is present for LegalName, not even an explicit nil
func (o *TenantUpdateDto) UnsetLegalName() {
	o.LegalName.Unset()
}

// GetPhone returns the Phone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetPhone() string {
	if o == nil || IsNil(o.Phone.Get()) {
		var ret string
		return ret
	}
	return *o.Phone.Get()
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Phone.Get(), o.Phone.IsSet()
}

// HasPhone returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasPhone() bool {
	if o != nil && o.Phone.IsSet() {
		return true
	}

	return false
}

// SetPhone gets a reference to the given NullableString and assigns it to the Phone field.
func (o *TenantUpdateDto) SetPhone(v string) {
	o.Phone.Set(&v)
}
// SetPhoneNil sets the value for Phone to be an explicit nil
func (o *TenantUpdateDto) SetPhoneNil() {
	o.Phone.Set(nil)
}

// UnsetPhone ensures that no value is present for Phone, not even an explicit nil
func (o *TenantUpdateDto) UnsetPhone() {
	o.Phone.Unset()
}

// GetWebUrl returns the WebUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetWebUrl() string {
	if o == nil || IsNil(o.WebUrl.Get()) {
		var ret string
		return ret
	}
	return *o.WebUrl.Get()
}

// GetWebUrlOk returns a tuple with the WebUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetWebUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WebUrl.Get(), o.WebUrl.IsSet()
}

// HasWebUrl returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasWebUrl() bool {
	if o != nil && o.WebUrl.IsSet() {
		return true
	}

	return false
}

// SetWebUrl gets a reference to the given NullableString and assigns it to the WebUrl field.
func (o *TenantUpdateDto) SetWebUrl(v string) {
	o.WebUrl.Set(&v)
}
// SetWebUrlNil sets the value for WebUrl to be an explicit nil
func (o *TenantUpdateDto) SetWebUrlNil() {
	o.WebUrl.Set(nil)
}

// UnsetWebUrl ensures that no value is present for WebUrl, not even an explicit nil
func (o *TenantUpdateDto) UnsetWebUrl() {
	o.WebUrl.Unset()
}

// GetTwitterUsername returns the TwitterUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetTwitterUsername() string {
	if o == nil || IsNil(o.TwitterUsername.Get()) {
		var ret string
		return ret
	}
	return *o.TwitterUsername.Get()
}

// GetTwitterUsernameOk returns a tuple with the TwitterUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetTwitterUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TwitterUsername.Get(), o.TwitterUsername.IsSet()
}

// HasTwitterUsername returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasTwitterUsername() bool {
	if o != nil && o.TwitterUsername.IsSet() {
		return true
	}

	return false
}

// SetTwitterUsername gets a reference to the given NullableString and assigns it to the TwitterUsername field.
func (o *TenantUpdateDto) SetTwitterUsername(v string) {
	o.TwitterUsername.Set(&v)
}
// SetTwitterUsernameNil sets the value for TwitterUsername to be an explicit nil
func (o *TenantUpdateDto) SetTwitterUsernameNil() {
	o.TwitterUsername.Set(nil)
}

// UnsetTwitterUsername ensures that no value is present for TwitterUsername, not even an explicit nil
func (o *TenantUpdateDto) UnsetTwitterUsername() {
	o.TwitterUsername.Unset()
}

// GetFacebookUrl returns the FacebookUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetFacebookUrl() string {
	if o == nil || IsNil(o.FacebookUrl.Get()) {
		var ret string
		return ret
	}
	return *o.FacebookUrl.Get()
}

// GetFacebookUrlOk returns a tuple with the FacebookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetFacebookUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FacebookUrl.Get(), o.FacebookUrl.IsSet()
}

// HasFacebookUrl returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasFacebookUrl() bool {
	if o != nil && o.FacebookUrl.IsSet() {
		return true
	}

	return false
}

// SetFacebookUrl gets a reference to the given NullableString and assigns it to the FacebookUrl field.
func (o *TenantUpdateDto) SetFacebookUrl(v string) {
	o.FacebookUrl.Set(&v)
}
// SetFacebookUrlNil sets the value for FacebookUrl to be an explicit nil
func (o *TenantUpdateDto) SetFacebookUrlNil() {
	o.FacebookUrl.Set(nil)
}

// UnsetFacebookUrl ensures that no value is present for FacebookUrl, not even an explicit nil
func (o *TenantUpdateDto) UnsetFacebookUrl() {
	o.FacebookUrl.Unset()
}

// GetTwitterUrl returns the TwitterUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetTwitterUrl() string {
	if o == nil || IsNil(o.TwitterUrl.Get()) {
		var ret string
		return ret
	}
	return *o.TwitterUrl.Get()
}

// GetTwitterUrlOk returns a tuple with the TwitterUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetTwitterUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TwitterUrl.Get(), o.TwitterUrl.IsSet()
}

// HasTwitterUrl returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasTwitterUrl() bool {
	if o != nil && o.TwitterUrl.IsSet() {
		return true
	}

	return false
}

// SetTwitterUrl gets a reference to the given NullableString and assigns it to the TwitterUrl field.
func (o *TenantUpdateDto) SetTwitterUrl(v string) {
	o.TwitterUrl.Set(&v)
}
// SetTwitterUrlNil sets the value for TwitterUrl to be an explicit nil
func (o *TenantUpdateDto) SetTwitterUrlNil() {
	o.TwitterUrl.Set(nil)
}

// UnsetTwitterUrl ensures that no value is present for TwitterUrl, not even an explicit nil
func (o *TenantUpdateDto) UnsetTwitterUrl() {
	o.TwitterUrl.Unset()
}

// GetGitHubUrl returns the GitHubUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetGitHubUrl() string {
	if o == nil || IsNil(o.GitHubUrl.Get()) {
		var ret string
		return ret
	}
	return *o.GitHubUrl.Get()
}

// GetGitHubUrlOk returns a tuple with the GitHubUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetGitHubUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GitHubUrl.Get(), o.GitHubUrl.IsSet()
}

// HasGitHubUrl returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasGitHubUrl() bool {
	if o != nil && o.GitHubUrl.IsSet() {
		return true
	}

	return false
}

// SetGitHubUrl gets a reference to the given NullableString and assigns it to the GitHubUrl field.
func (o *TenantUpdateDto) SetGitHubUrl(v string) {
	o.GitHubUrl.Set(&v)
}
// SetGitHubUrlNil sets the value for GitHubUrl to be an explicit nil
func (o *TenantUpdateDto) SetGitHubUrlNil() {
	o.GitHubUrl.Set(nil)
}

// UnsetGitHubUrl ensures that no value is present for GitHubUrl, not even an explicit nil
func (o *TenantUpdateDto) UnsetGitHubUrl() {
	o.GitHubUrl.Unset()
}

// GetLinkedInUrl returns the LinkedInUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetLinkedInUrl() string {
	if o == nil || IsNil(o.LinkedInUrl.Get()) {
		var ret string
		return ret
	}
	return *o.LinkedInUrl.Get()
}

// GetLinkedInUrlOk returns a tuple with the LinkedInUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetLinkedInUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LinkedInUrl.Get(), o.LinkedInUrl.IsSet()
}

// HasLinkedInUrl returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasLinkedInUrl() bool {
	if o != nil && o.LinkedInUrl.IsSet() {
		return true
	}

	return false
}

// SetLinkedInUrl gets a reference to the given NullableString and assigns it to the LinkedInUrl field.
func (o *TenantUpdateDto) SetLinkedInUrl(v string) {
	o.LinkedInUrl.Set(&v)
}
// SetLinkedInUrlNil sets the value for LinkedInUrl to be an explicit nil
func (o *TenantUpdateDto) SetLinkedInUrlNil() {
	o.LinkedInUrl.Set(nil)
}

// UnsetLinkedInUrl ensures that no value is present for LinkedInUrl, not even an explicit nil
func (o *TenantUpdateDto) UnsetLinkedInUrl() {
	o.LinkedInUrl.Unset()
}

// GetInstagramUrl returns the InstagramUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetInstagramUrl() string {
	if o == nil || IsNil(o.InstagramUrl.Get()) {
		var ret string
		return ret
	}
	return *o.InstagramUrl.Get()
}

// GetInstagramUrlOk returns a tuple with the InstagramUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetInstagramUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstagramUrl.Get(), o.InstagramUrl.IsSet()
}

// HasInstagramUrl returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasInstagramUrl() bool {
	if o != nil && o.InstagramUrl.IsSet() {
		return true
	}

	return false
}

// SetInstagramUrl gets a reference to the given NullableString and assigns it to the InstagramUrl field.
func (o *TenantUpdateDto) SetInstagramUrl(v string) {
	o.InstagramUrl.Set(&v)
}
// SetInstagramUrlNil sets the value for InstagramUrl to be an explicit nil
func (o *TenantUpdateDto) SetInstagramUrlNil() {
	o.InstagramUrl.Set(nil)
}

// UnsetInstagramUrl ensures that no value is present for InstagramUrl, not even an explicit nil
func (o *TenantUpdateDto) UnsetInstagramUrl() {
	o.InstagramUrl.Unset()
}

// GetYouTubeUrl returns the YouTubeUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetYouTubeUrl() string {
	if o == nil || IsNil(o.YouTubeUrl.Get()) {
		var ret string
		return ret
	}
	return *o.YouTubeUrl.Get()
}

// GetYouTubeUrlOk returns a tuple with the YouTubeUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetYouTubeUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.YouTubeUrl.Get(), o.YouTubeUrl.IsSet()
}

// HasYouTubeUrl returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasYouTubeUrl() bool {
	if o != nil && o.YouTubeUrl.IsSet() {
		return true
	}

	return false
}

// SetYouTubeUrl gets a reference to the given NullableString and assigns it to the YouTubeUrl field.
func (o *TenantUpdateDto) SetYouTubeUrl(v string) {
	o.YouTubeUrl.Set(&v)
}
// SetYouTubeUrlNil sets the value for YouTubeUrl to be an explicit nil
func (o *TenantUpdateDto) SetYouTubeUrlNil() {
	o.YouTubeUrl.Set(nil)
}

// UnsetYouTubeUrl ensures that no value is present for YouTubeUrl, not even an explicit nil
func (o *TenantUpdateDto) UnsetYouTubeUrl() {
	o.YouTubeUrl.Unset()
}

// GetWhatsAppNumber returns the WhatsAppNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetWhatsAppNumber() string {
	if o == nil || IsNil(o.WhatsAppNumber.Get()) {
		var ret string
		return ret
	}
	return *o.WhatsAppNumber.Get()
}

// GetWhatsAppNumberOk returns a tuple with the WhatsAppNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetWhatsAppNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WhatsAppNumber.Get(), o.WhatsAppNumber.IsSet()
}

// HasWhatsAppNumber returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasWhatsAppNumber() bool {
	if o != nil && o.WhatsAppNumber.IsSet() {
		return true
	}

	return false
}

// SetWhatsAppNumber gets a reference to the given NullableString and assigns it to the WhatsAppNumber field.
func (o *TenantUpdateDto) SetWhatsAppNumber(v string) {
	o.WhatsAppNumber.Set(&v)
}
// SetWhatsAppNumberNil sets the value for WhatsAppNumber to be an explicit nil
func (o *TenantUpdateDto) SetWhatsAppNumberNil() {
	o.WhatsAppNumber.Set(nil)
}

// UnsetWhatsAppNumber ensures that no value is present for WhatsAppNumber, not even an explicit nil
func (o *TenantUpdateDto) UnsetWhatsAppNumber() {
	o.WhatsAppNumber.Unset()
}

// GetSupportPhoneNumber returns the SupportPhoneNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetSupportPhoneNumber() string {
	if o == nil || IsNil(o.SupportPhoneNumber.Get()) {
		var ret string
		return ret
	}
	return *o.SupportPhoneNumber.Get()
}

// GetSupportPhoneNumberOk returns a tuple with the SupportPhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetSupportPhoneNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SupportPhoneNumber.Get(), o.SupportPhoneNumber.IsSet()
}

// HasSupportPhoneNumber returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasSupportPhoneNumber() bool {
	if o != nil && o.SupportPhoneNumber.IsSet() {
		return true
	}

	return false
}

// SetSupportPhoneNumber gets a reference to the given NullableString and assigns it to the SupportPhoneNumber field.
func (o *TenantUpdateDto) SetSupportPhoneNumber(v string) {
	o.SupportPhoneNumber.Set(&v)
}
// SetSupportPhoneNumberNil sets the value for SupportPhoneNumber to be an explicit nil
func (o *TenantUpdateDto) SetSupportPhoneNumberNil() {
	o.SupportPhoneNumber.Set(nil)
}

// UnsetSupportPhoneNumber ensures that no value is present for SupportPhoneNumber, not even an explicit nil
func (o *TenantUpdateDto) UnsetSupportPhoneNumber() {
	o.SupportPhoneNumber.Unset()
}

// GetTaxId returns the TaxId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetTaxId() string {
	if o == nil || IsNil(o.TaxId.Get()) {
		var ret string
		return ret
	}
	return *o.TaxId.Get()
}

// GetTaxIdOk returns a tuple with the TaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetTaxIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaxId.Get(), o.TaxId.IsSet()
}

// HasTaxId returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasTaxId() bool {
	if o != nil && o.TaxId.IsSet() {
		return true
	}

	return false
}

// SetTaxId gets a reference to the given NullableString and assigns it to the TaxId field.
func (o *TenantUpdateDto) SetTaxId(v string) {
	o.TaxId.Set(&v)
}
// SetTaxIdNil sets the value for TaxId to be an explicit nil
func (o *TenantUpdateDto) SetTaxIdNil() {
	o.TaxId.Set(nil)
}

// UnsetTaxId ensures that no value is present for TaxId, not even an explicit nil
func (o *TenantUpdateDto) UnsetTaxId() {
	o.TaxId.Unset()
}

// GetAbout returns the About field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetAbout() string {
	if o == nil || IsNil(o.About.Get()) {
		var ret string
		return ret
	}
	return *o.About.Get()
}

// GetAboutOk returns a tuple with the About field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetAboutOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.About.Get(), o.About.IsSet()
}

// HasAbout returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasAbout() bool {
	if o != nil && o.About.IsSet() {
		return true
	}

	return false
}

// SetAbout gets a reference to the given NullableString and assigns it to the About field.
func (o *TenantUpdateDto) SetAbout(v string) {
	o.About.Set(&v)
}
// SetAboutNil sets the value for About to be an explicit nil
func (o *TenantUpdateDto) SetAboutNil() {
	o.About.Set(nil)
}

// UnsetAbout ensures that no value is present for About, not even an explicit nil
func (o *TenantUpdateDto) UnsetAbout() {
	o.About.Unset()
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetCurrencyId() string {
	if o == nil || IsNil(o.CurrencyId.Get()) {
		var ret string
		return ret
	}
	return *o.CurrencyId.Get()
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetCurrencyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrencyId.Get(), o.CurrencyId.IsSet()
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasCurrencyId() bool {
	if o != nil && o.CurrencyId.IsSet() {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given NullableString and assigns it to the CurrencyId field.
func (o *TenantUpdateDto) SetCurrencyId(v string) {
	o.CurrencyId.Set(&v)
}
// SetCurrencyIdNil sets the value for CurrencyId to be an explicit nil
func (o *TenantUpdateDto) SetCurrencyIdNil() {
	o.CurrencyId.Set(nil)
}

// UnsetCurrencyId ensures that no value is present for CurrencyId, not even an explicit nil
func (o *TenantUpdateDto) UnsetCurrencyId() {
	o.CurrencyId.Unset()
}

// GetTimezoneId returns the TimezoneId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetTimezoneId() string {
	if o == nil || IsNil(o.TimezoneId.Get()) {
		var ret string
		return ret
	}
	return *o.TimezoneId.Get()
}

// GetTimezoneIdOk returns a tuple with the TimezoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetTimezoneIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimezoneId.Get(), o.TimezoneId.IsSet()
}

// HasTimezoneId returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasTimezoneId() bool {
	if o != nil && o.TimezoneId.IsSet() {
		return true
	}

	return false
}

// SetTimezoneId gets a reference to the given NullableString and assigns it to the TimezoneId field.
func (o *TenantUpdateDto) SetTimezoneId(v string) {
	o.TimezoneId.Set(&v)
}
// SetTimezoneIdNil sets the value for TimezoneId to be an explicit nil
func (o *TenantUpdateDto) SetTimezoneIdNil() {
	o.TimezoneId.Set(nil)
}

// UnsetTimezoneId ensures that no value is present for TimezoneId, not even an explicit nil
func (o *TenantUpdateDto) UnsetTimezoneId() {
	o.TimezoneId.Unset()
}

// GetLanguageId returns the LanguageId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetLanguageId() string {
	if o == nil || IsNil(o.LanguageId.Get()) {
		var ret string
		return ret
	}
	return *o.LanguageId.Get()
}

// GetLanguageIdOk returns a tuple with the LanguageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetLanguageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LanguageId.Get(), o.LanguageId.IsSet()
}

// HasLanguageId returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasLanguageId() bool {
	if o != nil && o.LanguageId.IsSet() {
		return true
	}

	return false
}

// SetLanguageId gets a reference to the given NullableString and assigns it to the LanguageId field.
func (o *TenantUpdateDto) SetLanguageId(v string) {
	o.LanguageId.Set(&v)
}
// SetLanguageIdNil sets the value for LanguageId to be an explicit nil
func (o *TenantUpdateDto) SetLanguageIdNil() {
	o.LanguageId.Set(nil)
}

// UnsetLanguageId ensures that no value is present for LanguageId, not even an explicit nil
func (o *TenantUpdateDto) UnsetLanguageId() {
	o.LanguageId.Unset()
}

// GetCountryId returns the CountryId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetCountryId() string {
	if o == nil || IsNil(o.CountryId.Get()) {
		var ret string
		return ret
	}
	return *o.CountryId.Get()
}

// GetCountryIdOk returns a tuple with the CountryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetCountryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryId.Get(), o.CountryId.IsSet()
}

// HasCountryId returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasCountryId() bool {
	if o != nil && o.CountryId.IsSet() {
		return true
	}

	return false
}

// SetCountryId gets a reference to the given NullableString and assigns it to the CountryId field.
func (o *TenantUpdateDto) SetCountryId(v string) {
	o.CountryId.Set(&v)
}
// SetCountryIdNil sets the value for CountryId to be an explicit nil
func (o *TenantUpdateDto) SetCountryIdNil() {
	o.CountryId.Set(nil)
}

// UnsetCountryId ensures that no value is present for CountryId, not even an explicit nil
func (o *TenantUpdateDto) UnsetCountryId() {
	o.CountryId.Unset()
}

// GetStateId returns the StateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetStateId() string {
	if o == nil || IsNil(o.StateId.Get()) {
		var ret string
		return ret
	}
	return *o.StateId.Get()
}

// GetStateIdOk returns a tuple with the StateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetStateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StateId.Get(), o.StateId.IsSet()
}

// HasStateId returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasStateId() bool {
	if o != nil && o.StateId.IsSet() {
		return true
	}

	return false
}

// SetStateId gets a reference to the given NullableString and assigns it to the StateId field.
func (o *TenantUpdateDto) SetStateId(v string) {
	o.StateId.Set(&v)
}
// SetStateIdNil sets the value for StateId to be an explicit nil
func (o *TenantUpdateDto) SetStateIdNil() {
	o.StateId.Set(nil)
}

// UnsetStateId ensures that no value is present for StateId, not even an explicit nil
func (o *TenantUpdateDto) UnsetStateId() {
	o.StateId.Unset()
}

// GetCityId returns the CityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetCityId() string {
	if o == nil || IsNil(o.CityId.Get()) {
		var ret string
		return ret
	}
	return *o.CityId.Get()
}

// GetCityIdOk returns a tuple with the CityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetCityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CityId.Get(), o.CityId.IsSet()
}

// HasCityId returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasCityId() bool {
	if o != nil && o.CityId.IsSet() {
		return true
	}

	return false
}

// SetCityId gets a reference to the given NullableString and assigns it to the CityId field.
func (o *TenantUpdateDto) SetCityId(v string) {
	o.CityId.Set(&v)
}
// SetCityIdNil sets the value for CityId to be an explicit nil
func (o *TenantUpdateDto) SetCityIdNil() {
	o.CityId.Set(nil)
}

// UnsetCityId ensures that no value is present for CityId, not even an explicit nil
func (o *TenantUpdateDto) UnsetCityId() {
	o.CityId.Unset()
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUpdateDto) GetEmail() string {
	if o == nil || IsNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUpdateDto) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *TenantUpdateDto) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *TenantUpdateDto) SetEmail(v string) {
	o.Email.Set(&v)
}
// SetEmailNil sets the value for Email to be an explicit nil
func (o *TenantUpdateDto) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *TenantUpdateDto) UnsetEmail() {
	o.Email.Unset()
}

func (o TenantUpdateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenantUpdateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Duns.IsSet() {
		toSerialize["duns"] = o.Duns.Get()
	}
	if o.Slogan.IsSet() {
		toSerialize["slogan"] = o.Slogan.Get()
	}
	if o.LegalName.IsSet() {
		toSerialize["legalName"] = o.LegalName.Get()
	}
	if o.Phone.IsSet() {
		toSerialize["phone"] = o.Phone.Get()
	}
	if o.WebUrl.IsSet() {
		toSerialize["webUrl"] = o.WebUrl.Get()
	}
	if o.TwitterUsername.IsSet() {
		toSerialize["twitterUsername"] = o.TwitterUsername.Get()
	}
	if o.FacebookUrl.IsSet() {
		toSerialize["facebookUrl"] = o.FacebookUrl.Get()
	}
	if o.TwitterUrl.IsSet() {
		toSerialize["twitterUrl"] = o.TwitterUrl.Get()
	}
	if o.GitHubUrl.IsSet() {
		toSerialize["gitHubUrl"] = o.GitHubUrl.Get()
	}
	if o.LinkedInUrl.IsSet() {
		toSerialize["linkedInUrl"] = o.LinkedInUrl.Get()
	}
	if o.InstagramUrl.IsSet() {
		toSerialize["instagramUrl"] = o.InstagramUrl.Get()
	}
	if o.YouTubeUrl.IsSet() {
		toSerialize["youTubeUrl"] = o.YouTubeUrl.Get()
	}
	if o.WhatsAppNumber.IsSet() {
		toSerialize["whatsAppNumber"] = o.WhatsAppNumber.Get()
	}
	if o.SupportPhoneNumber.IsSet() {
		toSerialize["supportPhoneNumber"] = o.SupportPhoneNumber.Get()
	}
	if o.TaxId.IsSet() {
		toSerialize["taxId"] = o.TaxId.Get()
	}
	if o.About.IsSet() {
		toSerialize["about"] = o.About.Get()
	}
	if o.CurrencyId.IsSet() {
		toSerialize["currencyId"] = o.CurrencyId.Get()
	}
	if o.TimezoneId.IsSet() {
		toSerialize["timezoneId"] = o.TimezoneId.Get()
	}
	if o.LanguageId.IsSet() {
		toSerialize["languageId"] = o.LanguageId.Get()
	}
	if o.CountryId.IsSet() {
		toSerialize["countryId"] = o.CountryId.Get()
	}
	if o.StateId.IsSet() {
		toSerialize["stateId"] = o.StateId.Get()
	}
	if o.CityId.IsSet() {
		toSerialize["cityId"] = o.CityId.Get()
	}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	return toSerialize, nil
}

type NullableTenantUpdateDto struct {
	value *TenantUpdateDto
	isSet bool
}

func (v NullableTenantUpdateDto) Get() *TenantUpdateDto {
	return v.value
}

func (v *NullableTenantUpdateDto) Set(val *TenantUpdateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantUpdateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantUpdateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantUpdateDto(val *TenantUpdateDto) *NullableTenantUpdateDto {
	return &NullableTenantUpdateDto{value: val, isSet: true}
}

func (v NullableTenantUpdateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantUpdateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


