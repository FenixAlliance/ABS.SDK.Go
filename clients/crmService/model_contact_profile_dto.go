/*
CrmService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ContactProfileDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContactProfileDto{}

// ContactProfileDto struct for ContactProfileDto
type ContactProfileDto struct {
	Id NullableString `json:"id,omitempty"`
	Timestamp *time.Time `json:"timestamp,omitempty"`
	TenantId NullableString `json:"tenantId,omitempty"`
	ContactId NullableString `json:"contactId,omitempty"`
	EnrollmentId NullableString `json:"enrollmentId,omitempty"`
	About NullableString `json:"about,omitempty"`
	Verified *bool `json:"verified,omitempty"`
	Submitted *bool `json:"submitted,omitempty"`
	AvatarUrl NullableString `json:"avatarUrl,omitempty"`
	QualifiedName NullableString `json:"qualifiedName,omitempty"`
	VerificationTimestamp NullableTime `json:"verificationTimestamp,omitempty"`
	Data NullableString `json:"data,omitempty"`
	DataLabel NullableString `json:"dataLabel,omitempty"`
	Data1 NullableString `json:"data1,omitempty"`
	Data1Label NullableString `json:"data1Label,omitempty"`
	Data2 NullableString `json:"data2,omitempty"`
	Data2Label NullableString `json:"data2Label,omitempty"`
	Data3 NullableString `json:"data3,omitempty"`
	Data3Label NullableString `json:"data3Label,omitempty"`
	Data4 NullableString `json:"data4,omitempty"`
	Data4Label NullableString `json:"data4Label,omitempty"`
	Data5 NullableString `json:"data5,omitempty"`
	Data5Label NullableString `json:"data5Label,omitempty"`
	Data6 NullableString `json:"data6,omitempty"`
	Data6Label NullableString `json:"data6Label,omitempty"`
	Data7 NullableString `json:"data7,omitempty"`
	Data7Label NullableString `json:"data7Label,omitempty"`
	Data8 NullableString `json:"data8,omitempty"`
	Data8Label NullableString `json:"data8Label,omitempty"`
	Data9 NullableString `json:"data9,omitempty"`
	Data9Label NullableString `json:"data9Label,omitempty"`
}

// NewContactProfileDto instantiates a new ContactProfileDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContactProfileDto() *ContactProfileDto {
	this := ContactProfileDto{}
	return &this
}

// NewContactProfileDtoWithDefaults instantiates a new ContactProfileDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactProfileDtoWithDefaults() *ContactProfileDto {
	this := ContactProfileDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ContactProfileDto) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *ContactProfileDto) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *ContactProfileDto) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ContactProfileDto) UnsetId() {
	o.Id.Unset()
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ContactProfileDto) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactProfileDto) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ContactProfileDto) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *ContactProfileDto) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *ContactProfileDto) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *ContactProfileDto) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *ContactProfileDto) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *ContactProfileDto) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetContactId returns the ContactId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetContactId() string {
	if o == nil || IsNil(o.ContactId.Get()) {
		var ret string
		return ret
	}
	return *o.ContactId.Get()
}

// GetContactIdOk returns a tuple with the ContactId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetContactIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContactId.Get(), o.ContactId.IsSet()
}

// HasContactId returns a boolean if a field has been set.
func (o *ContactProfileDto) HasContactId() bool {
	if o != nil && o.ContactId.IsSet() {
		return true
	}

	return false
}

// SetContactId gets a reference to the given NullableString and assigns it to the ContactId field.
func (o *ContactProfileDto) SetContactId(v string) {
	o.ContactId.Set(&v)
}
// SetContactIdNil sets the value for ContactId to be an explicit nil
func (o *ContactProfileDto) SetContactIdNil() {
	o.ContactId.Set(nil)
}

// UnsetContactId ensures that no value is present for ContactId, not even an explicit nil
func (o *ContactProfileDto) UnsetContactId() {
	o.ContactId.Unset()
}

// GetEnrollmentId returns the EnrollmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetEnrollmentId() string {
	if o == nil || IsNil(o.EnrollmentId.Get()) {
		var ret string
		return ret
	}
	return *o.EnrollmentId.Get()
}

// GetEnrollmentIdOk returns a tuple with the EnrollmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetEnrollmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnrollmentId.Get(), o.EnrollmentId.IsSet()
}

// HasEnrollmentId returns a boolean if a field has been set.
func (o *ContactProfileDto) HasEnrollmentId() bool {
	if o != nil && o.EnrollmentId.IsSet() {
		return true
	}

	return false
}

// SetEnrollmentId gets a reference to the given NullableString and assigns it to the EnrollmentId field.
func (o *ContactProfileDto) SetEnrollmentId(v string) {
	o.EnrollmentId.Set(&v)
}
// SetEnrollmentIdNil sets the value for EnrollmentId to be an explicit nil
func (o *ContactProfileDto) SetEnrollmentIdNil() {
	o.EnrollmentId.Set(nil)
}

// UnsetEnrollmentId ensures that no value is present for EnrollmentId, not even an explicit nil
func (o *ContactProfileDto) UnsetEnrollmentId() {
	o.EnrollmentId.Unset()
}

// GetAbout returns the About field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetAbout() string {
	if o == nil || IsNil(o.About.Get()) {
		var ret string
		return ret
	}
	return *o.About.Get()
}

// GetAboutOk returns a tuple with the About field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetAboutOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.About.Get(), o.About.IsSet()
}

// HasAbout returns a boolean if a field has been set.
func (o *ContactProfileDto) HasAbout() bool {
	if o != nil && o.About.IsSet() {
		return true
	}

	return false
}

// SetAbout gets a reference to the given NullableString and assigns it to the About field.
func (o *ContactProfileDto) SetAbout(v string) {
	o.About.Set(&v)
}
// SetAboutNil sets the value for About to be an explicit nil
func (o *ContactProfileDto) SetAboutNil() {
	o.About.Set(nil)
}

// UnsetAbout ensures that no value is present for About, not even an explicit nil
func (o *ContactProfileDto) UnsetAbout() {
	o.About.Unset()
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *ContactProfileDto) GetVerified() bool {
	if o == nil || IsNil(o.Verified) {
		var ret bool
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactProfileDto) GetVerifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.Verified) {
		return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *ContactProfileDto) HasVerified() bool {
	if o != nil && !IsNil(o.Verified) {
		return true
	}

	return false
}

// SetVerified gets a reference to the given bool and assigns it to the Verified field.
func (o *ContactProfileDto) SetVerified(v bool) {
	o.Verified = &v
}

// GetSubmitted returns the Submitted field value if set, zero value otherwise.
func (o *ContactProfileDto) GetSubmitted() bool {
	if o == nil || IsNil(o.Submitted) {
		var ret bool
		return ret
	}
	return *o.Submitted
}

// GetSubmittedOk returns a tuple with the Submitted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactProfileDto) GetSubmittedOk() (*bool, bool) {
	if o == nil || IsNil(o.Submitted) {
		return nil, false
	}
	return o.Submitted, true
}

// HasSubmitted returns a boolean if a field has been set.
func (o *ContactProfileDto) HasSubmitted() bool {
	if o != nil && !IsNil(o.Submitted) {
		return true
	}

	return false
}

// SetSubmitted gets a reference to the given bool and assigns it to the Submitted field.
func (o *ContactProfileDto) SetSubmitted(v bool) {
	o.Submitted = &v
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetAvatarUrl() string {
	if o == nil || IsNil(o.AvatarUrl.Get()) {
		var ret string
		return ret
	}
	return *o.AvatarUrl.Get()
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetAvatarUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AvatarUrl.Get(), o.AvatarUrl.IsSet()
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *ContactProfileDto) HasAvatarUrl() bool {
	if o != nil && o.AvatarUrl.IsSet() {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given NullableString and assigns it to the AvatarUrl field.
func (o *ContactProfileDto) SetAvatarUrl(v string) {
	o.AvatarUrl.Set(&v)
}
// SetAvatarUrlNil sets the value for AvatarUrl to be an explicit nil
func (o *ContactProfileDto) SetAvatarUrlNil() {
	o.AvatarUrl.Set(nil)
}

// UnsetAvatarUrl ensures that no value is present for AvatarUrl, not even an explicit nil
func (o *ContactProfileDto) UnsetAvatarUrl() {
	o.AvatarUrl.Unset()
}

// GetQualifiedName returns the QualifiedName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetQualifiedName() string {
	if o == nil || IsNil(o.QualifiedName.Get()) {
		var ret string
		return ret
	}
	return *o.QualifiedName.Get()
}

// GetQualifiedNameOk returns a tuple with the QualifiedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetQualifiedNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.QualifiedName.Get(), o.QualifiedName.IsSet()
}

// HasQualifiedName returns a boolean if a field has been set.
func (o *ContactProfileDto) HasQualifiedName() bool {
	if o != nil && o.QualifiedName.IsSet() {
		return true
	}

	return false
}

// SetQualifiedName gets a reference to the given NullableString and assigns it to the QualifiedName field.
func (o *ContactProfileDto) SetQualifiedName(v string) {
	o.QualifiedName.Set(&v)
}
// SetQualifiedNameNil sets the value for QualifiedName to be an explicit nil
func (o *ContactProfileDto) SetQualifiedNameNil() {
	o.QualifiedName.Set(nil)
}

// UnsetQualifiedName ensures that no value is present for QualifiedName, not even an explicit nil
func (o *ContactProfileDto) UnsetQualifiedName() {
	o.QualifiedName.Unset()
}

// GetVerificationTimestamp returns the VerificationTimestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetVerificationTimestamp() time.Time {
	if o == nil || IsNil(o.VerificationTimestamp.Get()) {
		var ret time.Time
		return ret
	}
	return *o.VerificationTimestamp.Get()
}

// GetVerificationTimestampOk returns a tuple with the VerificationTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetVerificationTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.VerificationTimestamp.Get(), o.VerificationTimestamp.IsSet()
}

// HasVerificationTimestamp returns a boolean if a field has been set.
func (o *ContactProfileDto) HasVerificationTimestamp() bool {
	if o != nil && o.VerificationTimestamp.IsSet() {
		return true
	}

	return false
}

// SetVerificationTimestamp gets a reference to the given NullableTime and assigns it to the VerificationTimestamp field.
func (o *ContactProfileDto) SetVerificationTimestamp(v time.Time) {
	o.VerificationTimestamp.Set(&v)
}
// SetVerificationTimestampNil sets the value for VerificationTimestamp to be an explicit nil
func (o *ContactProfileDto) SetVerificationTimestampNil() {
	o.VerificationTimestamp.Set(nil)
}

// UnsetVerificationTimestamp ensures that no value is present for VerificationTimestamp, not even an explicit nil
func (o *ContactProfileDto) UnsetVerificationTimestamp() {
	o.VerificationTimestamp.Unset()
}

// GetData returns the Data field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetData() string {
	if o == nil || IsNil(o.Data.Get()) {
		var ret string
		return ret
	}
	return *o.Data.Get()
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data.Get(), o.Data.IsSet()
}

// HasData returns a boolean if a field has been set.
func (o *ContactProfileDto) HasData() bool {
	if o != nil && o.Data.IsSet() {
		return true
	}

	return false
}

// SetData gets a reference to the given NullableString and assigns it to the Data field.
func (o *ContactProfileDto) SetData(v string) {
	o.Data.Set(&v)
}
// SetDataNil sets the value for Data to be an explicit nil
func (o *ContactProfileDto) SetDataNil() {
	o.Data.Set(nil)
}

// UnsetData ensures that no value is present for Data, not even an explicit nil
func (o *ContactProfileDto) UnsetData() {
	o.Data.Unset()
}

// GetDataLabel returns the DataLabel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetDataLabel() string {
	if o == nil || IsNil(o.DataLabel.Get()) {
		var ret string
		return ret
	}
	return *o.DataLabel.Get()
}

// GetDataLabelOk returns a tuple with the DataLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetDataLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DataLabel.Get(), o.DataLabel.IsSet()
}

// HasDataLabel returns a boolean if a field has been set.
func (o *ContactProfileDto) HasDataLabel() bool {
	if o != nil && o.DataLabel.IsSet() {
		return true
	}

	return false
}

// SetDataLabel gets a reference to the given NullableString and assigns it to the DataLabel field.
func (o *ContactProfileDto) SetDataLabel(v string) {
	o.DataLabel.Set(&v)
}
// SetDataLabelNil sets the value for DataLabel to be an explicit nil
func (o *ContactProfileDto) SetDataLabelNil() {
	o.DataLabel.Set(nil)
}

// UnsetDataLabel ensures that no value is present for DataLabel, not even an explicit nil
func (o *ContactProfileDto) UnsetDataLabel() {
	o.DataLabel.Unset()
}

// GetData1 returns the Data1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetData1() string {
	if o == nil || IsNil(o.Data1.Get()) {
		var ret string
		return ret
	}
	return *o.Data1.Get()
}

// GetData1Ok returns a tuple with the Data1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetData1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data1.Get(), o.Data1.IsSet()
}

// HasData1 returns a boolean if a field has been set.
func (o *ContactProfileDto) HasData1() bool {
	if o != nil && o.Data1.IsSet() {
		return true
	}

	return false
}

// SetData1 gets a reference to the given NullableString and assigns it to the Data1 field.
func (o *ContactProfileDto) SetData1(v string) {
	o.Data1.Set(&v)
}
// SetData1Nil sets the value for Data1 to be an explicit nil
func (o *ContactProfileDto) SetData1Nil() {
	o.Data1.Set(nil)
}

// UnsetData1 ensures that no value is present for Data1, not even an explicit nil
func (o *ContactProfileDto) UnsetData1() {
	o.Data1.Unset()
}

// GetData1Label returns the Data1Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetData1Label() string {
	if o == nil || IsNil(o.Data1Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data1Label.Get()
}

// GetData1LabelOk returns a tuple with the Data1Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetData1LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data1Label.Get(), o.Data1Label.IsSet()
}

// HasData1Label returns a boolean if a field has been set.
func (o *ContactProfileDto) HasData1Label() bool {
	if o != nil && o.Data1Label.IsSet() {
		return true
	}

	return false
}

// SetData1Label gets a reference to the given NullableString and assigns it to the Data1Label field.
func (o *ContactProfileDto) SetData1Label(v string) {
	o.Data1Label.Set(&v)
}
// SetData1LabelNil sets the value for Data1Label to be an explicit nil
func (o *ContactProfileDto) SetData1LabelNil() {
	o.Data1Label.Set(nil)
}

// UnsetData1Label ensures that no value is present for Data1Label, not even an explicit nil
func (o *ContactProfileDto) UnsetData1Label() {
	o.Data1Label.Unset()
}

// GetData2 returns the Data2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetData2() string {
	if o == nil || IsNil(o.Data2.Get()) {
		var ret string
		return ret
	}
	return *o.Data2.Get()
}

// GetData2Ok returns a tuple with the Data2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetData2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data2.Get(), o.Data2.IsSet()
}

// HasData2 returns a boolean if a field has been set.
func (o *ContactProfileDto) HasData2() bool {
	if o != nil && o.Data2.IsSet() {
		return true
	}

	return false
}

// SetData2 gets a reference to the given NullableString and assigns it to the Data2 field.
func (o *ContactProfileDto) SetData2(v string) {
	o.Data2.Set(&v)
}
// SetData2Nil sets the value for Data2 to be an explicit nil
func (o *ContactProfileDto) SetData2Nil() {
	o.Data2.Set(nil)
}

// UnsetData2 ensures that no value is present for Data2, not even an explicit nil
func (o *ContactProfileDto) UnsetData2() {
	o.Data2.Unset()
}

// GetData2Label returns the Data2Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetData2Label() string {
	if o == nil || IsNil(o.Data2Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data2Label.Get()
}

// GetData2LabelOk returns a tuple with the Data2Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetData2LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data2Label.Get(), o.Data2Label.IsSet()
}

// HasData2Label returns a boolean if a field has been set.
func (o *ContactProfileDto) HasData2Label() bool {
	if o != nil && o.Data2Label.IsSet() {
		return true
	}

	return false
}

// SetData2Label gets a reference to the given NullableString and assigns it to the Data2Label field.
func (o *ContactProfileDto) SetData2Label(v string) {
	o.Data2Label.Set(&v)
}
// SetData2LabelNil sets the value for Data2Label to be an explicit nil
func (o *ContactProfileDto) SetData2LabelNil() {
	o.Data2Label.Set(nil)
}

// UnsetData2Label ensures that no value is present for Data2Label, not even an explicit nil
func (o *ContactProfileDto) UnsetData2Label() {
	o.Data2Label.Unset()
}

// GetData3 returns the Data3 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetData3() string {
	if o == nil || IsNil(o.Data3.Get()) {
		var ret string
		return ret
	}
	return *o.Data3.Get()
}

// GetData3Ok returns a tuple with the Data3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetData3Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data3.Get(), o.Data3.IsSet()
}

// HasData3 returns a boolean if a field has been set.
func (o *ContactProfileDto) HasData3() bool {
	if o != nil && o.Data3.IsSet() {
		return true
	}

	return false
}

// SetData3 gets a reference to the given NullableString and assigns it to the Data3 field.
func (o *ContactProfileDto) SetData3(v string) {
	o.Data3.Set(&v)
}
// SetData3Nil sets the value for Data3 to be an explicit nil
func (o *ContactProfileDto) SetData3Nil() {
	o.Data3.Set(nil)
}

// UnsetData3 ensures that no value is present for Data3, not even an explicit nil
func (o *ContactProfileDto) UnsetData3() {
	o.Data3.Unset()
}

// GetData3Label returns the Data3Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetData3Label() string {
	if o == nil || IsNil(o.Data3Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data3Label.Get()
}

// GetData3LabelOk returns a tuple with the Data3Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetData3LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data3Label.Get(), o.Data3Label.IsSet()
}

// HasData3Label returns a boolean if a field has been set.
func (o *ContactProfileDto) HasData3Label() bool {
	if o != nil && o.Data3Label.IsSet() {
		return true
	}

	return false
}

// SetData3Label gets a reference to the given NullableString and assigns it to the Data3Label field.
func (o *ContactProfileDto) SetData3Label(v string) {
	o.Data3Label.Set(&v)
}
// SetData3LabelNil sets the value for Data3Label to be an explicit nil
func (o *ContactProfileDto) SetData3LabelNil() {
	o.Data3Label.Set(nil)
}

// UnsetData3Label ensures that no value is present for Data3Label, not even an explicit nil
func (o *ContactProfileDto) UnsetData3Label() {
	o.Data3Label.Unset()
}

// GetData4 returns the Data4 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetData4() string {
	if o == nil || IsNil(o.Data4.Get()) {
		var ret string
		return ret
	}
	return *o.Data4.Get()
}

// GetData4Ok returns a tuple with the Data4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetData4Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data4.Get(), o.Data4.IsSet()
}

// HasData4 returns a boolean if a field has been set.
func (o *ContactProfileDto) HasData4() bool {
	if o != nil && o.Data4.IsSet() {
		return true
	}

	return false
}

// SetData4 gets a reference to the given NullableString and assigns it to the Data4 field.
func (o *ContactProfileDto) SetData4(v string) {
	o.Data4.Set(&v)
}
// SetData4Nil sets the value for Data4 to be an explicit nil
func (o *ContactProfileDto) SetData4Nil() {
	o.Data4.Set(nil)
}

// UnsetData4 ensures that no value is present for Data4, not even an explicit nil
func (o *ContactProfileDto) UnsetData4() {
	o.Data4.Unset()
}

// GetData4Label returns the Data4Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetData4Label() string {
	if o == nil || IsNil(o.Data4Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data4Label.Get()
}

// GetData4LabelOk returns a tuple with the Data4Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetData4LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data4Label.Get(), o.Data4Label.IsSet()
}

// HasData4Label returns a boolean if a field has been set.
func (o *ContactProfileDto) HasData4Label() bool {
	if o != nil && o.Data4Label.IsSet() {
		return true
	}

	return false
}

// SetData4Label gets a reference to the given NullableString and assigns it to the Data4Label field.
func (o *ContactProfileDto) SetData4Label(v string) {
	o.Data4Label.Set(&v)
}
// SetData4LabelNil sets the value for Data4Label to be an explicit nil
func (o *ContactProfileDto) SetData4LabelNil() {
	o.Data4Label.Set(nil)
}

// UnsetData4Label ensures that no value is present for Data4Label, not even an explicit nil
func (o *ContactProfileDto) UnsetData4Label() {
	o.Data4Label.Unset()
}

// GetData5 returns the Data5 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetData5() string {
	if o == nil || IsNil(o.Data5.Get()) {
		var ret string
		return ret
	}
	return *o.Data5.Get()
}

// GetData5Ok returns a tuple with the Data5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetData5Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data5.Get(), o.Data5.IsSet()
}

// HasData5 returns a boolean if a field has been set.
func (o *ContactProfileDto) HasData5() bool {
	if o != nil && o.Data5.IsSet() {
		return true
	}

	return false
}

// SetData5 gets a reference to the given NullableString and assigns it to the Data5 field.
func (o *ContactProfileDto) SetData5(v string) {
	o.Data5.Set(&v)
}
// SetData5Nil sets the value for Data5 to be an explicit nil
func (o *ContactProfileDto) SetData5Nil() {
	o.Data5.Set(nil)
}

// UnsetData5 ensures that no value is present for Data5, not even an explicit nil
func (o *ContactProfileDto) UnsetData5() {
	o.Data5.Unset()
}

// GetData5Label returns the Data5Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetData5Label() string {
	if o == nil || IsNil(o.Data5Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data5Label.Get()
}

// GetData5LabelOk returns a tuple with the Data5Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetData5LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data5Label.Get(), o.Data5Label.IsSet()
}

// HasData5Label returns a boolean if a field has been set.
func (o *ContactProfileDto) HasData5Label() bool {
	if o != nil && o.Data5Label.IsSet() {
		return true
	}

	return false
}

// SetData5Label gets a reference to the given NullableString and assigns it to the Data5Label field.
func (o *ContactProfileDto) SetData5Label(v string) {
	o.Data5Label.Set(&v)
}
// SetData5LabelNil sets the value for Data5Label to be an explicit nil
func (o *ContactProfileDto) SetData5LabelNil() {
	o.Data5Label.Set(nil)
}

// UnsetData5Label ensures that no value is present for Data5Label, not even an explicit nil
func (o *ContactProfileDto) UnsetData5Label() {
	o.Data5Label.Unset()
}

// GetData6 returns the Data6 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetData6() string {
	if o == nil || IsNil(o.Data6.Get()) {
		var ret string
		return ret
	}
	return *o.Data6.Get()
}

// GetData6Ok returns a tuple with the Data6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetData6Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data6.Get(), o.Data6.IsSet()
}

// HasData6 returns a boolean if a field has been set.
func (o *ContactProfileDto) HasData6() bool {
	if o != nil && o.Data6.IsSet() {
		return true
	}

	return false
}

// SetData6 gets a reference to the given NullableString and assigns it to the Data6 field.
func (o *ContactProfileDto) SetData6(v string) {
	o.Data6.Set(&v)
}
// SetData6Nil sets the value for Data6 to be an explicit nil
func (o *ContactProfileDto) SetData6Nil() {
	o.Data6.Set(nil)
}

// UnsetData6 ensures that no value is present for Data6, not even an explicit nil
func (o *ContactProfileDto) UnsetData6() {
	o.Data6.Unset()
}

// GetData6Label returns the Data6Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetData6Label() string {
	if o == nil || IsNil(o.Data6Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data6Label.Get()
}

// GetData6LabelOk returns a tuple with the Data6Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetData6LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data6Label.Get(), o.Data6Label.IsSet()
}

// HasData6Label returns a boolean if a field has been set.
func (o *ContactProfileDto) HasData6Label() bool {
	if o != nil && o.Data6Label.IsSet() {
		return true
	}

	return false
}

// SetData6Label gets a reference to the given NullableString and assigns it to the Data6Label field.
func (o *ContactProfileDto) SetData6Label(v string) {
	o.Data6Label.Set(&v)
}
// SetData6LabelNil sets the value for Data6Label to be an explicit nil
func (o *ContactProfileDto) SetData6LabelNil() {
	o.Data6Label.Set(nil)
}

// UnsetData6Label ensures that no value is present for Data6Label, not even an explicit nil
func (o *ContactProfileDto) UnsetData6Label() {
	o.Data6Label.Unset()
}

// GetData7 returns the Data7 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetData7() string {
	if o == nil || IsNil(o.Data7.Get()) {
		var ret string
		return ret
	}
	return *o.Data7.Get()
}

// GetData7Ok returns a tuple with the Data7 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetData7Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data7.Get(), o.Data7.IsSet()
}

// HasData7 returns a boolean if a field has been set.
func (o *ContactProfileDto) HasData7() bool {
	if o != nil && o.Data7.IsSet() {
		return true
	}

	return false
}

// SetData7 gets a reference to the given NullableString and assigns it to the Data7 field.
func (o *ContactProfileDto) SetData7(v string) {
	o.Data7.Set(&v)
}
// SetData7Nil sets the value for Data7 to be an explicit nil
func (o *ContactProfileDto) SetData7Nil() {
	o.Data7.Set(nil)
}

// UnsetData7 ensures that no value is present for Data7, not even an explicit nil
func (o *ContactProfileDto) UnsetData7() {
	o.Data7.Unset()
}

// GetData7Label returns the Data7Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetData7Label() string {
	if o == nil || IsNil(o.Data7Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data7Label.Get()
}

// GetData7LabelOk returns a tuple with the Data7Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetData7LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data7Label.Get(), o.Data7Label.IsSet()
}

// HasData7Label returns a boolean if a field has been set.
func (o *ContactProfileDto) HasData7Label() bool {
	if o != nil && o.Data7Label.IsSet() {
		return true
	}

	return false
}

// SetData7Label gets a reference to the given NullableString and assigns it to the Data7Label field.
func (o *ContactProfileDto) SetData7Label(v string) {
	o.Data7Label.Set(&v)
}
// SetData7LabelNil sets the value for Data7Label to be an explicit nil
func (o *ContactProfileDto) SetData7LabelNil() {
	o.Data7Label.Set(nil)
}

// UnsetData7Label ensures that no value is present for Data7Label, not even an explicit nil
func (o *ContactProfileDto) UnsetData7Label() {
	o.Data7Label.Unset()
}

// GetData8 returns the Data8 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetData8() string {
	if o == nil || IsNil(o.Data8.Get()) {
		var ret string
		return ret
	}
	return *o.Data8.Get()
}

// GetData8Ok returns a tuple with the Data8 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetData8Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data8.Get(), o.Data8.IsSet()
}

// HasData8 returns a boolean if a field has been set.
func (o *ContactProfileDto) HasData8() bool {
	if o != nil && o.Data8.IsSet() {
		return true
	}

	return false
}

// SetData8 gets a reference to the given NullableString and assigns it to the Data8 field.
func (o *ContactProfileDto) SetData8(v string) {
	o.Data8.Set(&v)
}
// SetData8Nil sets the value for Data8 to be an explicit nil
func (o *ContactProfileDto) SetData8Nil() {
	o.Data8.Set(nil)
}

// UnsetData8 ensures that no value is present for Data8, not even an explicit nil
func (o *ContactProfileDto) UnsetData8() {
	o.Data8.Unset()
}

// GetData8Label returns the Data8Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetData8Label() string {
	if o == nil || IsNil(o.Data8Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data8Label.Get()
}

// GetData8LabelOk returns a tuple with the Data8Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetData8LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data8Label.Get(), o.Data8Label.IsSet()
}

// HasData8Label returns a boolean if a field has been set.
func (o *ContactProfileDto) HasData8Label() bool {
	if o != nil && o.Data8Label.IsSet() {
		return true
	}

	return false
}

// SetData8Label gets a reference to the given NullableString and assigns it to the Data8Label field.
func (o *ContactProfileDto) SetData8Label(v string) {
	o.Data8Label.Set(&v)
}
// SetData8LabelNil sets the value for Data8Label to be an explicit nil
func (o *ContactProfileDto) SetData8LabelNil() {
	o.Data8Label.Set(nil)
}

// UnsetData8Label ensures that no value is present for Data8Label, not even an explicit nil
func (o *ContactProfileDto) UnsetData8Label() {
	o.Data8Label.Unset()
}

// GetData9 returns the Data9 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetData9() string {
	if o == nil || IsNil(o.Data9.Get()) {
		var ret string
		return ret
	}
	return *o.Data9.Get()
}

// GetData9Ok returns a tuple with the Data9 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetData9Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data9.Get(), o.Data9.IsSet()
}

// HasData9 returns a boolean if a field has been set.
func (o *ContactProfileDto) HasData9() bool {
	if o != nil && o.Data9.IsSet() {
		return true
	}

	return false
}

// SetData9 gets a reference to the given NullableString and assigns it to the Data9 field.
func (o *ContactProfileDto) SetData9(v string) {
	o.Data9.Set(&v)
}
// SetData9Nil sets the value for Data9 to be an explicit nil
func (o *ContactProfileDto) SetData9Nil() {
	o.Data9.Set(nil)
}

// UnsetData9 ensures that no value is present for Data9, not even an explicit nil
func (o *ContactProfileDto) UnsetData9() {
	o.Data9.Unset()
}

// GetData9Label returns the Data9Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactProfileDto) GetData9Label() string {
	if o == nil || IsNil(o.Data9Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data9Label.Get()
}

// GetData9LabelOk returns a tuple with the Data9Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactProfileDto) GetData9LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data9Label.Get(), o.Data9Label.IsSet()
}

// HasData9Label returns a boolean if a field has been set.
func (o *ContactProfileDto) HasData9Label() bool {
	if o != nil && o.Data9Label.IsSet() {
		return true
	}

	return false
}

// SetData9Label gets a reference to the given NullableString and assigns it to the Data9Label field.
func (o *ContactProfileDto) SetData9Label(v string) {
	o.Data9Label.Set(&v)
}
// SetData9LabelNil sets the value for Data9Label to be an explicit nil
func (o *ContactProfileDto) SetData9LabelNil() {
	o.Data9Label.Set(nil)
}

// UnsetData9Label ensures that no value is present for Data9Label, not even an explicit nil
func (o *ContactProfileDto) UnsetData9Label() {
	o.Data9Label.Unset()
}

func (o ContactProfileDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContactProfileDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.ContactId.IsSet() {
		toSerialize["contactId"] = o.ContactId.Get()
	}
	if o.EnrollmentId.IsSet() {
		toSerialize["enrollmentId"] = o.EnrollmentId.Get()
	}
	if o.About.IsSet() {
		toSerialize["about"] = o.About.Get()
	}
	if !IsNil(o.Verified) {
		toSerialize["verified"] = o.Verified
	}
	if !IsNil(o.Submitted) {
		toSerialize["submitted"] = o.Submitted
	}
	if o.AvatarUrl.IsSet() {
		toSerialize["avatarUrl"] = o.AvatarUrl.Get()
	}
	if o.QualifiedName.IsSet() {
		toSerialize["qualifiedName"] = o.QualifiedName.Get()
	}
	if o.VerificationTimestamp.IsSet() {
		toSerialize["verificationTimestamp"] = o.VerificationTimestamp.Get()
	}
	if o.Data.IsSet() {
		toSerialize["data"] = o.Data.Get()
	}
	if o.DataLabel.IsSet() {
		toSerialize["dataLabel"] = o.DataLabel.Get()
	}
	if o.Data1.IsSet() {
		toSerialize["data1"] = o.Data1.Get()
	}
	if o.Data1Label.IsSet() {
		toSerialize["data1Label"] = o.Data1Label.Get()
	}
	if o.Data2.IsSet() {
		toSerialize["data2"] = o.Data2.Get()
	}
	if o.Data2Label.IsSet() {
		toSerialize["data2Label"] = o.Data2Label.Get()
	}
	if o.Data3.IsSet() {
		toSerialize["data3"] = o.Data3.Get()
	}
	if o.Data3Label.IsSet() {
		toSerialize["data3Label"] = o.Data3Label.Get()
	}
	if o.Data4.IsSet() {
		toSerialize["data4"] = o.Data4.Get()
	}
	if o.Data4Label.IsSet() {
		toSerialize["data4Label"] = o.Data4Label.Get()
	}
	if o.Data5.IsSet() {
		toSerialize["data5"] = o.Data5.Get()
	}
	if o.Data5Label.IsSet() {
		toSerialize["data5Label"] = o.Data5Label.Get()
	}
	if o.Data6.IsSet() {
		toSerialize["data6"] = o.Data6.Get()
	}
	if o.Data6Label.IsSet() {
		toSerialize["data6Label"] = o.Data6Label.Get()
	}
	if o.Data7.IsSet() {
		toSerialize["data7"] = o.Data7.Get()
	}
	if o.Data7Label.IsSet() {
		toSerialize["data7Label"] = o.Data7Label.Get()
	}
	if o.Data8.IsSet() {
		toSerialize["data8"] = o.Data8.Get()
	}
	if o.Data8Label.IsSet() {
		toSerialize["data8Label"] = o.Data8Label.Get()
	}
	if o.Data9.IsSet() {
		toSerialize["data9"] = o.Data9.Get()
	}
	if o.Data9Label.IsSet() {
		toSerialize["data9Label"] = o.Data9Label.Get()
	}
	return toSerialize, nil
}

type NullableContactProfileDto struct {
	value *ContactProfileDto
	isSet bool
}

func (v NullableContactProfileDto) Get() *ContactProfileDto {
	return v.value
}

func (v *NullableContactProfileDto) Set(val *ContactProfileDto) {
	v.value = val
	v.isSet = true
}

func (v NullableContactProfileDto) IsSet() bool {
	return v.isSet
}

func (v *NullableContactProfileDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContactProfileDto(val *ContactProfileDto) *NullableContactProfileDto {
	return &NullableContactProfileDto{value: val, isSet: true}
}

func (v NullableContactProfileDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContactProfileDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


