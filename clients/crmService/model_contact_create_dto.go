/*
CrmService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ContactCreateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContactCreateDto{}

// ContactCreateDto struct for ContactCreateDto
type ContactCreateDto struct {
	Id *string `json:"id,omitempty"`
	Timestamp *time.Time `json:"timestamp,omitempty"`
	TenantId string `json:"tenantId"`
	Type int32 `json:"type"`
	FirstName string `json:"firstName"`
	LastName NullableString `json:"lastName,omitempty"`
	Email string `json:"email"`
	TaxId NullableString `json:"taxId,omitempty"`
	PrimaryContactId NullableString `json:"primaryContactId,omitempty"`
	QualifiedName NullableString `json:"qualifiedName,omitempty"`
	About NullableString `json:"about,omitempty"`
	CountryId NullableString `json:"countryId,omitempty"`
	StateId NullableString `json:"stateId,omitempty"`
	CityId NullableString `json:"cityId,omitempty"`
	MobilePhone NullableString `json:"mobilePhone,omitempty"`
	BusinessPhone NullableString `json:"businessPhone,omitempty"`
	PostalCode NullableString `json:"postalCode,omitempty" validate:"regexp=^[\\\\w\\\\s-]{3,10}$"`
	Duns NullableString `json:"duns,omitempty"`
	JobTitle NullableString `json:"jobTitle,omitempty"`
	WebUrl NullableString `json:"webUrl,omitempty"`
	CurrencyId NullableString `json:"currencyId,omitempty"`
	LanguageId NullableString `json:"languageId,omitempty"`
	TimezoneId NullableString `json:"timezoneId,omitempty"`
	Birthday NullableTime `json:"birthday,omitempty"`
	StreetLine1 NullableString `json:"streetLine1,omitempty"`
	StreetLine2 NullableString `json:"streetLine2,omitempty"`
	GitHubUrl NullableString `json:"gitHubUrl,omitempty"`
	TwitchUrl NullableString `json:"twitchUrl,omitempty"`
	RedditUrl NullableString `json:"redditUrl,omitempty"`
	TikTokUrl NullableString `json:"tikTokUrl,omitempty"`
	WebsiteUrl NullableString `json:"websiteUrl,omitempty"`
	TwitterUrl NullableString `json:"twitterUrl,omitempty"`
	FacebookUrl NullableString `json:"facebookUrl,omitempty"`
	YouTubeUrl NullableString `json:"youTubeUrl,omitempty"`
	LinkedInUrl NullableString `json:"linkedInUrl,omitempty"`
	InstagramUrl NullableString `json:"instagramUrl,omitempty"`
	GithubUsername NullableString `json:"githubUsername,omitempty"`
	InstagramUsername interface{} `json:"instagramUsername,omitempty"`
	TikTokUsername interface{} `json:"tikTokUsername,omitempty"`
	StackExchangeUrl interface{} `json:"stackExchangeUrl,omitempty"`
	StackOverflowUrl interface{} `json:"stackOverflowUrl,omitempty"`
	ParentContactId interface{} `json:"parentContactId,omitempty"`
}

type _ContactCreateDto ContactCreateDto

// NewContactCreateDto instantiates a new ContactCreateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContactCreateDto(tenantId string, type_ int32, firstName string, email string) *ContactCreateDto {
	this := ContactCreateDto{}
	this.TenantId = tenantId
	this.Type = type_
	this.FirstName = firstName
	this.Email = email
	return &this
}

// NewContactCreateDtoWithDefaults instantiates a new ContactCreateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactCreateDtoWithDefaults() *ContactCreateDto {
	this := ContactCreateDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ContactCreateDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCreateDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ContactCreateDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ContactCreateDto) SetId(v string) {
	o.Id = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ContactCreateDto) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCreateDto) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ContactCreateDto) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *ContactCreateDto) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetTenantId returns the TenantId field value
func (o *ContactCreateDto) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *ContactCreateDto) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *ContactCreateDto) SetTenantId(v string) {
	o.TenantId = v
}

// GetType returns the Type field value
func (o *ContactCreateDto) GetType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ContactCreateDto) GetTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ContactCreateDto) SetType(v int32) {
	o.Type = v
}

// GetFirstName returns the FirstName field value
func (o *ContactCreateDto) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *ContactCreateDto) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *ContactCreateDto) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetLastName() string {
	if o == nil || IsNil(o.LastName.Get()) {
		var ret string
		return ret
	}
	return *o.LastName.Get()
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastName.Get(), o.LastName.IsSet()
}

// HasLastName returns a boolean if a field has been set.
func (o *ContactCreateDto) HasLastName() bool {
	if o != nil && o.LastName.IsSet() {
		return true
	}

	return false
}

// SetLastName gets a reference to the given NullableString and assigns it to the LastName field.
func (o *ContactCreateDto) SetLastName(v string) {
	o.LastName.Set(&v)
}
// SetLastNameNil sets the value for LastName to be an explicit nil
func (o *ContactCreateDto) SetLastNameNil() {
	o.LastName.Set(nil)
}

// UnsetLastName ensures that no value is present for LastName, not even an explicit nil
func (o *ContactCreateDto) UnsetLastName() {
	o.LastName.Unset()
}

// GetEmail returns the Email field value
func (o *ContactCreateDto) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *ContactCreateDto) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *ContactCreateDto) SetEmail(v string) {
	o.Email = v
}

// GetTaxId returns the TaxId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetTaxId() string {
	if o == nil || IsNil(o.TaxId.Get()) {
		var ret string
		return ret
	}
	return *o.TaxId.Get()
}

// GetTaxIdOk returns a tuple with the TaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetTaxIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaxId.Get(), o.TaxId.IsSet()
}

// HasTaxId returns a boolean if a field has been set.
func (o *ContactCreateDto) HasTaxId() bool {
	if o != nil && o.TaxId.IsSet() {
		return true
	}

	return false
}

// SetTaxId gets a reference to the given NullableString and assigns it to the TaxId field.
func (o *ContactCreateDto) SetTaxId(v string) {
	o.TaxId.Set(&v)
}
// SetTaxIdNil sets the value for TaxId to be an explicit nil
func (o *ContactCreateDto) SetTaxIdNil() {
	o.TaxId.Set(nil)
}

// UnsetTaxId ensures that no value is present for TaxId, not even an explicit nil
func (o *ContactCreateDto) UnsetTaxId() {
	o.TaxId.Unset()
}

// GetPrimaryContactId returns the PrimaryContactId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetPrimaryContactId() string {
	if o == nil || IsNil(o.PrimaryContactId.Get()) {
		var ret string
		return ret
	}
	return *o.PrimaryContactId.Get()
}

// GetPrimaryContactIdOk returns a tuple with the PrimaryContactId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetPrimaryContactIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryContactId.Get(), o.PrimaryContactId.IsSet()
}

// HasPrimaryContactId returns a boolean if a field has been set.
func (o *ContactCreateDto) HasPrimaryContactId() bool {
	if o != nil && o.PrimaryContactId.IsSet() {
		return true
	}

	return false
}

// SetPrimaryContactId gets a reference to the given NullableString and assigns it to the PrimaryContactId field.
func (o *ContactCreateDto) SetPrimaryContactId(v string) {
	o.PrimaryContactId.Set(&v)
}
// SetPrimaryContactIdNil sets the value for PrimaryContactId to be an explicit nil
func (o *ContactCreateDto) SetPrimaryContactIdNil() {
	o.PrimaryContactId.Set(nil)
}

// UnsetPrimaryContactId ensures that no value is present for PrimaryContactId, not even an explicit nil
func (o *ContactCreateDto) UnsetPrimaryContactId() {
	o.PrimaryContactId.Unset()
}

// GetQualifiedName returns the QualifiedName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetQualifiedName() string {
	if o == nil || IsNil(o.QualifiedName.Get()) {
		var ret string
		return ret
	}
	return *o.QualifiedName.Get()
}

// GetQualifiedNameOk returns a tuple with the QualifiedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetQualifiedNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.QualifiedName.Get(), o.QualifiedName.IsSet()
}

// HasQualifiedName returns a boolean if a field has been set.
func (o *ContactCreateDto) HasQualifiedName() bool {
	if o != nil && o.QualifiedName.IsSet() {
		return true
	}

	return false
}

// SetQualifiedName gets a reference to the given NullableString and assigns it to the QualifiedName field.
func (o *ContactCreateDto) SetQualifiedName(v string) {
	o.QualifiedName.Set(&v)
}
// SetQualifiedNameNil sets the value for QualifiedName to be an explicit nil
func (o *ContactCreateDto) SetQualifiedNameNil() {
	o.QualifiedName.Set(nil)
}

// UnsetQualifiedName ensures that no value is present for QualifiedName, not even an explicit nil
func (o *ContactCreateDto) UnsetQualifiedName() {
	o.QualifiedName.Unset()
}

// GetAbout returns the About field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetAbout() string {
	if o == nil || IsNil(o.About.Get()) {
		var ret string
		return ret
	}
	return *o.About.Get()
}

// GetAboutOk returns a tuple with the About field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetAboutOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.About.Get(), o.About.IsSet()
}

// HasAbout returns a boolean if a field has been set.
func (o *ContactCreateDto) HasAbout() bool {
	if o != nil && o.About.IsSet() {
		return true
	}

	return false
}

// SetAbout gets a reference to the given NullableString and assigns it to the About field.
func (o *ContactCreateDto) SetAbout(v string) {
	o.About.Set(&v)
}
// SetAboutNil sets the value for About to be an explicit nil
func (o *ContactCreateDto) SetAboutNil() {
	o.About.Set(nil)
}

// UnsetAbout ensures that no value is present for About, not even an explicit nil
func (o *ContactCreateDto) UnsetAbout() {
	o.About.Unset()
}

// GetCountryId returns the CountryId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetCountryId() string {
	if o == nil || IsNil(o.CountryId.Get()) {
		var ret string
		return ret
	}
	return *o.CountryId.Get()
}

// GetCountryIdOk returns a tuple with the CountryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetCountryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryId.Get(), o.CountryId.IsSet()
}

// HasCountryId returns a boolean if a field has been set.
func (o *ContactCreateDto) HasCountryId() bool {
	if o != nil && o.CountryId.IsSet() {
		return true
	}

	return false
}

// SetCountryId gets a reference to the given NullableString and assigns it to the CountryId field.
func (o *ContactCreateDto) SetCountryId(v string) {
	o.CountryId.Set(&v)
}
// SetCountryIdNil sets the value for CountryId to be an explicit nil
func (o *ContactCreateDto) SetCountryIdNil() {
	o.CountryId.Set(nil)
}

// UnsetCountryId ensures that no value is present for CountryId, not even an explicit nil
func (o *ContactCreateDto) UnsetCountryId() {
	o.CountryId.Unset()
}

// GetStateId returns the StateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetStateId() string {
	if o == nil || IsNil(o.StateId.Get()) {
		var ret string
		return ret
	}
	return *o.StateId.Get()
}

// GetStateIdOk returns a tuple with the StateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetStateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StateId.Get(), o.StateId.IsSet()
}

// HasStateId returns a boolean if a field has been set.
func (o *ContactCreateDto) HasStateId() bool {
	if o != nil && o.StateId.IsSet() {
		return true
	}

	return false
}

// SetStateId gets a reference to the given NullableString and assigns it to the StateId field.
func (o *ContactCreateDto) SetStateId(v string) {
	o.StateId.Set(&v)
}
// SetStateIdNil sets the value for StateId to be an explicit nil
func (o *ContactCreateDto) SetStateIdNil() {
	o.StateId.Set(nil)
}

// UnsetStateId ensures that no value is present for StateId, not even an explicit nil
func (o *ContactCreateDto) UnsetStateId() {
	o.StateId.Unset()
}

// GetCityId returns the CityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetCityId() string {
	if o == nil || IsNil(o.CityId.Get()) {
		var ret string
		return ret
	}
	return *o.CityId.Get()
}

// GetCityIdOk returns a tuple with the CityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetCityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CityId.Get(), o.CityId.IsSet()
}

// HasCityId returns a boolean if a field has been set.
func (o *ContactCreateDto) HasCityId() bool {
	if o != nil && o.CityId.IsSet() {
		return true
	}

	return false
}

// SetCityId gets a reference to the given NullableString and assigns it to the CityId field.
func (o *ContactCreateDto) SetCityId(v string) {
	o.CityId.Set(&v)
}
// SetCityIdNil sets the value for CityId to be an explicit nil
func (o *ContactCreateDto) SetCityIdNil() {
	o.CityId.Set(nil)
}

// UnsetCityId ensures that no value is present for CityId, not even an explicit nil
func (o *ContactCreateDto) UnsetCityId() {
	o.CityId.Unset()
}

// GetMobilePhone returns the MobilePhone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetMobilePhone() string {
	if o == nil || IsNil(o.MobilePhone.Get()) {
		var ret string
		return ret
	}
	return *o.MobilePhone.Get()
}

// GetMobilePhoneOk returns a tuple with the MobilePhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetMobilePhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MobilePhone.Get(), o.MobilePhone.IsSet()
}

// HasMobilePhone returns a boolean if a field has been set.
func (o *ContactCreateDto) HasMobilePhone() bool {
	if o != nil && o.MobilePhone.IsSet() {
		return true
	}

	return false
}

// SetMobilePhone gets a reference to the given NullableString and assigns it to the MobilePhone field.
func (o *ContactCreateDto) SetMobilePhone(v string) {
	o.MobilePhone.Set(&v)
}
// SetMobilePhoneNil sets the value for MobilePhone to be an explicit nil
func (o *ContactCreateDto) SetMobilePhoneNil() {
	o.MobilePhone.Set(nil)
}

// UnsetMobilePhone ensures that no value is present for MobilePhone, not even an explicit nil
func (o *ContactCreateDto) UnsetMobilePhone() {
	o.MobilePhone.Unset()
}

// GetBusinessPhone returns the BusinessPhone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetBusinessPhone() string {
	if o == nil || IsNil(o.BusinessPhone.Get()) {
		var ret string
		return ret
	}
	return *o.BusinessPhone.Get()
}

// GetBusinessPhoneOk returns a tuple with the BusinessPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetBusinessPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BusinessPhone.Get(), o.BusinessPhone.IsSet()
}

// HasBusinessPhone returns a boolean if a field has been set.
func (o *ContactCreateDto) HasBusinessPhone() bool {
	if o != nil && o.BusinessPhone.IsSet() {
		return true
	}

	return false
}

// SetBusinessPhone gets a reference to the given NullableString and assigns it to the BusinessPhone field.
func (o *ContactCreateDto) SetBusinessPhone(v string) {
	o.BusinessPhone.Set(&v)
}
// SetBusinessPhoneNil sets the value for BusinessPhone to be an explicit nil
func (o *ContactCreateDto) SetBusinessPhoneNil() {
	o.BusinessPhone.Set(nil)
}

// UnsetBusinessPhone ensures that no value is present for BusinessPhone, not even an explicit nil
func (o *ContactCreateDto) UnsetBusinessPhone() {
	o.BusinessPhone.Unset()
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode.Get()) {
		var ret string
		return ret
	}
	return *o.PostalCode.Get()
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PostalCode.Get(), o.PostalCode.IsSet()
}

// HasPostalCode returns a boolean if a field has been set.
func (o *ContactCreateDto) HasPostalCode() bool {
	if o != nil && o.PostalCode.IsSet() {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given NullableString and assigns it to the PostalCode field.
func (o *ContactCreateDto) SetPostalCode(v string) {
	o.PostalCode.Set(&v)
}
// SetPostalCodeNil sets the value for PostalCode to be an explicit nil
func (o *ContactCreateDto) SetPostalCodeNil() {
	o.PostalCode.Set(nil)
}

// UnsetPostalCode ensures that no value is present for PostalCode, not even an explicit nil
func (o *ContactCreateDto) UnsetPostalCode() {
	o.PostalCode.Unset()
}

// GetDuns returns the Duns field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetDuns() string {
	if o == nil || IsNil(o.Duns.Get()) {
		var ret string
		return ret
	}
	return *o.Duns.Get()
}

// GetDunsOk returns a tuple with the Duns field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetDunsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Duns.Get(), o.Duns.IsSet()
}

// HasDuns returns a boolean if a field has been set.
func (o *ContactCreateDto) HasDuns() bool {
	if o != nil && o.Duns.IsSet() {
		return true
	}

	return false
}

// SetDuns gets a reference to the given NullableString and assigns it to the Duns field.
func (o *ContactCreateDto) SetDuns(v string) {
	o.Duns.Set(&v)
}
// SetDunsNil sets the value for Duns to be an explicit nil
func (o *ContactCreateDto) SetDunsNil() {
	o.Duns.Set(nil)
}

// UnsetDuns ensures that no value is present for Duns, not even an explicit nil
func (o *ContactCreateDto) UnsetDuns() {
	o.Duns.Unset()
}

// GetJobTitle returns the JobTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetJobTitle() string {
	if o == nil || IsNil(o.JobTitle.Get()) {
		var ret string
		return ret
	}
	return *o.JobTitle.Get()
}

// GetJobTitleOk returns a tuple with the JobTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetJobTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.JobTitle.Get(), o.JobTitle.IsSet()
}

// HasJobTitle returns a boolean if a field has been set.
func (o *ContactCreateDto) HasJobTitle() bool {
	if o != nil && o.JobTitle.IsSet() {
		return true
	}

	return false
}

// SetJobTitle gets a reference to the given NullableString and assigns it to the JobTitle field.
func (o *ContactCreateDto) SetJobTitle(v string) {
	o.JobTitle.Set(&v)
}
// SetJobTitleNil sets the value for JobTitle to be an explicit nil
func (o *ContactCreateDto) SetJobTitleNil() {
	o.JobTitle.Set(nil)
}

// UnsetJobTitle ensures that no value is present for JobTitle, not even an explicit nil
func (o *ContactCreateDto) UnsetJobTitle() {
	o.JobTitle.Unset()
}

// GetWebUrl returns the WebUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetWebUrl() string {
	if o == nil || IsNil(o.WebUrl.Get()) {
		var ret string
		return ret
	}
	return *o.WebUrl.Get()
}

// GetWebUrlOk returns a tuple with the WebUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetWebUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WebUrl.Get(), o.WebUrl.IsSet()
}

// HasWebUrl returns a boolean if a field has been set.
func (o *ContactCreateDto) HasWebUrl() bool {
	if o != nil && o.WebUrl.IsSet() {
		return true
	}

	return false
}

// SetWebUrl gets a reference to the given NullableString and assigns it to the WebUrl field.
func (o *ContactCreateDto) SetWebUrl(v string) {
	o.WebUrl.Set(&v)
}
// SetWebUrlNil sets the value for WebUrl to be an explicit nil
func (o *ContactCreateDto) SetWebUrlNil() {
	o.WebUrl.Set(nil)
}

// UnsetWebUrl ensures that no value is present for WebUrl, not even an explicit nil
func (o *ContactCreateDto) UnsetWebUrl() {
	o.WebUrl.Unset()
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetCurrencyId() string {
	if o == nil || IsNil(o.CurrencyId.Get()) {
		var ret string
		return ret
	}
	return *o.CurrencyId.Get()
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetCurrencyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrencyId.Get(), o.CurrencyId.IsSet()
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *ContactCreateDto) HasCurrencyId() bool {
	if o != nil && o.CurrencyId.IsSet() {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given NullableString and assigns it to the CurrencyId field.
func (o *ContactCreateDto) SetCurrencyId(v string) {
	o.CurrencyId.Set(&v)
}
// SetCurrencyIdNil sets the value for CurrencyId to be an explicit nil
func (o *ContactCreateDto) SetCurrencyIdNil() {
	o.CurrencyId.Set(nil)
}

// UnsetCurrencyId ensures that no value is present for CurrencyId, not even an explicit nil
func (o *ContactCreateDto) UnsetCurrencyId() {
	o.CurrencyId.Unset()
}

// GetLanguageId returns the LanguageId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetLanguageId() string {
	if o == nil || IsNil(o.LanguageId.Get()) {
		var ret string
		return ret
	}
	return *o.LanguageId.Get()
}

// GetLanguageIdOk returns a tuple with the LanguageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetLanguageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LanguageId.Get(), o.LanguageId.IsSet()
}

// HasLanguageId returns a boolean if a field has been set.
func (o *ContactCreateDto) HasLanguageId() bool {
	if o != nil && o.LanguageId.IsSet() {
		return true
	}

	return false
}

// SetLanguageId gets a reference to the given NullableString and assigns it to the LanguageId field.
func (o *ContactCreateDto) SetLanguageId(v string) {
	o.LanguageId.Set(&v)
}
// SetLanguageIdNil sets the value for LanguageId to be an explicit nil
func (o *ContactCreateDto) SetLanguageIdNil() {
	o.LanguageId.Set(nil)
}

// UnsetLanguageId ensures that no value is present for LanguageId, not even an explicit nil
func (o *ContactCreateDto) UnsetLanguageId() {
	o.LanguageId.Unset()
}

// GetTimezoneId returns the TimezoneId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetTimezoneId() string {
	if o == nil || IsNil(o.TimezoneId.Get()) {
		var ret string
		return ret
	}
	return *o.TimezoneId.Get()
}

// GetTimezoneIdOk returns a tuple with the TimezoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetTimezoneIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimezoneId.Get(), o.TimezoneId.IsSet()
}

// HasTimezoneId returns a boolean if a field has been set.
func (o *ContactCreateDto) HasTimezoneId() bool {
	if o != nil && o.TimezoneId.IsSet() {
		return true
	}

	return false
}

// SetTimezoneId gets a reference to the given NullableString and assigns it to the TimezoneId field.
func (o *ContactCreateDto) SetTimezoneId(v string) {
	o.TimezoneId.Set(&v)
}
// SetTimezoneIdNil sets the value for TimezoneId to be an explicit nil
func (o *ContactCreateDto) SetTimezoneIdNil() {
	o.TimezoneId.Set(nil)
}

// UnsetTimezoneId ensures that no value is present for TimezoneId, not even an explicit nil
func (o *ContactCreateDto) UnsetTimezoneId() {
	o.TimezoneId.Unset()
}

// GetBirthday returns the Birthday field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetBirthday() time.Time {
	if o == nil || IsNil(o.Birthday.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Birthday.Get()
}

// GetBirthdayOk returns a tuple with the Birthday field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetBirthdayOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Birthday.Get(), o.Birthday.IsSet()
}

// HasBirthday returns a boolean if a field has been set.
func (o *ContactCreateDto) HasBirthday() bool {
	if o != nil && o.Birthday.IsSet() {
		return true
	}

	return false
}

// SetBirthday gets a reference to the given NullableTime and assigns it to the Birthday field.
func (o *ContactCreateDto) SetBirthday(v time.Time) {
	o.Birthday.Set(&v)
}
// SetBirthdayNil sets the value for Birthday to be an explicit nil
func (o *ContactCreateDto) SetBirthdayNil() {
	o.Birthday.Set(nil)
}

// UnsetBirthday ensures that no value is present for Birthday, not even an explicit nil
func (o *ContactCreateDto) UnsetBirthday() {
	o.Birthday.Unset()
}

// GetStreetLine1 returns the StreetLine1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetStreetLine1() string {
	if o == nil || IsNil(o.StreetLine1.Get()) {
		var ret string
		return ret
	}
	return *o.StreetLine1.Get()
}

// GetStreetLine1Ok returns a tuple with the StreetLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetStreetLine1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StreetLine1.Get(), o.StreetLine1.IsSet()
}

// HasStreetLine1 returns a boolean if a field has been set.
func (o *ContactCreateDto) HasStreetLine1() bool {
	if o != nil && o.StreetLine1.IsSet() {
		return true
	}

	return false
}

// SetStreetLine1 gets a reference to the given NullableString and assigns it to the StreetLine1 field.
func (o *ContactCreateDto) SetStreetLine1(v string) {
	o.StreetLine1.Set(&v)
}
// SetStreetLine1Nil sets the value for StreetLine1 to be an explicit nil
func (o *ContactCreateDto) SetStreetLine1Nil() {
	o.StreetLine1.Set(nil)
}

// UnsetStreetLine1 ensures that no value is present for StreetLine1, not even an explicit nil
func (o *ContactCreateDto) UnsetStreetLine1() {
	o.StreetLine1.Unset()
}

// GetStreetLine2 returns the StreetLine2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetStreetLine2() string {
	if o == nil || IsNil(o.StreetLine2.Get()) {
		var ret string
		return ret
	}
	return *o.StreetLine2.Get()
}

// GetStreetLine2Ok returns a tuple with the StreetLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetStreetLine2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StreetLine2.Get(), o.StreetLine2.IsSet()
}

// HasStreetLine2 returns a boolean if a field has been set.
func (o *ContactCreateDto) HasStreetLine2() bool {
	if o != nil && o.StreetLine2.IsSet() {
		return true
	}

	return false
}

// SetStreetLine2 gets a reference to the given NullableString and assigns it to the StreetLine2 field.
func (o *ContactCreateDto) SetStreetLine2(v string) {
	o.StreetLine2.Set(&v)
}
// SetStreetLine2Nil sets the value for StreetLine2 to be an explicit nil
func (o *ContactCreateDto) SetStreetLine2Nil() {
	o.StreetLine2.Set(nil)
}

// UnsetStreetLine2 ensures that no value is present for StreetLine2, not even an explicit nil
func (o *ContactCreateDto) UnsetStreetLine2() {
	o.StreetLine2.Unset()
}

// GetGitHubUrl returns the GitHubUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetGitHubUrl() string {
	if o == nil || IsNil(o.GitHubUrl.Get()) {
		var ret string
		return ret
	}
	return *o.GitHubUrl.Get()
}

// GetGitHubUrlOk returns a tuple with the GitHubUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetGitHubUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GitHubUrl.Get(), o.GitHubUrl.IsSet()
}

// HasGitHubUrl returns a boolean if a field has been set.
func (o *ContactCreateDto) HasGitHubUrl() bool {
	if o != nil && o.GitHubUrl.IsSet() {
		return true
	}

	return false
}

// SetGitHubUrl gets a reference to the given NullableString and assigns it to the GitHubUrl field.
func (o *ContactCreateDto) SetGitHubUrl(v string) {
	o.GitHubUrl.Set(&v)
}
// SetGitHubUrlNil sets the value for GitHubUrl to be an explicit nil
func (o *ContactCreateDto) SetGitHubUrlNil() {
	o.GitHubUrl.Set(nil)
}

// UnsetGitHubUrl ensures that no value is present for GitHubUrl, not even an explicit nil
func (o *ContactCreateDto) UnsetGitHubUrl() {
	o.GitHubUrl.Unset()
}

// GetTwitchUrl returns the TwitchUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetTwitchUrl() string {
	if o == nil || IsNil(o.TwitchUrl.Get()) {
		var ret string
		return ret
	}
	return *o.TwitchUrl.Get()
}

// GetTwitchUrlOk returns a tuple with the TwitchUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetTwitchUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TwitchUrl.Get(), o.TwitchUrl.IsSet()
}

// HasTwitchUrl returns a boolean if a field has been set.
func (o *ContactCreateDto) HasTwitchUrl() bool {
	if o != nil && o.TwitchUrl.IsSet() {
		return true
	}

	return false
}

// SetTwitchUrl gets a reference to the given NullableString and assigns it to the TwitchUrl field.
func (o *ContactCreateDto) SetTwitchUrl(v string) {
	o.TwitchUrl.Set(&v)
}
// SetTwitchUrlNil sets the value for TwitchUrl to be an explicit nil
func (o *ContactCreateDto) SetTwitchUrlNil() {
	o.TwitchUrl.Set(nil)
}

// UnsetTwitchUrl ensures that no value is present for TwitchUrl, not even an explicit nil
func (o *ContactCreateDto) UnsetTwitchUrl() {
	o.TwitchUrl.Unset()
}

// GetRedditUrl returns the RedditUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetRedditUrl() string {
	if o == nil || IsNil(o.RedditUrl.Get()) {
		var ret string
		return ret
	}
	return *o.RedditUrl.Get()
}

// GetRedditUrlOk returns a tuple with the RedditUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetRedditUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RedditUrl.Get(), o.RedditUrl.IsSet()
}

// HasRedditUrl returns a boolean if a field has been set.
func (o *ContactCreateDto) HasRedditUrl() bool {
	if o != nil && o.RedditUrl.IsSet() {
		return true
	}

	return false
}

// SetRedditUrl gets a reference to the given NullableString and assigns it to the RedditUrl field.
func (o *ContactCreateDto) SetRedditUrl(v string) {
	o.RedditUrl.Set(&v)
}
// SetRedditUrlNil sets the value for RedditUrl to be an explicit nil
func (o *ContactCreateDto) SetRedditUrlNil() {
	o.RedditUrl.Set(nil)
}

// UnsetRedditUrl ensures that no value is present for RedditUrl, not even an explicit nil
func (o *ContactCreateDto) UnsetRedditUrl() {
	o.RedditUrl.Unset()
}

// GetTikTokUrl returns the TikTokUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetTikTokUrl() string {
	if o == nil || IsNil(o.TikTokUrl.Get()) {
		var ret string
		return ret
	}
	return *o.TikTokUrl.Get()
}

// GetTikTokUrlOk returns a tuple with the TikTokUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetTikTokUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TikTokUrl.Get(), o.TikTokUrl.IsSet()
}

// HasTikTokUrl returns a boolean if a field has been set.
func (o *ContactCreateDto) HasTikTokUrl() bool {
	if o != nil && o.TikTokUrl.IsSet() {
		return true
	}

	return false
}

// SetTikTokUrl gets a reference to the given NullableString and assigns it to the TikTokUrl field.
func (o *ContactCreateDto) SetTikTokUrl(v string) {
	o.TikTokUrl.Set(&v)
}
// SetTikTokUrlNil sets the value for TikTokUrl to be an explicit nil
func (o *ContactCreateDto) SetTikTokUrlNil() {
	o.TikTokUrl.Set(nil)
}

// UnsetTikTokUrl ensures that no value is present for TikTokUrl, not even an explicit nil
func (o *ContactCreateDto) UnsetTikTokUrl() {
	o.TikTokUrl.Unset()
}

// GetWebsiteUrl returns the WebsiteUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetWebsiteUrl() string {
	if o == nil || IsNil(o.WebsiteUrl.Get()) {
		var ret string
		return ret
	}
	return *o.WebsiteUrl.Get()
}

// GetWebsiteUrlOk returns a tuple with the WebsiteUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetWebsiteUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WebsiteUrl.Get(), o.WebsiteUrl.IsSet()
}

// HasWebsiteUrl returns a boolean if a field has been set.
func (o *ContactCreateDto) HasWebsiteUrl() bool {
	if o != nil && o.WebsiteUrl.IsSet() {
		return true
	}

	return false
}

// SetWebsiteUrl gets a reference to the given NullableString and assigns it to the WebsiteUrl field.
func (o *ContactCreateDto) SetWebsiteUrl(v string) {
	o.WebsiteUrl.Set(&v)
}
// SetWebsiteUrlNil sets the value for WebsiteUrl to be an explicit nil
func (o *ContactCreateDto) SetWebsiteUrlNil() {
	o.WebsiteUrl.Set(nil)
}

// UnsetWebsiteUrl ensures that no value is present for WebsiteUrl, not even an explicit nil
func (o *ContactCreateDto) UnsetWebsiteUrl() {
	o.WebsiteUrl.Unset()
}

// GetTwitterUrl returns the TwitterUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetTwitterUrl() string {
	if o == nil || IsNil(o.TwitterUrl.Get()) {
		var ret string
		return ret
	}
	return *o.TwitterUrl.Get()
}

// GetTwitterUrlOk returns a tuple with the TwitterUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetTwitterUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TwitterUrl.Get(), o.TwitterUrl.IsSet()
}

// HasTwitterUrl returns a boolean if a field has been set.
func (o *ContactCreateDto) HasTwitterUrl() bool {
	if o != nil && o.TwitterUrl.IsSet() {
		return true
	}

	return false
}

// SetTwitterUrl gets a reference to the given NullableString and assigns it to the TwitterUrl field.
func (o *ContactCreateDto) SetTwitterUrl(v string) {
	o.TwitterUrl.Set(&v)
}
// SetTwitterUrlNil sets the value for TwitterUrl to be an explicit nil
func (o *ContactCreateDto) SetTwitterUrlNil() {
	o.TwitterUrl.Set(nil)
}

// UnsetTwitterUrl ensures that no value is present for TwitterUrl, not even an explicit nil
func (o *ContactCreateDto) UnsetTwitterUrl() {
	o.TwitterUrl.Unset()
}

// GetFacebookUrl returns the FacebookUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetFacebookUrl() string {
	if o == nil || IsNil(o.FacebookUrl.Get()) {
		var ret string
		return ret
	}
	return *o.FacebookUrl.Get()
}

// GetFacebookUrlOk returns a tuple with the FacebookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetFacebookUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FacebookUrl.Get(), o.FacebookUrl.IsSet()
}

// HasFacebookUrl returns a boolean if a field has been set.
func (o *ContactCreateDto) HasFacebookUrl() bool {
	if o != nil && o.FacebookUrl.IsSet() {
		return true
	}

	return false
}

// SetFacebookUrl gets a reference to the given NullableString and assigns it to the FacebookUrl field.
func (o *ContactCreateDto) SetFacebookUrl(v string) {
	o.FacebookUrl.Set(&v)
}
// SetFacebookUrlNil sets the value for FacebookUrl to be an explicit nil
func (o *ContactCreateDto) SetFacebookUrlNil() {
	o.FacebookUrl.Set(nil)
}

// UnsetFacebookUrl ensures that no value is present for FacebookUrl, not even an explicit nil
func (o *ContactCreateDto) UnsetFacebookUrl() {
	o.FacebookUrl.Unset()
}

// GetYouTubeUrl returns the YouTubeUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetYouTubeUrl() string {
	if o == nil || IsNil(o.YouTubeUrl.Get()) {
		var ret string
		return ret
	}
	return *o.YouTubeUrl.Get()
}

// GetYouTubeUrlOk returns a tuple with the YouTubeUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetYouTubeUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.YouTubeUrl.Get(), o.YouTubeUrl.IsSet()
}

// HasYouTubeUrl returns a boolean if a field has been set.
func (o *ContactCreateDto) HasYouTubeUrl() bool {
	if o != nil && o.YouTubeUrl.IsSet() {
		return true
	}

	return false
}

// SetYouTubeUrl gets a reference to the given NullableString and assigns it to the YouTubeUrl field.
func (o *ContactCreateDto) SetYouTubeUrl(v string) {
	o.YouTubeUrl.Set(&v)
}
// SetYouTubeUrlNil sets the value for YouTubeUrl to be an explicit nil
func (o *ContactCreateDto) SetYouTubeUrlNil() {
	o.YouTubeUrl.Set(nil)
}

// UnsetYouTubeUrl ensures that no value is present for YouTubeUrl, not even an explicit nil
func (o *ContactCreateDto) UnsetYouTubeUrl() {
	o.YouTubeUrl.Unset()
}

// GetLinkedInUrl returns the LinkedInUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetLinkedInUrl() string {
	if o == nil || IsNil(o.LinkedInUrl.Get()) {
		var ret string
		return ret
	}
	return *o.LinkedInUrl.Get()
}

// GetLinkedInUrlOk returns a tuple with the LinkedInUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetLinkedInUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LinkedInUrl.Get(), o.LinkedInUrl.IsSet()
}

// HasLinkedInUrl returns a boolean if a field has been set.
func (o *ContactCreateDto) HasLinkedInUrl() bool {
	if o != nil && o.LinkedInUrl.IsSet() {
		return true
	}

	return false
}

// SetLinkedInUrl gets a reference to the given NullableString and assigns it to the LinkedInUrl field.
func (o *ContactCreateDto) SetLinkedInUrl(v string) {
	o.LinkedInUrl.Set(&v)
}
// SetLinkedInUrlNil sets the value for LinkedInUrl to be an explicit nil
func (o *ContactCreateDto) SetLinkedInUrlNil() {
	o.LinkedInUrl.Set(nil)
}

// UnsetLinkedInUrl ensures that no value is present for LinkedInUrl, not even an explicit nil
func (o *ContactCreateDto) UnsetLinkedInUrl() {
	o.LinkedInUrl.Unset()
}

// GetInstagramUrl returns the InstagramUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetInstagramUrl() string {
	if o == nil || IsNil(o.InstagramUrl.Get()) {
		var ret string
		return ret
	}
	return *o.InstagramUrl.Get()
}

// GetInstagramUrlOk returns a tuple with the InstagramUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetInstagramUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstagramUrl.Get(), o.InstagramUrl.IsSet()
}

// HasInstagramUrl returns a boolean if a field has been set.
func (o *ContactCreateDto) HasInstagramUrl() bool {
	if o != nil && o.InstagramUrl.IsSet() {
		return true
	}

	return false
}

// SetInstagramUrl gets a reference to the given NullableString and assigns it to the InstagramUrl field.
func (o *ContactCreateDto) SetInstagramUrl(v string) {
	o.InstagramUrl.Set(&v)
}
// SetInstagramUrlNil sets the value for InstagramUrl to be an explicit nil
func (o *ContactCreateDto) SetInstagramUrlNil() {
	o.InstagramUrl.Set(nil)
}

// UnsetInstagramUrl ensures that no value is present for InstagramUrl, not even an explicit nil
func (o *ContactCreateDto) UnsetInstagramUrl() {
	o.InstagramUrl.Unset()
}

// GetGithubUsername returns the GithubUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetGithubUsername() string {
	if o == nil || IsNil(o.GithubUsername.Get()) {
		var ret string
		return ret
	}
	return *o.GithubUsername.Get()
}

// GetGithubUsernameOk returns a tuple with the GithubUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetGithubUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GithubUsername.Get(), o.GithubUsername.IsSet()
}

// HasGithubUsername returns a boolean if a field has been set.
func (o *ContactCreateDto) HasGithubUsername() bool {
	if o != nil && o.GithubUsername.IsSet() {
		return true
	}

	return false
}

// SetGithubUsername gets a reference to the given NullableString and assigns it to the GithubUsername field.
func (o *ContactCreateDto) SetGithubUsername(v string) {
	o.GithubUsername.Set(&v)
}
// SetGithubUsernameNil sets the value for GithubUsername to be an explicit nil
func (o *ContactCreateDto) SetGithubUsernameNil() {
	o.GithubUsername.Set(nil)
}

// UnsetGithubUsername ensures that no value is present for GithubUsername, not even an explicit nil
func (o *ContactCreateDto) UnsetGithubUsername() {
	o.GithubUsername.Unset()
}

// GetInstagramUsername returns the InstagramUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetInstagramUsername() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.InstagramUsername
}

// GetInstagramUsernameOk returns a tuple with the InstagramUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetInstagramUsernameOk() (*interface{}, bool) {
	if o == nil || IsNil(o.InstagramUsername) {
		return nil, false
	}
	return &o.InstagramUsername, true
}

// HasInstagramUsername returns a boolean if a field has been set.
func (o *ContactCreateDto) HasInstagramUsername() bool {
	if o != nil && !IsNil(o.InstagramUsername) {
		return true
	}

	return false
}

// SetInstagramUsername gets a reference to the given interface{} and assigns it to the InstagramUsername field.
func (o *ContactCreateDto) SetInstagramUsername(v interface{}) {
	o.InstagramUsername = v
}

// GetTikTokUsername returns the TikTokUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetTikTokUsername() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.TikTokUsername
}

// GetTikTokUsernameOk returns a tuple with the TikTokUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetTikTokUsernameOk() (*interface{}, bool) {
	if o == nil || IsNil(o.TikTokUsername) {
		return nil, false
	}
	return &o.TikTokUsername, true
}

// HasTikTokUsername returns a boolean if a field has been set.
func (o *ContactCreateDto) HasTikTokUsername() bool {
	if o != nil && !IsNil(o.TikTokUsername) {
		return true
	}

	return false
}

// SetTikTokUsername gets a reference to the given interface{} and assigns it to the TikTokUsername field.
func (o *ContactCreateDto) SetTikTokUsername(v interface{}) {
	o.TikTokUsername = v
}

// GetStackExchangeUrl returns the StackExchangeUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetStackExchangeUrl() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.StackExchangeUrl
}

// GetStackExchangeUrlOk returns a tuple with the StackExchangeUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetStackExchangeUrlOk() (*interface{}, bool) {
	if o == nil || IsNil(o.StackExchangeUrl) {
		return nil, false
	}
	return &o.StackExchangeUrl, true
}

// HasStackExchangeUrl returns a boolean if a field has been set.
func (o *ContactCreateDto) HasStackExchangeUrl() bool {
	if o != nil && !IsNil(o.StackExchangeUrl) {
		return true
	}

	return false
}

// SetStackExchangeUrl gets a reference to the given interface{} and assigns it to the StackExchangeUrl field.
func (o *ContactCreateDto) SetStackExchangeUrl(v interface{}) {
	o.StackExchangeUrl = v
}

// GetStackOverflowUrl returns the StackOverflowUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetStackOverflowUrl() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.StackOverflowUrl
}

// GetStackOverflowUrlOk returns a tuple with the StackOverflowUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetStackOverflowUrlOk() (*interface{}, bool) {
	if o == nil || IsNil(o.StackOverflowUrl) {
		return nil, false
	}
	return &o.StackOverflowUrl, true
}

// HasStackOverflowUrl returns a boolean if a field has been set.
func (o *ContactCreateDto) HasStackOverflowUrl() bool {
	if o != nil && !IsNil(o.StackOverflowUrl) {
		return true
	}

	return false
}

// SetStackOverflowUrl gets a reference to the given interface{} and assigns it to the StackOverflowUrl field.
func (o *ContactCreateDto) SetStackOverflowUrl(v interface{}) {
	o.StackOverflowUrl = v
}

// GetParentContactId returns the ParentContactId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCreateDto) GetParentContactId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ParentContactId
}

// GetParentContactIdOk returns a tuple with the ParentContactId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCreateDto) GetParentContactIdOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ParentContactId) {
		return nil, false
	}
	return &o.ParentContactId, true
}

// HasParentContactId returns a boolean if a field has been set.
func (o *ContactCreateDto) HasParentContactId() bool {
	if o != nil && !IsNil(o.ParentContactId) {
		return true
	}

	return false
}

// SetParentContactId gets a reference to the given interface{} and assigns it to the ParentContactId field.
func (o *ContactCreateDto) SetParentContactId(v interface{}) {
	o.ParentContactId = v
}

func (o ContactCreateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContactCreateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	toSerialize["tenantId"] = o.TenantId
	toSerialize["type"] = o.Type
	toSerialize["firstName"] = o.FirstName
	if o.LastName.IsSet() {
		toSerialize["lastName"] = o.LastName.Get()
	}
	toSerialize["email"] = o.Email
	if o.TaxId.IsSet() {
		toSerialize["taxId"] = o.TaxId.Get()
	}
	if o.PrimaryContactId.IsSet() {
		toSerialize["primaryContactId"] = o.PrimaryContactId.Get()
	}
	if o.QualifiedName.IsSet() {
		toSerialize["qualifiedName"] = o.QualifiedName.Get()
	}
	if o.About.IsSet() {
		toSerialize["about"] = o.About.Get()
	}
	if o.CountryId.IsSet() {
		toSerialize["countryId"] = o.CountryId.Get()
	}
	if o.StateId.IsSet() {
		toSerialize["stateId"] = o.StateId.Get()
	}
	if o.CityId.IsSet() {
		toSerialize["cityId"] = o.CityId.Get()
	}
	if o.MobilePhone.IsSet() {
		toSerialize["mobilePhone"] = o.MobilePhone.Get()
	}
	if o.BusinessPhone.IsSet() {
		toSerialize["businessPhone"] = o.BusinessPhone.Get()
	}
	if o.PostalCode.IsSet() {
		toSerialize["postalCode"] = o.PostalCode.Get()
	}
	if o.Duns.IsSet() {
		toSerialize["duns"] = o.Duns.Get()
	}
	if o.JobTitle.IsSet() {
		toSerialize["jobTitle"] = o.JobTitle.Get()
	}
	if o.WebUrl.IsSet() {
		toSerialize["webUrl"] = o.WebUrl.Get()
	}
	if o.CurrencyId.IsSet() {
		toSerialize["currencyId"] = o.CurrencyId.Get()
	}
	if o.LanguageId.IsSet() {
		toSerialize["languageId"] = o.LanguageId.Get()
	}
	if o.TimezoneId.IsSet() {
		toSerialize["timezoneId"] = o.TimezoneId.Get()
	}
	if o.Birthday.IsSet() {
		toSerialize["birthday"] = o.Birthday.Get()
	}
	if o.StreetLine1.IsSet() {
		toSerialize["streetLine1"] = o.StreetLine1.Get()
	}
	if o.StreetLine2.IsSet() {
		toSerialize["streetLine2"] = o.StreetLine2.Get()
	}
	if o.GitHubUrl.IsSet() {
		toSerialize["gitHubUrl"] = o.GitHubUrl.Get()
	}
	if o.TwitchUrl.IsSet() {
		toSerialize["twitchUrl"] = o.TwitchUrl.Get()
	}
	if o.RedditUrl.IsSet() {
		toSerialize["redditUrl"] = o.RedditUrl.Get()
	}
	if o.TikTokUrl.IsSet() {
		toSerialize["tikTokUrl"] = o.TikTokUrl.Get()
	}
	if o.WebsiteUrl.IsSet() {
		toSerialize["websiteUrl"] = o.WebsiteUrl.Get()
	}
	if o.TwitterUrl.IsSet() {
		toSerialize["twitterUrl"] = o.TwitterUrl.Get()
	}
	if o.FacebookUrl.IsSet() {
		toSerialize["facebookUrl"] = o.FacebookUrl.Get()
	}
	if o.YouTubeUrl.IsSet() {
		toSerialize["youTubeUrl"] = o.YouTubeUrl.Get()
	}
	if o.LinkedInUrl.IsSet() {
		toSerialize["linkedInUrl"] = o.LinkedInUrl.Get()
	}
	if o.InstagramUrl.IsSet() {
		toSerialize["instagramUrl"] = o.InstagramUrl.Get()
	}
	if o.GithubUsername.IsSet() {
		toSerialize["githubUsername"] = o.GithubUsername.Get()
	}
	if o.InstagramUsername != nil {
		toSerialize["instagramUsername"] = o.InstagramUsername
	}
	if o.TikTokUsername != nil {
		toSerialize["tikTokUsername"] = o.TikTokUsername
	}
	if o.StackExchangeUrl != nil {
		toSerialize["stackExchangeUrl"] = o.StackExchangeUrl
	}
	if o.StackOverflowUrl != nil {
		toSerialize["stackOverflowUrl"] = o.StackOverflowUrl
	}
	if o.ParentContactId != nil {
		toSerialize["parentContactId"] = o.ParentContactId
	}
	return toSerialize, nil
}

func (o *ContactCreateDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tenantId",
		"type",
		"firstName",
		"email",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varContactCreateDto := _ContactCreateDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varContactCreateDto)

	if err != nil {
		return err
	}

	*o = ContactCreateDto(varContactCreateDto)

	return err
}

type NullableContactCreateDto struct {
	value *ContactCreateDto
	isSet bool
}

func (v NullableContactCreateDto) Get() *ContactCreateDto {
	return v.value
}

func (v *NullableContactCreateDto) Set(val *ContactCreateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableContactCreateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableContactCreateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContactCreateDto(val *ContactCreateDto) *NullableContactCreateDto {
	return &NullableContactCreateDto{value: val, isSet: true}
}

func (v NullableContactCreateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContactCreateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


