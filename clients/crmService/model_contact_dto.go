/*
CrmService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ContactDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContactDto{}

// ContactDto struct for ContactDto
type ContactDto struct {
	Id NullableString `json:"id,omitempty"`
	Timestamp NullableTime `json:"timestamp,omitempty"`
	QualifiedName NullableString `json:"qualifiedName,omitempty"`
	TenantId NullableString `json:"tenantId,omitempty"`
	Type *int32 `json:"type,omitempty"`
	PublicName NullableString `json:"publicName,omitempty"`
	FirstName NullableString `json:"firstName,omitempty"`
	LastName NullableString `json:"lastName,omitempty"`
	JobTitle NullableString `json:"jobTitle,omitempty"`
	CoverUrl NullableString `json:"coverUrl,omitempty"`
	AvatarUrl NullableString `json:"avatarUrl,omitempty"`
	CountryId NullableString `json:"countryId,omitempty"`
	TimezoneId NullableString `json:"timezoneId,omitempty"`
	LanguageId NullableString `json:"languageId,omitempty"`
	SocialProfileId NullableString `json:"socialProfileId,omitempty"`
	WebUrl NullableString `json:"webUrl,omitempty"`
	GitHubUrl NullableString `json:"gitHubUrl,omitempty"`
	TwitchUrl NullableString `json:"twitchUrl,omitempty"`
	RedditUrl NullableString `json:"redditUrl,omitempty"`
	TikTokUrl NullableString `json:"tikTokUrl,omitempty"`
	WebsiteUrl NullableString `json:"websiteUrl,omitempty"`
	TwitterUrl NullableString `json:"twitterUrl,omitempty"`
	FacebookUrl NullableString `json:"facebookUrl,omitempty"`
	YouTubeUrl NullableString `json:"youTubeUrl,omitempty"`
	LinkedInUrl NullableString `json:"linkedInUrl,omitempty"`
	InstagramUrl NullableString `json:"instagramUrl,omitempty"`
	GithubUsername NullableString `json:"githubUsername,omitempty"`
	Duns NullableString `json:"duns,omitempty"`
	TaxId NullableString `json:"taxId,omitempty"`
	Email NullableString `json:"email,omitempty"`
	About NullableString `json:"about,omitempty"`
	Street NullableString `json:"street,omitempty"`
	CartId NullableString `json:"cartId,omitempty"`
	CityId NullableString `json:"cityId,omitempty"`
	ZipCode NullableString `json:"zipCode,omitempty"`
	StateId NullableString `json:"stateId,omitempty"`
	WalletId NullableString `json:"walletId,omitempty"`
	FaxNumber NullableString `json:"faxNumber,omitempty"`
	PostalCode NullableString `json:"postalCode,omitempty"`
	CurrencyId NullableString `json:"currencyId,omitempty"`
	StreetLine1 NullableString `json:"streetLine1,omitempty"`
	StreetLine2 NullableString `json:"streetLine2,omitempty"`
	TerritoryId NullableString `json:"territoryId,omitempty"`
	MobilePhone NullableString `json:"mobilePhone,omitempty"`
	EnrollmentId NullableString `json:"enrollmentId,omitempty"`
	AnnualRevenue NullableString `json:"annualRevenue,omitempty"`
	RelatedUserId NullableString `json:"relatedUserId,omitempty"`
	BusinessPhone NullableString `json:"businessPhone,omitempty"`
	OwnerContactId NullableString `json:"ownerContactId,omitempty"`
	RelatedTenantId NullableString `json:"relatedTenantId,omitempty"`
	ActivityFeedId NullableString `json:"activityFeedId,omitempty"`
	ParentContactId NullableString `json:"parentContactId,omitempty"`
	IdentityProvider NullableString `json:"identityProvider,omitempty"`
	PartnerProfileId NullableString `json:"partnerProfileId,omitempty"`
	PrimaryContactId NullableString `json:"primaryContactId,omitempty"`
	ActiveDirectoryId NullableString `json:"activeDirectoryId,omitempty"`
	IdentityProviderAccessToken NullableString `json:"identityProviderAccessToken,omitempty"`
	Birthday NullableTime `json:"birthday,omitempty"`
}

// NewContactDto instantiates a new ContactDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContactDto() *ContactDto {
	this := ContactDto{}
	return &this
}

// NewContactDtoWithDefaults instantiates a new ContactDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactDtoWithDefaults() *ContactDto {
	this := ContactDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ContactDto) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *ContactDto) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *ContactDto) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ContactDto) UnsetId() {
	o.Id.Unset()
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp.Get()
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timestamp.Get(), o.Timestamp.IsSet()
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ContactDto) HasTimestamp() bool {
	if o != nil && o.Timestamp.IsSet() {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given NullableTime and assigns it to the Timestamp field.
func (o *ContactDto) SetTimestamp(v time.Time) {
	o.Timestamp.Set(&v)
}
// SetTimestampNil sets the value for Timestamp to be an explicit nil
func (o *ContactDto) SetTimestampNil() {
	o.Timestamp.Set(nil)
}

// UnsetTimestamp ensures that no value is present for Timestamp, not even an explicit nil
func (o *ContactDto) UnsetTimestamp() {
	o.Timestamp.Unset()
}

// GetQualifiedName returns the QualifiedName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetQualifiedName() string {
	if o == nil || IsNil(o.QualifiedName.Get()) {
		var ret string
		return ret
	}
	return *o.QualifiedName.Get()
}

// GetQualifiedNameOk returns a tuple with the QualifiedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetQualifiedNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.QualifiedName.Get(), o.QualifiedName.IsSet()
}

// HasQualifiedName returns a boolean if a field has been set.
func (o *ContactDto) HasQualifiedName() bool {
	if o != nil && o.QualifiedName.IsSet() {
		return true
	}

	return false
}

// SetQualifiedName gets a reference to the given NullableString and assigns it to the QualifiedName field.
func (o *ContactDto) SetQualifiedName(v string) {
	o.QualifiedName.Set(&v)
}
// SetQualifiedNameNil sets the value for QualifiedName to be an explicit nil
func (o *ContactDto) SetQualifiedNameNil() {
	o.QualifiedName.Set(nil)
}

// UnsetQualifiedName ensures that no value is present for QualifiedName, not even an explicit nil
func (o *ContactDto) UnsetQualifiedName() {
	o.QualifiedName.Unset()
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *ContactDto) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *ContactDto) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *ContactDto) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *ContactDto) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ContactDto) GetType() int32 {
	if o == nil || IsNil(o.Type) {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactDto) GetTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ContactDto) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *ContactDto) SetType(v int32) {
	o.Type = &v
}

// GetPublicName returns the PublicName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetPublicName() string {
	if o == nil || IsNil(o.PublicName.Get()) {
		var ret string
		return ret
	}
	return *o.PublicName.Get()
}

// GetPublicNameOk returns a tuple with the PublicName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetPublicNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PublicName.Get(), o.PublicName.IsSet()
}

// HasPublicName returns a boolean if a field has been set.
func (o *ContactDto) HasPublicName() bool {
	if o != nil && o.PublicName.IsSet() {
		return true
	}

	return false
}

// SetPublicName gets a reference to the given NullableString and assigns it to the PublicName field.
func (o *ContactDto) SetPublicName(v string) {
	o.PublicName.Set(&v)
}
// SetPublicNameNil sets the value for PublicName to be an explicit nil
func (o *ContactDto) SetPublicNameNil() {
	o.PublicName.Set(nil)
}

// UnsetPublicName ensures that no value is present for PublicName, not even an explicit nil
func (o *ContactDto) UnsetPublicName() {
	o.PublicName.Unset()
}

// GetFirstName returns the FirstName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetFirstName() string {
	if o == nil || IsNil(o.FirstName.Get()) {
		var ret string
		return ret
	}
	return *o.FirstName.Get()
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstName.Get(), o.FirstName.IsSet()
}

// HasFirstName returns a boolean if a field has been set.
func (o *ContactDto) HasFirstName() bool {
	if o != nil && o.FirstName.IsSet() {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given NullableString and assigns it to the FirstName field.
func (o *ContactDto) SetFirstName(v string) {
	o.FirstName.Set(&v)
}
// SetFirstNameNil sets the value for FirstName to be an explicit nil
func (o *ContactDto) SetFirstNameNil() {
	o.FirstName.Set(nil)
}

// UnsetFirstName ensures that no value is present for FirstName, not even an explicit nil
func (o *ContactDto) UnsetFirstName() {
	o.FirstName.Unset()
}

// GetLastName returns the LastName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetLastName() string {
	if o == nil || IsNil(o.LastName.Get()) {
		var ret string
		return ret
	}
	return *o.LastName.Get()
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastName.Get(), o.LastName.IsSet()
}

// HasLastName returns a boolean if a field has been set.
func (o *ContactDto) HasLastName() bool {
	if o != nil && o.LastName.IsSet() {
		return true
	}

	return false
}

// SetLastName gets a reference to the given NullableString and assigns it to the LastName field.
func (o *ContactDto) SetLastName(v string) {
	o.LastName.Set(&v)
}
// SetLastNameNil sets the value for LastName to be an explicit nil
func (o *ContactDto) SetLastNameNil() {
	o.LastName.Set(nil)
}

// UnsetLastName ensures that no value is present for LastName, not even an explicit nil
func (o *ContactDto) UnsetLastName() {
	o.LastName.Unset()
}

// GetJobTitle returns the JobTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetJobTitle() string {
	if o == nil || IsNil(o.JobTitle.Get()) {
		var ret string
		return ret
	}
	return *o.JobTitle.Get()
}

// GetJobTitleOk returns a tuple with the JobTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetJobTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.JobTitle.Get(), o.JobTitle.IsSet()
}

// HasJobTitle returns a boolean if a field has been set.
func (o *ContactDto) HasJobTitle() bool {
	if o != nil && o.JobTitle.IsSet() {
		return true
	}

	return false
}

// SetJobTitle gets a reference to the given NullableString and assigns it to the JobTitle field.
func (o *ContactDto) SetJobTitle(v string) {
	o.JobTitle.Set(&v)
}
// SetJobTitleNil sets the value for JobTitle to be an explicit nil
func (o *ContactDto) SetJobTitleNil() {
	o.JobTitle.Set(nil)
}

// UnsetJobTitle ensures that no value is present for JobTitle, not even an explicit nil
func (o *ContactDto) UnsetJobTitle() {
	o.JobTitle.Unset()
}

// GetCoverUrl returns the CoverUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetCoverUrl() string {
	if o == nil || IsNil(o.CoverUrl.Get()) {
		var ret string
		return ret
	}
	return *o.CoverUrl.Get()
}

// GetCoverUrlOk returns a tuple with the CoverUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetCoverUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CoverUrl.Get(), o.CoverUrl.IsSet()
}

// HasCoverUrl returns a boolean if a field has been set.
func (o *ContactDto) HasCoverUrl() bool {
	if o != nil && o.CoverUrl.IsSet() {
		return true
	}

	return false
}

// SetCoverUrl gets a reference to the given NullableString and assigns it to the CoverUrl field.
func (o *ContactDto) SetCoverUrl(v string) {
	o.CoverUrl.Set(&v)
}
// SetCoverUrlNil sets the value for CoverUrl to be an explicit nil
func (o *ContactDto) SetCoverUrlNil() {
	o.CoverUrl.Set(nil)
}

// UnsetCoverUrl ensures that no value is present for CoverUrl, not even an explicit nil
func (o *ContactDto) UnsetCoverUrl() {
	o.CoverUrl.Unset()
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetAvatarUrl() string {
	if o == nil || IsNil(o.AvatarUrl.Get()) {
		var ret string
		return ret
	}
	return *o.AvatarUrl.Get()
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetAvatarUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AvatarUrl.Get(), o.AvatarUrl.IsSet()
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *ContactDto) HasAvatarUrl() bool {
	if o != nil && o.AvatarUrl.IsSet() {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given NullableString and assigns it to the AvatarUrl field.
func (o *ContactDto) SetAvatarUrl(v string) {
	o.AvatarUrl.Set(&v)
}
// SetAvatarUrlNil sets the value for AvatarUrl to be an explicit nil
func (o *ContactDto) SetAvatarUrlNil() {
	o.AvatarUrl.Set(nil)
}

// UnsetAvatarUrl ensures that no value is present for AvatarUrl, not even an explicit nil
func (o *ContactDto) UnsetAvatarUrl() {
	o.AvatarUrl.Unset()
}

// GetCountryId returns the CountryId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetCountryId() string {
	if o == nil || IsNil(o.CountryId.Get()) {
		var ret string
		return ret
	}
	return *o.CountryId.Get()
}

// GetCountryIdOk returns a tuple with the CountryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetCountryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryId.Get(), o.CountryId.IsSet()
}

// HasCountryId returns a boolean if a field has been set.
func (o *ContactDto) HasCountryId() bool {
	if o != nil && o.CountryId.IsSet() {
		return true
	}

	return false
}

// SetCountryId gets a reference to the given NullableString and assigns it to the CountryId field.
func (o *ContactDto) SetCountryId(v string) {
	o.CountryId.Set(&v)
}
// SetCountryIdNil sets the value for CountryId to be an explicit nil
func (o *ContactDto) SetCountryIdNil() {
	o.CountryId.Set(nil)
}

// UnsetCountryId ensures that no value is present for CountryId, not even an explicit nil
func (o *ContactDto) UnsetCountryId() {
	o.CountryId.Unset()
}

// GetTimezoneId returns the TimezoneId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetTimezoneId() string {
	if o == nil || IsNil(o.TimezoneId.Get()) {
		var ret string
		return ret
	}
	return *o.TimezoneId.Get()
}

// GetTimezoneIdOk returns a tuple with the TimezoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetTimezoneIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimezoneId.Get(), o.TimezoneId.IsSet()
}

// HasTimezoneId returns a boolean if a field has been set.
func (o *ContactDto) HasTimezoneId() bool {
	if o != nil && o.TimezoneId.IsSet() {
		return true
	}

	return false
}

// SetTimezoneId gets a reference to the given NullableString and assigns it to the TimezoneId field.
func (o *ContactDto) SetTimezoneId(v string) {
	o.TimezoneId.Set(&v)
}
// SetTimezoneIdNil sets the value for TimezoneId to be an explicit nil
func (o *ContactDto) SetTimezoneIdNil() {
	o.TimezoneId.Set(nil)
}

// UnsetTimezoneId ensures that no value is present for TimezoneId, not even an explicit nil
func (o *ContactDto) UnsetTimezoneId() {
	o.TimezoneId.Unset()
}

// GetLanguageId returns the LanguageId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetLanguageId() string {
	if o == nil || IsNil(o.LanguageId.Get()) {
		var ret string
		return ret
	}
	return *o.LanguageId.Get()
}

// GetLanguageIdOk returns a tuple with the LanguageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetLanguageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LanguageId.Get(), o.LanguageId.IsSet()
}

// HasLanguageId returns a boolean if a field has been set.
func (o *ContactDto) HasLanguageId() bool {
	if o != nil && o.LanguageId.IsSet() {
		return true
	}

	return false
}

// SetLanguageId gets a reference to the given NullableString and assigns it to the LanguageId field.
func (o *ContactDto) SetLanguageId(v string) {
	o.LanguageId.Set(&v)
}
// SetLanguageIdNil sets the value for LanguageId to be an explicit nil
func (o *ContactDto) SetLanguageIdNil() {
	o.LanguageId.Set(nil)
}

// UnsetLanguageId ensures that no value is present for LanguageId, not even an explicit nil
func (o *ContactDto) UnsetLanguageId() {
	o.LanguageId.Unset()
}

// GetSocialProfileId returns the SocialProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetSocialProfileId() string {
	if o == nil || IsNil(o.SocialProfileId.Get()) {
		var ret string
		return ret
	}
	return *o.SocialProfileId.Get()
}

// GetSocialProfileIdOk returns a tuple with the SocialProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetSocialProfileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SocialProfileId.Get(), o.SocialProfileId.IsSet()
}

// HasSocialProfileId returns a boolean if a field has been set.
func (o *ContactDto) HasSocialProfileId() bool {
	if o != nil && o.SocialProfileId.IsSet() {
		return true
	}

	return false
}

// SetSocialProfileId gets a reference to the given NullableString and assigns it to the SocialProfileId field.
func (o *ContactDto) SetSocialProfileId(v string) {
	o.SocialProfileId.Set(&v)
}
// SetSocialProfileIdNil sets the value for SocialProfileId to be an explicit nil
func (o *ContactDto) SetSocialProfileIdNil() {
	o.SocialProfileId.Set(nil)
}

// UnsetSocialProfileId ensures that no value is present for SocialProfileId, not even an explicit nil
func (o *ContactDto) UnsetSocialProfileId() {
	o.SocialProfileId.Unset()
}

// GetWebUrl returns the WebUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetWebUrl() string {
	if o == nil || IsNil(o.WebUrl.Get()) {
		var ret string
		return ret
	}
	return *o.WebUrl.Get()
}

// GetWebUrlOk returns a tuple with the WebUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetWebUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WebUrl.Get(), o.WebUrl.IsSet()
}

// HasWebUrl returns a boolean if a field has been set.
func (o *ContactDto) HasWebUrl() bool {
	if o != nil && o.WebUrl.IsSet() {
		return true
	}

	return false
}

// SetWebUrl gets a reference to the given NullableString and assigns it to the WebUrl field.
func (o *ContactDto) SetWebUrl(v string) {
	o.WebUrl.Set(&v)
}
// SetWebUrlNil sets the value for WebUrl to be an explicit nil
func (o *ContactDto) SetWebUrlNil() {
	o.WebUrl.Set(nil)
}

// UnsetWebUrl ensures that no value is present for WebUrl, not even an explicit nil
func (o *ContactDto) UnsetWebUrl() {
	o.WebUrl.Unset()
}

// GetGitHubUrl returns the GitHubUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetGitHubUrl() string {
	if o == nil || IsNil(o.GitHubUrl.Get()) {
		var ret string
		return ret
	}
	return *o.GitHubUrl.Get()
}

// GetGitHubUrlOk returns a tuple with the GitHubUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetGitHubUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GitHubUrl.Get(), o.GitHubUrl.IsSet()
}

// HasGitHubUrl returns a boolean if a field has been set.
func (o *ContactDto) HasGitHubUrl() bool {
	if o != nil && o.GitHubUrl.IsSet() {
		return true
	}

	return false
}

// SetGitHubUrl gets a reference to the given NullableString and assigns it to the GitHubUrl field.
func (o *ContactDto) SetGitHubUrl(v string) {
	o.GitHubUrl.Set(&v)
}
// SetGitHubUrlNil sets the value for GitHubUrl to be an explicit nil
func (o *ContactDto) SetGitHubUrlNil() {
	o.GitHubUrl.Set(nil)
}

// UnsetGitHubUrl ensures that no value is present for GitHubUrl, not even an explicit nil
func (o *ContactDto) UnsetGitHubUrl() {
	o.GitHubUrl.Unset()
}

// GetTwitchUrl returns the TwitchUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetTwitchUrl() string {
	if o == nil || IsNil(o.TwitchUrl.Get()) {
		var ret string
		return ret
	}
	return *o.TwitchUrl.Get()
}

// GetTwitchUrlOk returns a tuple with the TwitchUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetTwitchUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TwitchUrl.Get(), o.TwitchUrl.IsSet()
}

// HasTwitchUrl returns a boolean if a field has been set.
func (o *ContactDto) HasTwitchUrl() bool {
	if o != nil && o.TwitchUrl.IsSet() {
		return true
	}

	return false
}

// SetTwitchUrl gets a reference to the given NullableString and assigns it to the TwitchUrl field.
func (o *ContactDto) SetTwitchUrl(v string) {
	o.TwitchUrl.Set(&v)
}
// SetTwitchUrlNil sets the value for TwitchUrl to be an explicit nil
func (o *ContactDto) SetTwitchUrlNil() {
	o.TwitchUrl.Set(nil)
}

// UnsetTwitchUrl ensures that no value is present for TwitchUrl, not even an explicit nil
func (o *ContactDto) UnsetTwitchUrl() {
	o.TwitchUrl.Unset()
}

// GetRedditUrl returns the RedditUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetRedditUrl() string {
	if o == nil || IsNil(o.RedditUrl.Get()) {
		var ret string
		return ret
	}
	return *o.RedditUrl.Get()
}

// GetRedditUrlOk returns a tuple with the RedditUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetRedditUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RedditUrl.Get(), o.RedditUrl.IsSet()
}

// HasRedditUrl returns a boolean if a field has been set.
func (o *ContactDto) HasRedditUrl() bool {
	if o != nil && o.RedditUrl.IsSet() {
		return true
	}

	return false
}

// SetRedditUrl gets a reference to the given NullableString and assigns it to the RedditUrl field.
func (o *ContactDto) SetRedditUrl(v string) {
	o.RedditUrl.Set(&v)
}
// SetRedditUrlNil sets the value for RedditUrl to be an explicit nil
func (o *ContactDto) SetRedditUrlNil() {
	o.RedditUrl.Set(nil)
}

// UnsetRedditUrl ensures that no value is present for RedditUrl, not even an explicit nil
func (o *ContactDto) UnsetRedditUrl() {
	o.RedditUrl.Unset()
}

// GetTikTokUrl returns the TikTokUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetTikTokUrl() string {
	if o == nil || IsNil(o.TikTokUrl.Get()) {
		var ret string
		return ret
	}
	return *o.TikTokUrl.Get()
}

// GetTikTokUrlOk returns a tuple with the TikTokUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetTikTokUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TikTokUrl.Get(), o.TikTokUrl.IsSet()
}

// HasTikTokUrl returns a boolean if a field has been set.
func (o *ContactDto) HasTikTokUrl() bool {
	if o != nil && o.TikTokUrl.IsSet() {
		return true
	}

	return false
}

// SetTikTokUrl gets a reference to the given NullableString and assigns it to the TikTokUrl field.
func (o *ContactDto) SetTikTokUrl(v string) {
	o.TikTokUrl.Set(&v)
}
// SetTikTokUrlNil sets the value for TikTokUrl to be an explicit nil
func (o *ContactDto) SetTikTokUrlNil() {
	o.TikTokUrl.Set(nil)
}

// UnsetTikTokUrl ensures that no value is present for TikTokUrl, not even an explicit nil
func (o *ContactDto) UnsetTikTokUrl() {
	o.TikTokUrl.Unset()
}

// GetWebsiteUrl returns the WebsiteUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetWebsiteUrl() string {
	if o == nil || IsNil(o.WebsiteUrl.Get()) {
		var ret string
		return ret
	}
	return *o.WebsiteUrl.Get()
}

// GetWebsiteUrlOk returns a tuple with the WebsiteUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetWebsiteUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WebsiteUrl.Get(), o.WebsiteUrl.IsSet()
}

// HasWebsiteUrl returns a boolean if a field has been set.
func (o *ContactDto) HasWebsiteUrl() bool {
	if o != nil && o.WebsiteUrl.IsSet() {
		return true
	}

	return false
}

// SetWebsiteUrl gets a reference to the given NullableString and assigns it to the WebsiteUrl field.
func (o *ContactDto) SetWebsiteUrl(v string) {
	o.WebsiteUrl.Set(&v)
}
// SetWebsiteUrlNil sets the value for WebsiteUrl to be an explicit nil
func (o *ContactDto) SetWebsiteUrlNil() {
	o.WebsiteUrl.Set(nil)
}

// UnsetWebsiteUrl ensures that no value is present for WebsiteUrl, not even an explicit nil
func (o *ContactDto) UnsetWebsiteUrl() {
	o.WebsiteUrl.Unset()
}

// GetTwitterUrl returns the TwitterUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetTwitterUrl() string {
	if o == nil || IsNil(o.TwitterUrl.Get()) {
		var ret string
		return ret
	}
	return *o.TwitterUrl.Get()
}

// GetTwitterUrlOk returns a tuple with the TwitterUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetTwitterUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TwitterUrl.Get(), o.TwitterUrl.IsSet()
}

// HasTwitterUrl returns a boolean if a field has been set.
func (o *ContactDto) HasTwitterUrl() bool {
	if o != nil && o.TwitterUrl.IsSet() {
		return true
	}

	return false
}

// SetTwitterUrl gets a reference to the given NullableString and assigns it to the TwitterUrl field.
func (o *ContactDto) SetTwitterUrl(v string) {
	o.TwitterUrl.Set(&v)
}
// SetTwitterUrlNil sets the value for TwitterUrl to be an explicit nil
func (o *ContactDto) SetTwitterUrlNil() {
	o.TwitterUrl.Set(nil)
}

// UnsetTwitterUrl ensures that no value is present for TwitterUrl, not even an explicit nil
func (o *ContactDto) UnsetTwitterUrl() {
	o.TwitterUrl.Unset()
}

// GetFacebookUrl returns the FacebookUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetFacebookUrl() string {
	if o == nil || IsNil(o.FacebookUrl.Get()) {
		var ret string
		return ret
	}
	return *o.FacebookUrl.Get()
}

// GetFacebookUrlOk returns a tuple with the FacebookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetFacebookUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FacebookUrl.Get(), o.FacebookUrl.IsSet()
}

// HasFacebookUrl returns a boolean if a field has been set.
func (o *ContactDto) HasFacebookUrl() bool {
	if o != nil && o.FacebookUrl.IsSet() {
		return true
	}

	return false
}

// SetFacebookUrl gets a reference to the given NullableString and assigns it to the FacebookUrl field.
func (o *ContactDto) SetFacebookUrl(v string) {
	o.FacebookUrl.Set(&v)
}
// SetFacebookUrlNil sets the value for FacebookUrl to be an explicit nil
func (o *ContactDto) SetFacebookUrlNil() {
	o.FacebookUrl.Set(nil)
}

// UnsetFacebookUrl ensures that no value is present for FacebookUrl, not even an explicit nil
func (o *ContactDto) UnsetFacebookUrl() {
	o.FacebookUrl.Unset()
}

// GetYouTubeUrl returns the YouTubeUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetYouTubeUrl() string {
	if o == nil || IsNil(o.YouTubeUrl.Get()) {
		var ret string
		return ret
	}
	return *o.YouTubeUrl.Get()
}

// GetYouTubeUrlOk returns a tuple with the YouTubeUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetYouTubeUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.YouTubeUrl.Get(), o.YouTubeUrl.IsSet()
}

// HasYouTubeUrl returns a boolean if a field has been set.
func (o *ContactDto) HasYouTubeUrl() bool {
	if o != nil && o.YouTubeUrl.IsSet() {
		return true
	}

	return false
}

// SetYouTubeUrl gets a reference to the given NullableString and assigns it to the YouTubeUrl field.
func (o *ContactDto) SetYouTubeUrl(v string) {
	o.YouTubeUrl.Set(&v)
}
// SetYouTubeUrlNil sets the value for YouTubeUrl to be an explicit nil
func (o *ContactDto) SetYouTubeUrlNil() {
	o.YouTubeUrl.Set(nil)
}

// UnsetYouTubeUrl ensures that no value is present for YouTubeUrl, not even an explicit nil
func (o *ContactDto) UnsetYouTubeUrl() {
	o.YouTubeUrl.Unset()
}

// GetLinkedInUrl returns the LinkedInUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetLinkedInUrl() string {
	if o == nil || IsNil(o.LinkedInUrl.Get()) {
		var ret string
		return ret
	}
	return *o.LinkedInUrl.Get()
}

// GetLinkedInUrlOk returns a tuple with the LinkedInUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetLinkedInUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LinkedInUrl.Get(), o.LinkedInUrl.IsSet()
}

// HasLinkedInUrl returns a boolean if a field has been set.
func (o *ContactDto) HasLinkedInUrl() bool {
	if o != nil && o.LinkedInUrl.IsSet() {
		return true
	}

	return false
}

// SetLinkedInUrl gets a reference to the given NullableString and assigns it to the LinkedInUrl field.
func (o *ContactDto) SetLinkedInUrl(v string) {
	o.LinkedInUrl.Set(&v)
}
// SetLinkedInUrlNil sets the value for LinkedInUrl to be an explicit nil
func (o *ContactDto) SetLinkedInUrlNil() {
	o.LinkedInUrl.Set(nil)
}

// UnsetLinkedInUrl ensures that no value is present for LinkedInUrl, not even an explicit nil
func (o *ContactDto) UnsetLinkedInUrl() {
	o.LinkedInUrl.Unset()
}

// GetInstagramUrl returns the InstagramUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetInstagramUrl() string {
	if o == nil || IsNil(o.InstagramUrl.Get()) {
		var ret string
		return ret
	}
	return *o.InstagramUrl.Get()
}

// GetInstagramUrlOk returns a tuple with the InstagramUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetInstagramUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstagramUrl.Get(), o.InstagramUrl.IsSet()
}

// HasInstagramUrl returns a boolean if a field has been set.
func (o *ContactDto) HasInstagramUrl() bool {
	if o != nil && o.InstagramUrl.IsSet() {
		return true
	}

	return false
}

// SetInstagramUrl gets a reference to the given NullableString and assigns it to the InstagramUrl field.
func (o *ContactDto) SetInstagramUrl(v string) {
	o.InstagramUrl.Set(&v)
}
// SetInstagramUrlNil sets the value for InstagramUrl to be an explicit nil
func (o *ContactDto) SetInstagramUrlNil() {
	o.InstagramUrl.Set(nil)
}

// UnsetInstagramUrl ensures that no value is present for InstagramUrl, not even an explicit nil
func (o *ContactDto) UnsetInstagramUrl() {
	o.InstagramUrl.Unset()
}

// GetGithubUsername returns the GithubUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetGithubUsername() string {
	if o == nil || IsNil(o.GithubUsername.Get()) {
		var ret string
		return ret
	}
	return *o.GithubUsername.Get()
}

// GetGithubUsernameOk returns a tuple with the GithubUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetGithubUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GithubUsername.Get(), o.GithubUsername.IsSet()
}

// HasGithubUsername returns a boolean if a field has been set.
func (o *ContactDto) HasGithubUsername() bool {
	if o != nil && o.GithubUsername.IsSet() {
		return true
	}

	return false
}

// SetGithubUsername gets a reference to the given NullableString and assigns it to the GithubUsername field.
func (o *ContactDto) SetGithubUsername(v string) {
	o.GithubUsername.Set(&v)
}
// SetGithubUsernameNil sets the value for GithubUsername to be an explicit nil
func (o *ContactDto) SetGithubUsernameNil() {
	o.GithubUsername.Set(nil)
}

// UnsetGithubUsername ensures that no value is present for GithubUsername, not even an explicit nil
func (o *ContactDto) UnsetGithubUsername() {
	o.GithubUsername.Unset()
}

// GetDuns returns the Duns field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetDuns() string {
	if o == nil || IsNil(o.Duns.Get()) {
		var ret string
		return ret
	}
	return *o.Duns.Get()
}

// GetDunsOk returns a tuple with the Duns field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetDunsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Duns.Get(), o.Duns.IsSet()
}

// HasDuns returns a boolean if a field has been set.
func (o *ContactDto) HasDuns() bool {
	if o != nil && o.Duns.IsSet() {
		return true
	}

	return false
}

// SetDuns gets a reference to the given NullableString and assigns it to the Duns field.
func (o *ContactDto) SetDuns(v string) {
	o.Duns.Set(&v)
}
// SetDunsNil sets the value for Duns to be an explicit nil
func (o *ContactDto) SetDunsNil() {
	o.Duns.Set(nil)
}

// UnsetDuns ensures that no value is present for Duns, not even an explicit nil
func (o *ContactDto) UnsetDuns() {
	o.Duns.Unset()
}

// GetTaxId returns the TaxId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetTaxId() string {
	if o == nil || IsNil(o.TaxId.Get()) {
		var ret string
		return ret
	}
	return *o.TaxId.Get()
}

// GetTaxIdOk returns a tuple with the TaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetTaxIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaxId.Get(), o.TaxId.IsSet()
}

// HasTaxId returns a boolean if a field has been set.
func (o *ContactDto) HasTaxId() bool {
	if o != nil && o.TaxId.IsSet() {
		return true
	}

	return false
}

// SetTaxId gets a reference to the given NullableString and assigns it to the TaxId field.
func (o *ContactDto) SetTaxId(v string) {
	o.TaxId.Set(&v)
}
// SetTaxIdNil sets the value for TaxId to be an explicit nil
func (o *ContactDto) SetTaxIdNil() {
	o.TaxId.Set(nil)
}

// UnsetTaxId ensures that no value is present for TaxId, not even an explicit nil
func (o *ContactDto) UnsetTaxId() {
	o.TaxId.Unset()
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetEmail() string {
	if o == nil || IsNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *ContactDto) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *ContactDto) SetEmail(v string) {
	o.Email.Set(&v)
}
// SetEmailNil sets the value for Email to be an explicit nil
func (o *ContactDto) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *ContactDto) UnsetEmail() {
	o.Email.Unset()
}

// GetAbout returns the About field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetAbout() string {
	if o == nil || IsNil(o.About.Get()) {
		var ret string
		return ret
	}
	return *o.About.Get()
}

// GetAboutOk returns a tuple with the About field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetAboutOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.About.Get(), o.About.IsSet()
}

// HasAbout returns a boolean if a field has been set.
func (o *ContactDto) HasAbout() bool {
	if o != nil && o.About.IsSet() {
		return true
	}

	return false
}

// SetAbout gets a reference to the given NullableString and assigns it to the About field.
func (o *ContactDto) SetAbout(v string) {
	o.About.Set(&v)
}
// SetAboutNil sets the value for About to be an explicit nil
func (o *ContactDto) SetAboutNil() {
	o.About.Set(nil)
}

// UnsetAbout ensures that no value is present for About, not even an explicit nil
func (o *ContactDto) UnsetAbout() {
	o.About.Unset()
}

// GetStreet returns the Street field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetStreet() string {
	if o == nil || IsNil(o.Street.Get()) {
		var ret string
		return ret
	}
	return *o.Street.Get()
}

// GetStreetOk returns a tuple with the Street field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetStreetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Street.Get(), o.Street.IsSet()
}

// HasStreet returns a boolean if a field has been set.
func (o *ContactDto) HasStreet() bool {
	if o != nil && o.Street.IsSet() {
		return true
	}

	return false
}

// SetStreet gets a reference to the given NullableString and assigns it to the Street field.
func (o *ContactDto) SetStreet(v string) {
	o.Street.Set(&v)
}
// SetStreetNil sets the value for Street to be an explicit nil
func (o *ContactDto) SetStreetNil() {
	o.Street.Set(nil)
}

// UnsetStreet ensures that no value is present for Street, not even an explicit nil
func (o *ContactDto) UnsetStreet() {
	o.Street.Unset()
}

// GetCartId returns the CartId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetCartId() string {
	if o == nil || IsNil(o.CartId.Get()) {
		var ret string
		return ret
	}
	return *o.CartId.Get()
}

// GetCartIdOk returns a tuple with the CartId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetCartIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CartId.Get(), o.CartId.IsSet()
}

// HasCartId returns a boolean if a field has been set.
func (o *ContactDto) HasCartId() bool {
	if o != nil && o.CartId.IsSet() {
		return true
	}

	return false
}

// SetCartId gets a reference to the given NullableString and assigns it to the CartId field.
func (o *ContactDto) SetCartId(v string) {
	o.CartId.Set(&v)
}
// SetCartIdNil sets the value for CartId to be an explicit nil
func (o *ContactDto) SetCartIdNil() {
	o.CartId.Set(nil)
}

// UnsetCartId ensures that no value is present for CartId, not even an explicit nil
func (o *ContactDto) UnsetCartId() {
	o.CartId.Unset()
}

// GetCityId returns the CityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetCityId() string {
	if o == nil || IsNil(o.CityId.Get()) {
		var ret string
		return ret
	}
	return *o.CityId.Get()
}

// GetCityIdOk returns a tuple with the CityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetCityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CityId.Get(), o.CityId.IsSet()
}

// HasCityId returns a boolean if a field has been set.
func (o *ContactDto) HasCityId() bool {
	if o != nil && o.CityId.IsSet() {
		return true
	}

	return false
}

// SetCityId gets a reference to the given NullableString and assigns it to the CityId field.
func (o *ContactDto) SetCityId(v string) {
	o.CityId.Set(&v)
}
// SetCityIdNil sets the value for CityId to be an explicit nil
func (o *ContactDto) SetCityIdNil() {
	o.CityId.Set(nil)
}

// UnsetCityId ensures that no value is present for CityId, not even an explicit nil
func (o *ContactDto) UnsetCityId() {
	o.CityId.Unset()
}

// GetZipCode returns the ZipCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetZipCode() string {
	if o == nil || IsNil(o.ZipCode.Get()) {
		var ret string
		return ret
	}
	return *o.ZipCode.Get()
}

// GetZipCodeOk returns a tuple with the ZipCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetZipCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ZipCode.Get(), o.ZipCode.IsSet()
}

// HasZipCode returns a boolean if a field has been set.
func (o *ContactDto) HasZipCode() bool {
	if o != nil && o.ZipCode.IsSet() {
		return true
	}

	return false
}

// SetZipCode gets a reference to the given NullableString and assigns it to the ZipCode field.
func (o *ContactDto) SetZipCode(v string) {
	o.ZipCode.Set(&v)
}
// SetZipCodeNil sets the value for ZipCode to be an explicit nil
func (o *ContactDto) SetZipCodeNil() {
	o.ZipCode.Set(nil)
}

// UnsetZipCode ensures that no value is present for ZipCode, not even an explicit nil
func (o *ContactDto) UnsetZipCode() {
	o.ZipCode.Unset()
}

// GetStateId returns the StateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetStateId() string {
	if o == nil || IsNil(o.StateId.Get()) {
		var ret string
		return ret
	}
	return *o.StateId.Get()
}

// GetStateIdOk returns a tuple with the StateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetStateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StateId.Get(), o.StateId.IsSet()
}

// HasStateId returns a boolean if a field has been set.
func (o *ContactDto) HasStateId() bool {
	if o != nil && o.StateId.IsSet() {
		return true
	}

	return false
}

// SetStateId gets a reference to the given NullableString and assigns it to the StateId field.
func (o *ContactDto) SetStateId(v string) {
	o.StateId.Set(&v)
}
// SetStateIdNil sets the value for StateId to be an explicit nil
func (o *ContactDto) SetStateIdNil() {
	o.StateId.Set(nil)
}

// UnsetStateId ensures that no value is present for StateId, not even an explicit nil
func (o *ContactDto) UnsetStateId() {
	o.StateId.Unset()
}

// GetWalletId returns the WalletId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetWalletId() string {
	if o == nil || IsNil(o.WalletId.Get()) {
		var ret string
		return ret
	}
	return *o.WalletId.Get()
}

// GetWalletIdOk returns a tuple with the WalletId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetWalletIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WalletId.Get(), o.WalletId.IsSet()
}

// HasWalletId returns a boolean if a field has been set.
func (o *ContactDto) HasWalletId() bool {
	if o != nil && o.WalletId.IsSet() {
		return true
	}

	return false
}

// SetWalletId gets a reference to the given NullableString and assigns it to the WalletId field.
func (o *ContactDto) SetWalletId(v string) {
	o.WalletId.Set(&v)
}
// SetWalletIdNil sets the value for WalletId to be an explicit nil
func (o *ContactDto) SetWalletIdNil() {
	o.WalletId.Set(nil)
}

// UnsetWalletId ensures that no value is present for WalletId, not even an explicit nil
func (o *ContactDto) UnsetWalletId() {
	o.WalletId.Unset()
}

// GetFaxNumber returns the FaxNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetFaxNumber() string {
	if o == nil || IsNil(o.FaxNumber.Get()) {
		var ret string
		return ret
	}
	return *o.FaxNumber.Get()
}

// GetFaxNumberOk returns a tuple with the FaxNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetFaxNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FaxNumber.Get(), o.FaxNumber.IsSet()
}

// HasFaxNumber returns a boolean if a field has been set.
func (o *ContactDto) HasFaxNumber() bool {
	if o != nil && o.FaxNumber.IsSet() {
		return true
	}

	return false
}

// SetFaxNumber gets a reference to the given NullableString and assigns it to the FaxNumber field.
func (o *ContactDto) SetFaxNumber(v string) {
	o.FaxNumber.Set(&v)
}
// SetFaxNumberNil sets the value for FaxNumber to be an explicit nil
func (o *ContactDto) SetFaxNumberNil() {
	o.FaxNumber.Set(nil)
}

// UnsetFaxNumber ensures that no value is present for FaxNumber, not even an explicit nil
func (o *ContactDto) UnsetFaxNumber() {
	o.FaxNumber.Unset()
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode.Get()) {
		var ret string
		return ret
	}
	return *o.PostalCode.Get()
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PostalCode.Get(), o.PostalCode.IsSet()
}

// HasPostalCode returns a boolean if a field has been set.
func (o *ContactDto) HasPostalCode() bool {
	if o != nil && o.PostalCode.IsSet() {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given NullableString and assigns it to the PostalCode field.
func (o *ContactDto) SetPostalCode(v string) {
	o.PostalCode.Set(&v)
}
// SetPostalCodeNil sets the value for PostalCode to be an explicit nil
func (o *ContactDto) SetPostalCodeNil() {
	o.PostalCode.Set(nil)
}

// UnsetPostalCode ensures that no value is present for PostalCode, not even an explicit nil
func (o *ContactDto) UnsetPostalCode() {
	o.PostalCode.Unset()
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetCurrencyId() string {
	if o == nil || IsNil(o.CurrencyId.Get()) {
		var ret string
		return ret
	}
	return *o.CurrencyId.Get()
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetCurrencyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrencyId.Get(), o.CurrencyId.IsSet()
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *ContactDto) HasCurrencyId() bool {
	if o != nil && o.CurrencyId.IsSet() {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given NullableString and assigns it to the CurrencyId field.
func (o *ContactDto) SetCurrencyId(v string) {
	o.CurrencyId.Set(&v)
}
// SetCurrencyIdNil sets the value for CurrencyId to be an explicit nil
func (o *ContactDto) SetCurrencyIdNil() {
	o.CurrencyId.Set(nil)
}

// UnsetCurrencyId ensures that no value is present for CurrencyId, not even an explicit nil
func (o *ContactDto) UnsetCurrencyId() {
	o.CurrencyId.Unset()
}

// GetStreetLine1 returns the StreetLine1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetStreetLine1() string {
	if o == nil || IsNil(o.StreetLine1.Get()) {
		var ret string
		return ret
	}
	return *o.StreetLine1.Get()
}

// GetStreetLine1Ok returns a tuple with the StreetLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetStreetLine1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StreetLine1.Get(), o.StreetLine1.IsSet()
}

// HasStreetLine1 returns a boolean if a field has been set.
func (o *ContactDto) HasStreetLine1() bool {
	if o != nil && o.StreetLine1.IsSet() {
		return true
	}

	return false
}

// SetStreetLine1 gets a reference to the given NullableString and assigns it to the StreetLine1 field.
func (o *ContactDto) SetStreetLine1(v string) {
	o.StreetLine1.Set(&v)
}
// SetStreetLine1Nil sets the value for StreetLine1 to be an explicit nil
func (o *ContactDto) SetStreetLine1Nil() {
	o.StreetLine1.Set(nil)
}

// UnsetStreetLine1 ensures that no value is present for StreetLine1, not even an explicit nil
func (o *ContactDto) UnsetStreetLine1() {
	o.StreetLine1.Unset()
}

// GetStreetLine2 returns the StreetLine2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetStreetLine2() string {
	if o == nil || IsNil(o.StreetLine2.Get()) {
		var ret string
		return ret
	}
	return *o.StreetLine2.Get()
}

// GetStreetLine2Ok returns a tuple with the StreetLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetStreetLine2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StreetLine2.Get(), o.StreetLine2.IsSet()
}

// HasStreetLine2 returns a boolean if a field has been set.
func (o *ContactDto) HasStreetLine2() bool {
	if o != nil && o.StreetLine2.IsSet() {
		return true
	}

	return false
}

// SetStreetLine2 gets a reference to the given NullableString and assigns it to the StreetLine2 field.
func (o *ContactDto) SetStreetLine2(v string) {
	o.StreetLine2.Set(&v)
}
// SetStreetLine2Nil sets the value for StreetLine2 to be an explicit nil
func (o *ContactDto) SetStreetLine2Nil() {
	o.StreetLine2.Set(nil)
}

// UnsetStreetLine2 ensures that no value is present for StreetLine2, not even an explicit nil
func (o *ContactDto) UnsetStreetLine2() {
	o.StreetLine2.Unset()
}

// GetTerritoryId returns the TerritoryId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetTerritoryId() string {
	if o == nil || IsNil(o.TerritoryId.Get()) {
		var ret string
		return ret
	}
	return *o.TerritoryId.Get()
}

// GetTerritoryIdOk returns a tuple with the TerritoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetTerritoryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TerritoryId.Get(), o.TerritoryId.IsSet()
}

// HasTerritoryId returns a boolean if a field has been set.
func (o *ContactDto) HasTerritoryId() bool {
	if o != nil && o.TerritoryId.IsSet() {
		return true
	}

	return false
}

// SetTerritoryId gets a reference to the given NullableString and assigns it to the TerritoryId field.
func (o *ContactDto) SetTerritoryId(v string) {
	o.TerritoryId.Set(&v)
}
// SetTerritoryIdNil sets the value for TerritoryId to be an explicit nil
func (o *ContactDto) SetTerritoryIdNil() {
	o.TerritoryId.Set(nil)
}

// UnsetTerritoryId ensures that no value is present for TerritoryId, not even an explicit nil
func (o *ContactDto) UnsetTerritoryId() {
	o.TerritoryId.Unset()
}

// GetMobilePhone returns the MobilePhone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetMobilePhone() string {
	if o == nil || IsNil(o.MobilePhone.Get()) {
		var ret string
		return ret
	}
	return *o.MobilePhone.Get()
}

// GetMobilePhoneOk returns a tuple with the MobilePhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetMobilePhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MobilePhone.Get(), o.MobilePhone.IsSet()
}

// HasMobilePhone returns a boolean if a field has been set.
func (o *ContactDto) HasMobilePhone() bool {
	if o != nil && o.MobilePhone.IsSet() {
		return true
	}

	return false
}

// SetMobilePhone gets a reference to the given NullableString and assigns it to the MobilePhone field.
func (o *ContactDto) SetMobilePhone(v string) {
	o.MobilePhone.Set(&v)
}
// SetMobilePhoneNil sets the value for MobilePhone to be an explicit nil
func (o *ContactDto) SetMobilePhoneNil() {
	o.MobilePhone.Set(nil)
}

// UnsetMobilePhone ensures that no value is present for MobilePhone, not even an explicit nil
func (o *ContactDto) UnsetMobilePhone() {
	o.MobilePhone.Unset()
}

// GetEnrollmentId returns the EnrollmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetEnrollmentId() string {
	if o == nil || IsNil(o.EnrollmentId.Get()) {
		var ret string
		return ret
	}
	return *o.EnrollmentId.Get()
}

// GetEnrollmentIdOk returns a tuple with the EnrollmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetEnrollmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnrollmentId.Get(), o.EnrollmentId.IsSet()
}

// HasEnrollmentId returns a boolean if a field has been set.
func (o *ContactDto) HasEnrollmentId() bool {
	if o != nil && o.EnrollmentId.IsSet() {
		return true
	}

	return false
}

// SetEnrollmentId gets a reference to the given NullableString and assigns it to the EnrollmentId field.
func (o *ContactDto) SetEnrollmentId(v string) {
	o.EnrollmentId.Set(&v)
}
// SetEnrollmentIdNil sets the value for EnrollmentId to be an explicit nil
func (o *ContactDto) SetEnrollmentIdNil() {
	o.EnrollmentId.Set(nil)
}

// UnsetEnrollmentId ensures that no value is present for EnrollmentId, not even an explicit nil
func (o *ContactDto) UnsetEnrollmentId() {
	o.EnrollmentId.Unset()
}

// GetAnnualRevenue returns the AnnualRevenue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetAnnualRevenue() string {
	if o == nil || IsNil(o.AnnualRevenue.Get()) {
		var ret string
		return ret
	}
	return *o.AnnualRevenue.Get()
}

// GetAnnualRevenueOk returns a tuple with the AnnualRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetAnnualRevenueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AnnualRevenue.Get(), o.AnnualRevenue.IsSet()
}

// HasAnnualRevenue returns a boolean if a field has been set.
func (o *ContactDto) HasAnnualRevenue() bool {
	if o != nil && o.AnnualRevenue.IsSet() {
		return true
	}

	return false
}

// SetAnnualRevenue gets a reference to the given NullableString and assigns it to the AnnualRevenue field.
func (o *ContactDto) SetAnnualRevenue(v string) {
	o.AnnualRevenue.Set(&v)
}
// SetAnnualRevenueNil sets the value for AnnualRevenue to be an explicit nil
func (o *ContactDto) SetAnnualRevenueNil() {
	o.AnnualRevenue.Set(nil)
}

// UnsetAnnualRevenue ensures that no value is present for AnnualRevenue, not even an explicit nil
func (o *ContactDto) UnsetAnnualRevenue() {
	o.AnnualRevenue.Unset()
}

// GetRelatedUserId returns the RelatedUserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetRelatedUserId() string {
	if o == nil || IsNil(o.RelatedUserId.Get()) {
		var ret string
		return ret
	}
	return *o.RelatedUserId.Get()
}

// GetRelatedUserIdOk returns a tuple with the RelatedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetRelatedUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RelatedUserId.Get(), o.RelatedUserId.IsSet()
}

// HasRelatedUserId returns a boolean if a field has been set.
func (o *ContactDto) HasRelatedUserId() bool {
	if o != nil && o.RelatedUserId.IsSet() {
		return true
	}

	return false
}

// SetRelatedUserId gets a reference to the given NullableString and assigns it to the RelatedUserId field.
func (o *ContactDto) SetRelatedUserId(v string) {
	o.RelatedUserId.Set(&v)
}
// SetRelatedUserIdNil sets the value for RelatedUserId to be an explicit nil
func (o *ContactDto) SetRelatedUserIdNil() {
	o.RelatedUserId.Set(nil)
}

// UnsetRelatedUserId ensures that no value is present for RelatedUserId, not even an explicit nil
func (o *ContactDto) UnsetRelatedUserId() {
	o.RelatedUserId.Unset()
}

// GetBusinessPhone returns the BusinessPhone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetBusinessPhone() string {
	if o == nil || IsNil(o.BusinessPhone.Get()) {
		var ret string
		return ret
	}
	return *o.BusinessPhone.Get()
}

// GetBusinessPhoneOk returns a tuple with the BusinessPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetBusinessPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BusinessPhone.Get(), o.BusinessPhone.IsSet()
}

// HasBusinessPhone returns a boolean if a field has been set.
func (o *ContactDto) HasBusinessPhone() bool {
	if o != nil && o.BusinessPhone.IsSet() {
		return true
	}

	return false
}

// SetBusinessPhone gets a reference to the given NullableString and assigns it to the BusinessPhone field.
func (o *ContactDto) SetBusinessPhone(v string) {
	o.BusinessPhone.Set(&v)
}
// SetBusinessPhoneNil sets the value for BusinessPhone to be an explicit nil
func (o *ContactDto) SetBusinessPhoneNil() {
	o.BusinessPhone.Set(nil)
}

// UnsetBusinessPhone ensures that no value is present for BusinessPhone, not even an explicit nil
func (o *ContactDto) UnsetBusinessPhone() {
	o.BusinessPhone.Unset()
}

// GetOwnerContactId returns the OwnerContactId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetOwnerContactId() string {
	if o == nil || IsNil(o.OwnerContactId.Get()) {
		var ret string
		return ret
	}
	return *o.OwnerContactId.Get()
}

// GetOwnerContactIdOk returns a tuple with the OwnerContactId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetOwnerContactIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OwnerContactId.Get(), o.OwnerContactId.IsSet()
}

// HasOwnerContactId returns a boolean if a field has been set.
func (o *ContactDto) HasOwnerContactId() bool {
	if o != nil && o.OwnerContactId.IsSet() {
		return true
	}

	return false
}

// SetOwnerContactId gets a reference to the given NullableString and assigns it to the OwnerContactId field.
func (o *ContactDto) SetOwnerContactId(v string) {
	o.OwnerContactId.Set(&v)
}
// SetOwnerContactIdNil sets the value for OwnerContactId to be an explicit nil
func (o *ContactDto) SetOwnerContactIdNil() {
	o.OwnerContactId.Set(nil)
}

// UnsetOwnerContactId ensures that no value is present for OwnerContactId, not even an explicit nil
func (o *ContactDto) UnsetOwnerContactId() {
	o.OwnerContactId.Unset()
}

// GetRelatedTenantId returns the RelatedTenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetRelatedTenantId() string {
	if o == nil || IsNil(o.RelatedTenantId.Get()) {
		var ret string
		return ret
	}
	return *o.RelatedTenantId.Get()
}

// GetRelatedTenantIdOk returns a tuple with the RelatedTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetRelatedTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RelatedTenantId.Get(), o.RelatedTenantId.IsSet()
}

// HasRelatedTenantId returns a boolean if a field has been set.
func (o *ContactDto) HasRelatedTenantId() bool {
	if o != nil && o.RelatedTenantId.IsSet() {
		return true
	}

	return false
}

// SetRelatedTenantId gets a reference to the given NullableString and assigns it to the RelatedTenantId field.
func (o *ContactDto) SetRelatedTenantId(v string) {
	o.RelatedTenantId.Set(&v)
}
// SetRelatedTenantIdNil sets the value for RelatedTenantId to be an explicit nil
func (o *ContactDto) SetRelatedTenantIdNil() {
	o.RelatedTenantId.Set(nil)
}

// UnsetRelatedTenantId ensures that no value is present for RelatedTenantId, not even an explicit nil
func (o *ContactDto) UnsetRelatedTenantId() {
	o.RelatedTenantId.Unset()
}

// GetActivityFeedId returns the ActivityFeedId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetActivityFeedId() string {
	if o == nil || IsNil(o.ActivityFeedId.Get()) {
		var ret string
		return ret
	}
	return *o.ActivityFeedId.Get()
}

// GetActivityFeedIdOk returns a tuple with the ActivityFeedId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetActivityFeedIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActivityFeedId.Get(), o.ActivityFeedId.IsSet()
}

// HasActivityFeedId returns a boolean if a field has been set.
func (o *ContactDto) HasActivityFeedId() bool {
	if o != nil && o.ActivityFeedId.IsSet() {
		return true
	}

	return false
}

// SetActivityFeedId gets a reference to the given NullableString and assigns it to the ActivityFeedId field.
func (o *ContactDto) SetActivityFeedId(v string) {
	o.ActivityFeedId.Set(&v)
}
// SetActivityFeedIdNil sets the value for ActivityFeedId to be an explicit nil
func (o *ContactDto) SetActivityFeedIdNil() {
	o.ActivityFeedId.Set(nil)
}

// UnsetActivityFeedId ensures that no value is present for ActivityFeedId, not even an explicit nil
func (o *ContactDto) UnsetActivityFeedId() {
	o.ActivityFeedId.Unset()
}

// GetParentContactId returns the ParentContactId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetParentContactId() string {
	if o == nil || IsNil(o.ParentContactId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentContactId.Get()
}

// GetParentContactIdOk returns a tuple with the ParentContactId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetParentContactIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentContactId.Get(), o.ParentContactId.IsSet()
}

// HasParentContactId returns a boolean if a field has been set.
func (o *ContactDto) HasParentContactId() bool {
	if o != nil && o.ParentContactId.IsSet() {
		return true
	}

	return false
}

// SetParentContactId gets a reference to the given NullableString and assigns it to the ParentContactId field.
func (o *ContactDto) SetParentContactId(v string) {
	o.ParentContactId.Set(&v)
}
// SetParentContactIdNil sets the value for ParentContactId to be an explicit nil
func (o *ContactDto) SetParentContactIdNil() {
	o.ParentContactId.Set(nil)
}

// UnsetParentContactId ensures that no value is present for ParentContactId, not even an explicit nil
func (o *ContactDto) UnsetParentContactId() {
	o.ParentContactId.Unset()
}

// GetIdentityProvider returns the IdentityProvider field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetIdentityProvider() string {
	if o == nil || IsNil(o.IdentityProvider.Get()) {
		var ret string
		return ret
	}
	return *o.IdentityProvider.Get()
}

// GetIdentityProviderOk returns a tuple with the IdentityProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetIdentityProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IdentityProvider.Get(), o.IdentityProvider.IsSet()
}

// HasIdentityProvider returns a boolean if a field has been set.
func (o *ContactDto) HasIdentityProvider() bool {
	if o != nil && o.IdentityProvider.IsSet() {
		return true
	}

	return false
}

// SetIdentityProvider gets a reference to the given NullableString and assigns it to the IdentityProvider field.
func (o *ContactDto) SetIdentityProvider(v string) {
	o.IdentityProvider.Set(&v)
}
// SetIdentityProviderNil sets the value for IdentityProvider to be an explicit nil
func (o *ContactDto) SetIdentityProviderNil() {
	o.IdentityProvider.Set(nil)
}

// UnsetIdentityProvider ensures that no value is present for IdentityProvider, not even an explicit nil
func (o *ContactDto) UnsetIdentityProvider() {
	o.IdentityProvider.Unset()
}

// GetPartnerProfileId returns the PartnerProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetPartnerProfileId() string {
	if o == nil || IsNil(o.PartnerProfileId.Get()) {
		var ret string
		return ret
	}
	return *o.PartnerProfileId.Get()
}

// GetPartnerProfileIdOk returns a tuple with the PartnerProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetPartnerProfileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PartnerProfileId.Get(), o.PartnerProfileId.IsSet()
}

// HasPartnerProfileId returns a boolean if a field has been set.
func (o *ContactDto) HasPartnerProfileId() bool {
	if o != nil && o.PartnerProfileId.IsSet() {
		return true
	}

	return false
}

// SetPartnerProfileId gets a reference to the given NullableString and assigns it to the PartnerProfileId field.
func (o *ContactDto) SetPartnerProfileId(v string) {
	o.PartnerProfileId.Set(&v)
}
// SetPartnerProfileIdNil sets the value for PartnerProfileId to be an explicit nil
func (o *ContactDto) SetPartnerProfileIdNil() {
	o.PartnerProfileId.Set(nil)
}

// UnsetPartnerProfileId ensures that no value is present for PartnerProfileId, not even an explicit nil
func (o *ContactDto) UnsetPartnerProfileId() {
	o.PartnerProfileId.Unset()
}

// GetPrimaryContactId returns the PrimaryContactId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetPrimaryContactId() string {
	if o == nil || IsNil(o.PrimaryContactId.Get()) {
		var ret string
		return ret
	}
	return *o.PrimaryContactId.Get()
}

// GetPrimaryContactIdOk returns a tuple with the PrimaryContactId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetPrimaryContactIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryContactId.Get(), o.PrimaryContactId.IsSet()
}

// HasPrimaryContactId returns a boolean if a field has been set.
func (o *ContactDto) HasPrimaryContactId() bool {
	if o != nil && o.PrimaryContactId.IsSet() {
		return true
	}

	return false
}

// SetPrimaryContactId gets a reference to the given NullableString and assigns it to the PrimaryContactId field.
func (o *ContactDto) SetPrimaryContactId(v string) {
	o.PrimaryContactId.Set(&v)
}
// SetPrimaryContactIdNil sets the value for PrimaryContactId to be an explicit nil
func (o *ContactDto) SetPrimaryContactIdNil() {
	o.PrimaryContactId.Set(nil)
}

// UnsetPrimaryContactId ensures that no value is present for PrimaryContactId, not even an explicit nil
func (o *ContactDto) UnsetPrimaryContactId() {
	o.PrimaryContactId.Unset()
}

// GetActiveDirectoryId returns the ActiveDirectoryId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetActiveDirectoryId() string {
	if o == nil || IsNil(o.ActiveDirectoryId.Get()) {
		var ret string
		return ret
	}
	return *o.ActiveDirectoryId.Get()
}

// GetActiveDirectoryIdOk returns a tuple with the ActiveDirectoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetActiveDirectoryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActiveDirectoryId.Get(), o.ActiveDirectoryId.IsSet()
}

// HasActiveDirectoryId returns a boolean if a field has been set.
func (o *ContactDto) HasActiveDirectoryId() bool {
	if o != nil && o.ActiveDirectoryId.IsSet() {
		return true
	}

	return false
}

// SetActiveDirectoryId gets a reference to the given NullableString and assigns it to the ActiveDirectoryId field.
func (o *ContactDto) SetActiveDirectoryId(v string) {
	o.ActiveDirectoryId.Set(&v)
}
// SetActiveDirectoryIdNil sets the value for ActiveDirectoryId to be an explicit nil
func (o *ContactDto) SetActiveDirectoryIdNil() {
	o.ActiveDirectoryId.Set(nil)
}

// UnsetActiveDirectoryId ensures that no value is present for ActiveDirectoryId, not even an explicit nil
func (o *ContactDto) UnsetActiveDirectoryId() {
	o.ActiveDirectoryId.Unset()
}

// GetIdentityProviderAccessToken returns the IdentityProviderAccessToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetIdentityProviderAccessToken() string {
	if o == nil || IsNil(o.IdentityProviderAccessToken.Get()) {
		var ret string
		return ret
	}
	return *o.IdentityProviderAccessToken.Get()
}

// GetIdentityProviderAccessTokenOk returns a tuple with the IdentityProviderAccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetIdentityProviderAccessTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IdentityProviderAccessToken.Get(), o.IdentityProviderAccessToken.IsSet()
}

// HasIdentityProviderAccessToken returns a boolean if a field has been set.
func (o *ContactDto) HasIdentityProviderAccessToken() bool {
	if o != nil && o.IdentityProviderAccessToken.IsSet() {
		return true
	}

	return false
}

// SetIdentityProviderAccessToken gets a reference to the given NullableString and assigns it to the IdentityProviderAccessToken field.
func (o *ContactDto) SetIdentityProviderAccessToken(v string) {
	o.IdentityProviderAccessToken.Set(&v)
}
// SetIdentityProviderAccessTokenNil sets the value for IdentityProviderAccessToken to be an explicit nil
func (o *ContactDto) SetIdentityProviderAccessTokenNil() {
	o.IdentityProviderAccessToken.Set(nil)
}

// UnsetIdentityProviderAccessToken ensures that no value is present for IdentityProviderAccessToken, not even an explicit nil
func (o *ContactDto) UnsetIdentityProviderAccessToken() {
	o.IdentityProviderAccessToken.Unset()
}

// GetBirthday returns the Birthday field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactDto) GetBirthday() time.Time {
	if o == nil || IsNil(o.Birthday.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Birthday.Get()
}

// GetBirthdayOk returns a tuple with the Birthday field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactDto) GetBirthdayOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Birthday.Get(), o.Birthday.IsSet()
}

// HasBirthday returns a boolean if a field has been set.
func (o *ContactDto) HasBirthday() bool {
	if o != nil && o.Birthday.IsSet() {
		return true
	}

	return false
}

// SetBirthday gets a reference to the given NullableTime and assigns it to the Birthday field.
func (o *ContactDto) SetBirthday(v time.Time) {
	o.Birthday.Set(&v)
}
// SetBirthdayNil sets the value for Birthday to be an explicit nil
func (o *ContactDto) SetBirthdayNil() {
	o.Birthday.Set(nil)
}

// UnsetBirthday ensures that no value is present for Birthday, not even an explicit nil
func (o *ContactDto) UnsetBirthday() {
	o.Birthday.Unset()
}

func (o ContactDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContactDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Timestamp.IsSet() {
		toSerialize["timestamp"] = o.Timestamp.Get()
	}
	if o.QualifiedName.IsSet() {
		toSerialize["qualifiedName"] = o.QualifiedName.Get()
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if o.PublicName.IsSet() {
		toSerialize["publicName"] = o.PublicName.Get()
	}
	if o.FirstName.IsSet() {
		toSerialize["firstName"] = o.FirstName.Get()
	}
	if o.LastName.IsSet() {
		toSerialize["lastName"] = o.LastName.Get()
	}
	if o.JobTitle.IsSet() {
		toSerialize["jobTitle"] = o.JobTitle.Get()
	}
	if o.CoverUrl.IsSet() {
		toSerialize["coverUrl"] = o.CoverUrl.Get()
	}
	if o.AvatarUrl.IsSet() {
		toSerialize["avatarUrl"] = o.AvatarUrl.Get()
	}
	if o.CountryId.IsSet() {
		toSerialize["countryId"] = o.CountryId.Get()
	}
	if o.TimezoneId.IsSet() {
		toSerialize["timezoneId"] = o.TimezoneId.Get()
	}
	if o.LanguageId.IsSet() {
		toSerialize["languageId"] = o.LanguageId.Get()
	}
	if o.SocialProfileId.IsSet() {
		toSerialize["socialProfileId"] = o.SocialProfileId.Get()
	}
	if o.WebUrl.IsSet() {
		toSerialize["webUrl"] = o.WebUrl.Get()
	}
	if o.GitHubUrl.IsSet() {
		toSerialize["gitHubUrl"] = o.GitHubUrl.Get()
	}
	if o.TwitchUrl.IsSet() {
		toSerialize["twitchUrl"] = o.TwitchUrl.Get()
	}
	if o.RedditUrl.IsSet() {
		toSerialize["redditUrl"] = o.RedditUrl.Get()
	}
	if o.TikTokUrl.IsSet() {
		toSerialize["tikTokUrl"] = o.TikTokUrl.Get()
	}
	if o.WebsiteUrl.IsSet() {
		toSerialize["websiteUrl"] = o.WebsiteUrl.Get()
	}
	if o.TwitterUrl.IsSet() {
		toSerialize["twitterUrl"] = o.TwitterUrl.Get()
	}
	if o.FacebookUrl.IsSet() {
		toSerialize["facebookUrl"] = o.FacebookUrl.Get()
	}
	if o.YouTubeUrl.IsSet() {
		toSerialize["youTubeUrl"] = o.YouTubeUrl.Get()
	}
	if o.LinkedInUrl.IsSet() {
		toSerialize["linkedInUrl"] = o.LinkedInUrl.Get()
	}
	if o.InstagramUrl.IsSet() {
		toSerialize["instagramUrl"] = o.InstagramUrl.Get()
	}
	if o.GithubUsername.IsSet() {
		toSerialize["githubUsername"] = o.GithubUsername.Get()
	}
	if o.Duns.IsSet() {
		toSerialize["duns"] = o.Duns.Get()
	}
	if o.TaxId.IsSet() {
		toSerialize["taxId"] = o.TaxId.Get()
	}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if o.About.IsSet() {
		toSerialize["about"] = o.About.Get()
	}
	if o.Street.IsSet() {
		toSerialize["street"] = o.Street.Get()
	}
	if o.CartId.IsSet() {
		toSerialize["cartId"] = o.CartId.Get()
	}
	if o.CityId.IsSet() {
		toSerialize["cityId"] = o.CityId.Get()
	}
	if o.ZipCode.IsSet() {
		toSerialize["zipCode"] = o.ZipCode.Get()
	}
	if o.StateId.IsSet() {
		toSerialize["stateId"] = o.StateId.Get()
	}
	if o.WalletId.IsSet() {
		toSerialize["walletId"] = o.WalletId.Get()
	}
	if o.FaxNumber.IsSet() {
		toSerialize["faxNumber"] = o.FaxNumber.Get()
	}
	if o.PostalCode.IsSet() {
		toSerialize["postalCode"] = o.PostalCode.Get()
	}
	if o.CurrencyId.IsSet() {
		toSerialize["currencyId"] = o.CurrencyId.Get()
	}
	if o.StreetLine1.IsSet() {
		toSerialize["streetLine1"] = o.StreetLine1.Get()
	}
	if o.StreetLine2.IsSet() {
		toSerialize["streetLine2"] = o.StreetLine2.Get()
	}
	if o.TerritoryId.IsSet() {
		toSerialize["territoryId"] = o.TerritoryId.Get()
	}
	if o.MobilePhone.IsSet() {
		toSerialize["mobilePhone"] = o.MobilePhone.Get()
	}
	if o.EnrollmentId.IsSet() {
		toSerialize["enrollmentId"] = o.EnrollmentId.Get()
	}
	if o.AnnualRevenue.IsSet() {
		toSerialize["annualRevenue"] = o.AnnualRevenue.Get()
	}
	if o.RelatedUserId.IsSet() {
		toSerialize["relatedUserId"] = o.RelatedUserId.Get()
	}
	if o.BusinessPhone.IsSet() {
		toSerialize["businessPhone"] = o.BusinessPhone.Get()
	}
	if o.OwnerContactId.IsSet() {
		toSerialize["ownerContactId"] = o.OwnerContactId.Get()
	}
	if o.RelatedTenantId.IsSet() {
		toSerialize["relatedTenantId"] = o.RelatedTenantId.Get()
	}
	if o.ActivityFeedId.IsSet() {
		toSerialize["activityFeedId"] = o.ActivityFeedId.Get()
	}
	if o.ParentContactId.IsSet() {
		toSerialize["parentContactId"] = o.ParentContactId.Get()
	}
	if o.IdentityProvider.IsSet() {
		toSerialize["identityProvider"] = o.IdentityProvider.Get()
	}
	if o.PartnerProfileId.IsSet() {
		toSerialize["partnerProfileId"] = o.PartnerProfileId.Get()
	}
	if o.PrimaryContactId.IsSet() {
		toSerialize["primaryContactId"] = o.PrimaryContactId.Get()
	}
	if o.ActiveDirectoryId.IsSet() {
		toSerialize["activeDirectoryId"] = o.ActiveDirectoryId.Get()
	}
	if o.IdentityProviderAccessToken.IsSet() {
		toSerialize["identityProviderAccessToken"] = o.IdentityProviderAccessToken.Get()
	}
	if o.Birthday.IsSet() {
		toSerialize["birthday"] = o.Birthday.Get()
	}
	return toSerialize, nil
}

type NullableContactDto struct {
	value *ContactDto
	isSet bool
}

func (v NullableContactDto) Get() *ContactDto {
	return v.value
}

func (v *NullableContactDto) Set(val *ContactDto) {
	v.value = val
	v.isSet = true
}

func (v NullableContactDto) IsSet() bool {
	return v.isSet
}

func (v *NullableContactDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContactDto(val *ContactDto) *NullableContactDto {
	return &NullableContactDto{value: val, isSet: true}
}

func (v NullableContactDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContactDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


