/*
SupportService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the SupportEntitlementCreateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SupportEntitlementCreateDto{}

// SupportEntitlementCreateDto struct for SupportEntitlementCreateDto
type SupportEntitlementCreateDto struct {
	Id *string `json:"id,omitempty"`
	Timestamp *time.Time `json:"timestamp,omitempty"`
	Title NullableString `json:"title,omitempty"`
	Description NullableString `json:"description,omitempty"`
	StartDateTime *time.Time `json:"startDateTime,omitempty"`
	EndDateTime *time.Time `json:"endDateTime,omitempty"`
	NextInvoiceDateTime *time.Time `json:"nextInvoiceDateTime,omitempty"`
	Code NullableString `json:"code,omitempty"`
	Signature NullableString `json:"signature,omitempty"`
	Quantity *int32 `json:"quantity,omitempty"`
	Repetitions *int32 `json:"repetitions,omitempty"`
	ChargeAttempts *int32 `json:"chargeAttempts,omitempty"`
	FreeTrialInDays *int32 `json:"freeTrialInDays,omitempty"`
	GracePeriodInDays *int32 `json:"gracePeriodInDays,omitempty"`
	CustomRenewalPeriod *int32 `json:"customRenewalPeriod,omitempty"`
	EnableAutomaticRenew *bool `json:"enableAutomaticRenew,omitempty"`
	EnableProRateBilling *bool `json:"enableProRateBilling,omitempty"`
	EnableUsageThreshold *bool `json:"enableUsageThreshold,omitempty"`
	EnableAutomaticDisable *bool `json:"enableAutomaticDisable,omitempty"`
	EnableAutomaticPayments *bool `json:"enableAutomaticPayments,omitempty"`
	UsageThreshold *int32 `json:"usageThreshold,omitempty"`
	Data NullableString `json:"data,omitempty"`
	DataLabel NullableString `json:"dataLabel,omitempty"`
	Data1 NullableString `json:"data1,omitempty"`
	Data1Label NullableString `json:"data1Label,omitempty"`
	Data2 NullableString `json:"data2,omitempty"`
	Data2Label NullableString `json:"data2Label,omitempty"`
	Data3 NullableString `json:"data3,omitempty"`
	Data3Label NullableString `json:"data3Label,omitempty"`
	Data4 NullableString `json:"data4,omitempty"`
	Data4Label NullableString `json:"data4Label,omitempty"`
	Data5 NullableString `json:"data5,omitempty"`
	Data5Label NullableString `json:"data5Label,omitempty"`
	Data6 NullableString `json:"data6,omitempty"`
	Data6Label NullableString `json:"data6Label,omitempty"`
	Data7 NullableString `json:"data7,omitempty"`
	Data7Label NullableString `json:"data7Label,omitempty"`
	Data8 NullableString `json:"data8,omitempty"`
	Data8Label NullableString `json:"data8Label,omitempty"`
	Data9 NullableString `json:"data9,omitempty"`
	Data9Label NullableString `json:"data9Label,omitempty"`
	AccountHolderID NullableString `json:"accountHolderID,omitempty"`
	IndividualID NullableString `json:"individualID,omitempty"`
	OrganizationID NullableString `json:"organizationID,omitempty"`
	ReceiverBusinessID NullableString `json:"receiverBusinessID,omitempty"`
	BusinessID NullableString `json:"businessID,omitempty"`
	BusinessProfileRecordID NullableString `json:"businessProfileRecordID,omitempty"`
	PaymentTokenID NullableString `json:"paymentTokenID,omitempty"`
	WalletAccountID NullableString `json:"walletAccountID,omitempty"`
	SecurityCertificateID NullableString `json:"securityCertificateID,omitempty"`
}

// NewSupportEntitlementCreateDto instantiates a new SupportEntitlementCreateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSupportEntitlementCreateDto() *SupportEntitlementCreateDto {
	this := SupportEntitlementCreateDto{}
	return &this
}

// NewSupportEntitlementCreateDtoWithDefaults instantiates a new SupportEntitlementCreateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSupportEntitlementCreateDtoWithDefaults() *SupportEntitlementCreateDto {
	this := SupportEntitlementCreateDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SupportEntitlementCreateDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportEntitlementCreateDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SupportEntitlementCreateDto) SetId(v string) {
	o.Id = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *SupportEntitlementCreateDto) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportEntitlementCreateDto) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *SupportEntitlementCreateDto) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *SupportEntitlementCreateDto) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *SupportEntitlementCreateDto) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetTitle() {
	o.Title.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *SupportEntitlementCreateDto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *SupportEntitlementCreateDto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetDescription() {
	o.Description.Unset()
}

// GetStartDateTime returns the StartDateTime field value if set, zero value otherwise.
func (o *SupportEntitlementCreateDto) GetStartDateTime() time.Time {
	if o == nil || IsNil(o.StartDateTime) {
		var ret time.Time
		return ret
	}
	return *o.StartDateTime
}

// GetStartDateTimeOk returns a tuple with the StartDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportEntitlementCreateDto) GetStartDateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDateTime) {
		return nil, false
	}
	return o.StartDateTime, true
}

// HasStartDateTime returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasStartDateTime() bool {
	if o != nil && !IsNil(o.StartDateTime) {
		return true
	}

	return false
}

// SetStartDateTime gets a reference to the given time.Time and assigns it to the StartDateTime field.
func (o *SupportEntitlementCreateDto) SetStartDateTime(v time.Time) {
	o.StartDateTime = &v
}

// GetEndDateTime returns the EndDateTime field value if set, zero value otherwise.
func (o *SupportEntitlementCreateDto) GetEndDateTime() time.Time {
	if o == nil || IsNil(o.EndDateTime) {
		var ret time.Time
		return ret
	}
	return *o.EndDateTime
}

// GetEndDateTimeOk returns a tuple with the EndDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportEntitlementCreateDto) GetEndDateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDateTime) {
		return nil, false
	}
	return o.EndDateTime, true
}

// HasEndDateTime returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasEndDateTime() bool {
	if o != nil && !IsNil(o.EndDateTime) {
		return true
	}

	return false
}

// SetEndDateTime gets a reference to the given time.Time and assigns it to the EndDateTime field.
func (o *SupportEntitlementCreateDto) SetEndDateTime(v time.Time) {
	o.EndDateTime = &v
}

// GetNextInvoiceDateTime returns the NextInvoiceDateTime field value if set, zero value otherwise.
func (o *SupportEntitlementCreateDto) GetNextInvoiceDateTime() time.Time {
	if o == nil || IsNil(o.NextInvoiceDateTime) {
		var ret time.Time
		return ret
	}
	return *o.NextInvoiceDateTime
}

// GetNextInvoiceDateTimeOk returns a tuple with the NextInvoiceDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportEntitlementCreateDto) GetNextInvoiceDateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.NextInvoiceDateTime) {
		return nil, false
	}
	return o.NextInvoiceDateTime, true
}

// HasNextInvoiceDateTime returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasNextInvoiceDateTime() bool {
	if o != nil && !IsNil(o.NextInvoiceDateTime) {
		return true
	}

	return false
}

// SetNextInvoiceDateTime gets a reference to the given time.Time and assigns it to the NextInvoiceDateTime field.
func (o *SupportEntitlementCreateDto) SetNextInvoiceDateTime(v time.Time) {
	o.NextInvoiceDateTime = &v
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetCode() string {
	if o == nil || IsNil(o.Code.Get()) {
		var ret string
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableString and assigns it to the Code field.
func (o *SupportEntitlementCreateDto) SetCode(v string) {
	o.Code.Set(&v)
}
// SetCodeNil sets the value for Code to be an explicit nil
func (o *SupportEntitlementCreateDto) SetCodeNil() {
	o.Code.Set(nil)
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetCode() {
	o.Code.Unset()
}

// GetSignature returns the Signature field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetSignature() string {
	if o == nil || IsNil(o.Signature.Get()) {
		var ret string
		return ret
	}
	return *o.Signature.Get()
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Signature.Get(), o.Signature.IsSet()
}

// HasSignature returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasSignature() bool {
	if o != nil && o.Signature.IsSet() {
		return true
	}

	return false
}

// SetSignature gets a reference to the given NullableString and assigns it to the Signature field.
func (o *SupportEntitlementCreateDto) SetSignature(v string) {
	o.Signature.Set(&v)
}
// SetSignatureNil sets the value for Signature to be an explicit nil
func (o *SupportEntitlementCreateDto) SetSignatureNil() {
	o.Signature.Set(nil)
}

// UnsetSignature ensures that no value is present for Signature, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetSignature() {
	o.Signature.Unset()
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *SupportEntitlementCreateDto) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportEntitlementCreateDto) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *SupportEntitlementCreateDto) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetRepetitions returns the Repetitions field value if set, zero value otherwise.
func (o *SupportEntitlementCreateDto) GetRepetitions() int32 {
	if o == nil || IsNil(o.Repetitions) {
		var ret int32
		return ret
	}
	return *o.Repetitions
}

// GetRepetitionsOk returns a tuple with the Repetitions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportEntitlementCreateDto) GetRepetitionsOk() (*int32, bool) {
	if o == nil || IsNil(o.Repetitions) {
		return nil, false
	}
	return o.Repetitions, true
}

// HasRepetitions returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasRepetitions() bool {
	if o != nil && !IsNil(o.Repetitions) {
		return true
	}

	return false
}

// SetRepetitions gets a reference to the given int32 and assigns it to the Repetitions field.
func (o *SupportEntitlementCreateDto) SetRepetitions(v int32) {
	o.Repetitions = &v
}

// GetChargeAttempts returns the ChargeAttempts field value if set, zero value otherwise.
func (o *SupportEntitlementCreateDto) GetChargeAttempts() int32 {
	if o == nil || IsNil(o.ChargeAttempts) {
		var ret int32
		return ret
	}
	return *o.ChargeAttempts
}

// GetChargeAttemptsOk returns a tuple with the ChargeAttempts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportEntitlementCreateDto) GetChargeAttemptsOk() (*int32, bool) {
	if o == nil || IsNil(o.ChargeAttempts) {
		return nil, false
	}
	return o.ChargeAttempts, true
}

// HasChargeAttempts returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasChargeAttempts() bool {
	if o != nil && !IsNil(o.ChargeAttempts) {
		return true
	}

	return false
}

// SetChargeAttempts gets a reference to the given int32 and assigns it to the ChargeAttempts field.
func (o *SupportEntitlementCreateDto) SetChargeAttempts(v int32) {
	o.ChargeAttempts = &v
}

// GetFreeTrialInDays returns the FreeTrialInDays field value if set, zero value otherwise.
func (o *SupportEntitlementCreateDto) GetFreeTrialInDays() int32 {
	if o == nil || IsNil(o.FreeTrialInDays) {
		var ret int32
		return ret
	}
	return *o.FreeTrialInDays
}

// GetFreeTrialInDaysOk returns a tuple with the FreeTrialInDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportEntitlementCreateDto) GetFreeTrialInDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.FreeTrialInDays) {
		return nil, false
	}
	return o.FreeTrialInDays, true
}

// HasFreeTrialInDays returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasFreeTrialInDays() bool {
	if o != nil && !IsNil(o.FreeTrialInDays) {
		return true
	}

	return false
}

// SetFreeTrialInDays gets a reference to the given int32 and assigns it to the FreeTrialInDays field.
func (o *SupportEntitlementCreateDto) SetFreeTrialInDays(v int32) {
	o.FreeTrialInDays = &v
}

// GetGracePeriodInDays returns the GracePeriodInDays field value if set, zero value otherwise.
func (o *SupportEntitlementCreateDto) GetGracePeriodInDays() int32 {
	if o == nil || IsNil(o.GracePeriodInDays) {
		var ret int32
		return ret
	}
	return *o.GracePeriodInDays
}

// GetGracePeriodInDaysOk returns a tuple with the GracePeriodInDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportEntitlementCreateDto) GetGracePeriodInDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.GracePeriodInDays) {
		return nil, false
	}
	return o.GracePeriodInDays, true
}

// HasGracePeriodInDays returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasGracePeriodInDays() bool {
	if o != nil && !IsNil(o.GracePeriodInDays) {
		return true
	}

	return false
}

// SetGracePeriodInDays gets a reference to the given int32 and assigns it to the GracePeriodInDays field.
func (o *SupportEntitlementCreateDto) SetGracePeriodInDays(v int32) {
	o.GracePeriodInDays = &v
}

// GetCustomRenewalPeriod returns the CustomRenewalPeriod field value if set, zero value otherwise.
func (o *SupportEntitlementCreateDto) GetCustomRenewalPeriod() int32 {
	if o == nil || IsNil(o.CustomRenewalPeriod) {
		var ret int32
		return ret
	}
	return *o.CustomRenewalPeriod
}

// GetCustomRenewalPeriodOk returns a tuple with the CustomRenewalPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportEntitlementCreateDto) GetCustomRenewalPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.CustomRenewalPeriod) {
		return nil, false
	}
	return o.CustomRenewalPeriod, true
}

// HasCustomRenewalPeriod returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasCustomRenewalPeriod() bool {
	if o != nil && !IsNil(o.CustomRenewalPeriod) {
		return true
	}

	return false
}

// SetCustomRenewalPeriod gets a reference to the given int32 and assigns it to the CustomRenewalPeriod field.
func (o *SupportEntitlementCreateDto) SetCustomRenewalPeriod(v int32) {
	o.CustomRenewalPeriod = &v
}

// GetEnableAutomaticRenew returns the EnableAutomaticRenew field value if set, zero value otherwise.
func (o *SupportEntitlementCreateDto) GetEnableAutomaticRenew() bool {
	if o == nil || IsNil(o.EnableAutomaticRenew) {
		var ret bool
		return ret
	}
	return *o.EnableAutomaticRenew
}

// GetEnableAutomaticRenewOk returns a tuple with the EnableAutomaticRenew field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportEntitlementCreateDto) GetEnableAutomaticRenewOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAutomaticRenew) {
		return nil, false
	}
	return o.EnableAutomaticRenew, true
}

// HasEnableAutomaticRenew returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasEnableAutomaticRenew() bool {
	if o != nil && !IsNil(o.EnableAutomaticRenew) {
		return true
	}

	return false
}

// SetEnableAutomaticRenew gets a reference to the given bool and assigns it to the EnableAutomaticRenew field.
func (o *SupportEntitlementCreateDto) SetEnableAutomaticRenew(v bool) {
	o.EnableAutomaticRenew = &v
}

// GetEnableProRateBilling returns the EnableProRateBilling field value if set, zero value otherwise.
func (o *SupportEntitlementCreateDto) GetEnableProRateBilling() bool {
	if o == nil || IsNil(o.EnableProRateBilling) {
		var ret bool
		return ret
	}
	return *o.EnableProRateBilling
}

// GetEnableProRateBillingOk returns a tuple with the EnableProRateBilling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportEntitlementCreateDto) GetEnableProRateBillingOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableProRateBilling) {
		return nil, false
	}
	return o.EnableProRateBilling, true
}

// HasEnableProRateBilling returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasEnableProRateBilling() bool {
	if o != nil && !IsNil(o.EnableProRateBilling) {
		return true
	}

	return false
}

// SetEnableProRateBilling gets a reference to the given bool and assigns it to the EnableProRateBilling field.
func (o *SupportEntitlementCreateDto) SetEnableProRateBilling(v bool) {
	o.EnableProRateBilling = &v
}

// GetEnableUsageThreshold returns the EnableUsageThreshold field value if set, zero value otherwise.
func (o *SupportEntitlementCreateDto) GetEnableUsageThreshold() bool {
	if o == nil || IsNil(o.EnableUsageThreshold) {
		var ret bool
		return ret
	}
	return *o.EnableUsageThreshold
}

// GetEnableUsageThresholdOk returns a tuple with the EnableUsageThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportEntitlementCreateDto) GetEnableUsageThresholdOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableUsageThreshold) {
		return nil, false
	}
	return o.EnableUsageThreshold, true
}

// HasEnableUsageThreshold returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasEnableUsageThreshold() bool {
	if o != nil && !IsNil(o.EnableUsageThreshold) {
		return true
	}

	return false
}

// SetEnableUsageThreshold gets a reference to the given bool and assigns it to the EnableUsageThreshold field.
func (o *SupportEntitlementCreateDto) SetEnableUsageThreshold(v bool) {
	o.EnableUsageThreshold = &v
}

// GetEnableAutomaticDisable returns the EnableAutomaticDisable field value if set, zero value otherwise.
func (o *SupportEntitlementCreateDto) GetEnableAutomaticDisable() bool {
	if o == nil || IsNil(o.EnableAutomaticDisable) {
		var ret bool
		return ret
	}
	return *o.EnableAutomaticDisable
}

// GetEnableAutomaticDisableOk returns a tuple with the EnableAutomaticDisable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportEntitlementCreateDto) GetEnableAutomaticDisableOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAutomaticDisable) {
		return nil, false
	}
	return o.EnableAutomaticDisable, true
}

// HasEnableAutomaticDisable returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasEnableAutomaticDisable() bool {
	if o != nil && !IsNil(o.EnableAutomaticDisable) {
		return true
	}

	return false
}

// SetEnableAutomaticDisable gets a reference to the given bool and assigns it to the EnableAutomaticDisable field.
func (o *SupportEntitlementCreateDto) SetEnableAutomaticDisable(v bool) {
	o.EnableAutomaticDisable = &v
}

// GetEnableAutomaticPayments returns the EnableAutomaticPayments field value if set, zero value otherwise.
func (o *SupportEntitlementCreateDto) GetEnableAutomaticPayments() bool {
	if o == nil || IsNil(o.EnableAutomaticPayments) {
		var ret bool
		return ret
	}
	return *o.EnableAutomaticPayments
}

// GetEnableAutomaticPaymentsOk returns a tuple with the EnableAutomaticPayments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportEntitlementCreateDto) GetEnableAutomaticPaymentsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAutomaticPayments) {
		return nil, false
	}
	return o.EnableAutomaticPayments, true
}

// HasEnableAutomaticPayments returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasEnableAutomaticPayments() bool {
	if o != nil && !IsNil(o.EnableAutomaticPayments) {
		return true
	}

	return false
}

// SetEnableAutomaticPayments gets a reference to the given bool and assigns it to the EnableAutomaticPayments field.
func (o *SupportEntitlementCreateDto) SetEnableAutomaticPayments(v bool) {
	o.EnableAutomaticPayments = &v
}

// GetUsageThreshold returns the UsageThreshold field value if set, zero value otherwise.
func (o *SupportEntitlementCreateDto) GetUsageThreshold() int32 {
	if o == nil || IsNil(o.UsageThreshold) {
		var ret int32
		return ret
	}
	return *o.UsageThreshold
}

// GetUsageThresholdOk returns a tuple with the UsageThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportEntitlementCreateDto) GetUsageThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.UsageThreshold) {
		return nil, false
	}
	return o.UsageThreshold, true
}

// HasUsageThreshold returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasUsageThreshold() bool {
	if o != nil && !IsNil(o.UsageThreshold) {
		return true
	}

	return false
}

// SetUsageThreshold gets a reference to the given int32 and assigns it to the UsageThreshold field.
func (o *SupportEntitlementCreateDto) SetUsageThreshold(v int32) {
	o.UsageThreshold = &v
}

// GetData returns the Data field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetData() string {
	if o == nil || IsNil(o.Data.Get()) {
		var ret string
		return ret
	}
	return *o.Data.Get()
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data.Get(), o.Data.IsSet()
}

// HasData returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasData() bool {
	if o != nil && o.Data.IsSet() {
		return true
	}

	return false
}

// SetData gets a reference to the given NullableString and assigns it to the Data field.
func (o *SupportEntitlementCreateDto) SetData(v string) {
	o.Data.Set(&v)
}
// SetDataNil sets the value for Data to be an explicit nil
func (o *SupportEntitlementCreateDto) SetDataNil() {
	o.Data.Set(nil)
}

// UnsetData ensures that no value is present for Data, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetData() {
	o.Data.Unset()
}

// GetDataLabel returns the DataLabel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetDataLabel() string {
	if o == nil || IsNil(o.DataLabel.Get()) {
		var ret string
		return ret
	}
	return *o.DataLabel.Get()
}

// GetDataLabelOk returns a tuple with the DataLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetDataLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DataLabel.Get(), o.DataLabel.IsSet()
}

// HasDataLabel returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasDataLabel() bool {
	if o != nil && o.DataLabel.IsSet() {
		return true
	}

	return false
}

// SetDataLabel gets a reference to the given NullableString and assigns it to the DataLabel field.
func (o *SupportEntitlementCreateDto) SetDataLabel(v string) {
	o.DataLabel.Set(&v)
}
// SetDataLabelNil sets the value for DataLabel to be an explicit nil
func (o *SupportEntitlementCreateDto) SetDataLabelNil() {
	o.DataLabel.Set(nil)
}

// UnsetDataLabel ensures that no value is present for DataLabel, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetDataLabel() {
	o.DataLabel.Unset()
}

// GetData1 returns the Data1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetData1() string {
	if o == nil || IsNil(o.Data1.Get()) {
		var ret string
		return ret
	}
	return *o.Data1.Get()
}

// GetData1Ok returns a tuple with the Data1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetData1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data1.Get(), o.Data1.IsSet()
}

// HasData1 returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasData1() bool {
	if o != nil && o.Data1.IsSet() {
		return true
	}

	return false
}

// SetData1 gets a reference to the given NullableString and assigns it to the Data1 field.
func (o *SupportEntitlementCreateDto) SetData1(v string) {
	o.Data1.Set(&v)
}
// SetData1Nil sets the value for Data1 to be an explicit nil
func (o *SupportEntitlementCreateDto) SetData1Nil() {
	o.Data1.Set(nil)
}

// UnsetData1 ensures that no value is present for Data1, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetData1() {
	o.Data1.Unset()
}

// GetData1Label returns the Data1Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetData1Label() string {
	if o == nil || IsNil(o.Data1Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data1Label.Get()
}

// GetData1LabelOk returns a tuple with the Data1Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetData1LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data1Label.Get(), o.Data1Label.IsSet()
}

// HasData1Label returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasData1Label() bool {
	if o != nil && o.Data1Label.IsSet() {
		return true
	}

	return false
}

// SetData1Label gets a reference to the given NullableString and assigns it to the Data1Label field.
func (o *SupportEntitlementCreateDto) SetData1Label(v string) {
	o.Data1Label.Set(&v)
}
// SetData1LabelNil sets the value for Data1Label to be an explicit nil
func (o *SupportEntitlementCreateDto) SetData1LabelNil() {
	o.Data1Label.Set(nil)
}

// UnsetData1Label ensures that no value is present for Data1Label, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetData1Label() {
	o.Data1Label.Unset()
}

// GetData2 returns the Data2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetData2() string {
	if o == nil || IsNil(o.Data2.Get()) {
		var ret string
		return ret
	}
	return *o.Data2.Get()
}

// GetData2Ok returns a tuple with the Data2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetData2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data2.Get(), o.Data2.IsSet()
}

// HasData2 returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasData2() bool {
	if o != nil && o.Data2.IsSet() {
		return true
	}

	return false
}

// SetData2 gets a reference to the given NullableString and assigns it to the Data2 field.
func (o *SupportEntitlementCreateDto) SetData2(v string) {
	o.Data2.Set(&v)
}
// SetData2Nil sets the value for Data2 to be an explicit nil
func (o *SupportEntitlementCreateDto) SetData2Nil() {
	o.Data2.Set(nil)
}

// UnsetData2 ensures that no value is present for Data2, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetData2() {
	o.Data2.Unset()
}

// GetData2Label returns the Data2Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetData2Label() string {
	if o == nil || IsNil(o.Data2Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data2Label.Get()
}

// GetData2LabelOk returns a tuple with the Data2Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetData2LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data2Label.Get(), o.Data2Label.IsSet()
}

// HasData2Label returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasData2Label() bool {
	if o != nil && o.Data2Label.IsSet() {
		return true
	}

	return false
}

// SetData2Label gets a reference to the given NullableString and assigns it to the Data2Label field.
func (o *SupportEntitlementCreateDto) SetData2Label(v string) {
	o.Data2Label.Set(&v)
}
// SetData2LabelNil sets the value for Data2Label to be an explicit nil
func (o *SupportEntitlementCreateDto) SetData2LabelNil() {
	o.Data2Label.Set(nil)
}

// UnsetData2Label ensures that no value is present for Data2Label, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetData2Label() {
	o.Data2Label.Unset()
}

// GetData3 returns the Data3 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetData3() string {
	if o == nil || IsNil(o.Data3.Get()) {
		var ret string
		return ret
	}
	return *o.Data3.Get()
}

// GetData3Ok returns a tuple with the Data3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetData3Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data3.Get(), o.Data3.IsSet()
}

// HasData3 returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasData3() bool {
	if o != nil && o.Data3.IsSet() {
		return true
	}

	return false
}

// SetData3 gets a reference to the given NullableString and assigns it to the Data3 field.
func (o *SupportEntitlementCreateDto) SetData3(v string) {
	o.Data3.Set(&v)
}
// SetData3Nil sets the value for Data3 to be an explicit nil
func (o *SupportEntitlementCreateDto) SetData3Nil() {
	o.Data3.Set(nil)
}

// UnsetData3 ensures that no value is present for Data3, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetData3() {
	o.Data3.Unset()
}

// GetData3Label returns the Data3Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetData3Label() string {
	if o == nil || IsNil(o.Data3Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data3Label.Get()
}

// GetData3LabelOk returns a tuple with the Data3Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetData3LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data3Label.Get(), o.Data3Label.IsSet()
}

// HasData3Label returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasData3Label() bool {
	if o != nil && o.Data3Label.IsSet() {
		return true
	}

	return false
}

// SetData3Label gets a reference to the given NullableString and assigns it to the Data3Label field.
func (o *SupportEntitlementCreateDto) SetData3Label(v string) {
	o.Data3Label.Set(&v)
}
// SetData3LabelNil sets the value for Data3Label to be an explicit nil
func (o *SupportEntitlementCreateDto) SetData3LabelNil() {
	o.Data3Label.Set(nil)
}

// UnsetData3Label ensures that no value is present for Data3Label, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetData3Label() {
	o.Data3Label.Unset()
}

// GetData4 returns the Data4 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetData4() string {
	if o == nil || IsNil(o.Data4.Get()) {
		var ret string
		return ret
	}
	return *o.Data4.Get()
}

// GetData4Ok returns a tuple with the Data4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetData4Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data4.Get(), o.Data4.IsSet()
}

// HasData4 returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasData4() bool {
	if o != nil && o.Data4.IsSet() {
		return true
	}

	return false
}

// SetData4 gets a reference to the given NullableString and assigns it to the Data4 field.
func (o *SupportEntitlementCreateDto) SetData4(v string) {
	o.Data4.Set(&v)
}
// SetData4Nil sets the value for Data4 to be an explicit nil
func (o *SupportEntitlementCreateDto) SetData4Nil() {
	o.Data4.Set(nil)
}

// UnsetData4 ensures that no value is present for Data4, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetData4() {
	o.Data4.Unset()
}

// GetData4Label returns the Data4Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetData4Label() string {
	if o == nil || IsNil(o.Data4Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data4Label.Get()
}

// GetData4LabelOk returns a tuple with the Data4Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetData4LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data4Label.Get(), o.Data4Label.IsSet()
}

// HasData4Label returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasData4Label() bool {
	if o != nil && o.Data4Label.IsSet() {
		return true
	}

	return false
}

// SetData4Label gets a reference to the given NullableString and assigns it to the Data4Label field.
func (o *SupportEntitlementCreateDto) SetData4Label(v string) {
	o.Data4Label.Set(&v)
}
// SetData4LabelNil sets the value for Data4Label to be an explicit nil
func (o *SupportEntitlementCreateDto) SetData4LabelNil() {
	o.Data4Label.Set(nil)
}

// UnsetData4Label ensures that no value is present for Data4Label, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetData4Label() {
	o.Data4Label.Unset()
}

// GetData5 returns the Data5 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetData5() string {
	if o == nil || IsNil(o.Data5.Get()) {
		var ret string
		return ret
	}
	return *o.Data5.Get()
}

// GetData5Ok returns a tuple with the Data5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetData5Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data5.Get(), o.Data5.IsSet()
}

// HasData5 returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasData5() bool {
	if o != nil && o.Data5.IsSet() {
		return true
	}

	return false
}

// SetData5 gets a reference to the given NullableString and assigns it to the Data5 field.
func (o *SupportEntitlementCreateDto) SetData5(v string) {
	o.Data5.Set(&v)
}
// SetData5Nil sets the value for Data5 to be an explicit nil
func (o *SupportEntitlementCreateDto) SetData5Nil() {
	o.Data5.Set(nil)
}

// UnsetData5 ensures that no value is present for Data5, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetData5() {
	o.Data5.Unset()
}

// GetData5Label returns the Data5Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetData5Label() string {
	if o == nil || IsNil(o.Data5Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data5Label.Get()
}

// GetData5LabelOk returns a tuple with the Data5Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetData5LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data5Label.Get(), o.Data5Label.IsSet()
}

// HasData5Label returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasData5Label() bool {
	if o != nil && o.Data5Label.IsSet() {
		return true
	}

	return false
}

// SetData5Label gets a reference to the given NullableString and assigns it to the Data5Label field.
func (o *SupportEntitlementCreateDto) SetData5Label(v string) {
	o.Data5Label.Set(&v)
}
// SetData5LabelNil sets the value for Data5Label to be an explicit nil
func (o *SupportEntitlementCreateDto) SetData5LabelNil() {
	o.Data5Label.Set(nil)
}

// UnsetData5Label ensures that no value is present for Data5Label, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetData5Label() {
	o.Data5Label.Unset()
}

// GetData6 returns the Data6 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetData6() string {
	if o == nil || IsNil(o.Data6.Get()) {
		var ret string
		return ret
	}
	return *o.Data6.Get()
}

// GetData6Ok returns a tuple with the Data6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetData6Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data6.Get(), o.Data6.IsSet()
}

// HasData6 returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasData6() bool {
	if o != nil && o.Data6.IsSet() {
		return true
	}

	return false
}

// SetData6 gets a reference to the given NullableString and assigns it to the Data6 field.
func (o *SupportEntitlementCreateDto) SetData6(v string) {
	o.Data6.Set(&v)
}
// SetData6Nil sets the value for Data6 to be an explicit nil
func (o *SupportEntitlementCreateDto) SetData6Nil() {
	o.Data6.Set(nil)
}

// UnsetData6 ensures that no value is present for Data6, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetData6() {
	o.Data6.Unset()
}

// GetData6Label returns the Data6Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetData6Label() string {
	if o == nil || IsNil(o.Data6Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data6Label.Get()
}

// GetData6LabelOk returns a tuple with the Data6Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetData6LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data6Label.Get(), o.Data6Label.IsSet()
}

// HasData6Label returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasData6Label() bool {
	if o != nil && o.Data6Label.IsSet() {
		return true
	}

	return false
}

// SetData6Label gets a reference to the given NullableString and assigns it to the Data6Label field.
func (o *SupportEntitlementCreateDto) SetData6Label(v string) {
	o.Data6Label.Set(&v)
}
// SetData6LabelNil sets the value for Data6Label to be an explicit nil
func (o *SupportEntitlementCreateDto) SetData6LabelNil() {
	o.Data6Label.Set(nil)
}

// UnsetData6Label ensures that no value is present for Data6Label, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetData6Label() {
	o.Data6Label.Unset()
}

// GetData7 returns the Data7 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetData7() string {
	if o == nil || IsNil(o.Data7.Get()) {
		var ret string
		return ret
	}
	return *o.Data7.Get()
}

// GetData7Ok returns a tuple with the Data7 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetData7Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data7.Get(), o.Data7.IsSet()
}

// HasData7 returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasData7() bool {
	if o != nil && o.Data7.IsSet() {
		return true
	}

	return false
}

// SetData7 gets a reference to the given NullableString and assigns it to the Data7 field.
func (o *SupportEntitlementCreateDto) SetData7(v string) {
	o.Data7.Set(&v)
}
// SetData7Nil sets the value for Data7 to be an explicit nil
func (o *SupportEntitlementCreateDto) SetData7Nil() {
	o.Data7.Set(nil)
}

// UnsetData7 ensures that no value is present for Data7, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetData7() {
	o.Data7.Unset()
}

// GetData7Label returns the Data7Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetData7Label() string {
	if o == nil || IsNil(o.Data7Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data7Label.Get()
}

// GetData7LabelOk returns a tuple with the Data7Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetData7LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data7Label.Get(), o.Data7Label.IsSet()
}

// HasData7Label returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasData7Label() bool {
	if o != nil && o.Data7Label.IsSet() {
		return true
	}

	return false
}

// SetData7Label gets a reference to the given NullableString and assigns it to the Data7Label field.
func (o *SupportEntitlementCreateDto) SetData7Label(v string) {
	o.Data7Label.Set(&v)
}
// SetData7LabelNil sets the value for Data7Label to be an explicit nil
func (o *SupportEntitlementCreateDto) SetData7LabelNil() {
	o.Data7Label.Set(nil)
}

// UnsetData7Label ensures that no value is present for Data7Label, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetData7Label() {
	o.Data7Label.Unset()
}

// GetData8 returns the Data8 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetData8() string {
	if o == nil || IsNil(o.Data8.Get()) {
		var ret string
		return ret
	}
	return *o.Data8.Get()
}

// GetData8Ok returns a tuple with the Data8 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetData8Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data8.Get(), o.Data8.IsSet()
}

// HasData8 returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasData8() bool {
	if o != nil && o.Data8.IsSet() {
		return true
	}

	return false
}

// SetData8 gets a reference to the given NullableString and assigns it to the Data8 field.
func (o *SupportEntitlementCreateDto) SetData8(v string) {
	o.Data8.Set(&v)
}
// SetData8Nil sets the value for Data8 to be an explicit nil
func (o *SupportEntitlementCreateDto) SetData8Nil() {
	o.Data8.Set(nil)
}

// UnsetData8 ensures that no value is present for Data8, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetData8() {
	o.Data8.Unset()
}

// GetData8Label returns the Data8Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetData8Label() string {
	if o == nil || IsNil(o.Data8Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data8Label.Get()
}

// GetData8LabelOk returns a tuple with the Data8Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetData8LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data8Label.Get(), o.Data8Label.IsSet()
}

// HasData8Label returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasData8Label() bool {
	if o != nil && o.Data8Label.IsSet() {
		return true
	}

	return false
}

// SetData8Label gets a reference to the given NullableString and assigns it to the Data8Label field.
func (o *SupportEntitlementCreateDto) SetData8Label(v string) {
	o.Data8Label.Set(&v)
}
// SetData8LabelNil sets the value for Data8Label to be an explicit nil
func (o *SupportEntitlementCreateDto) SetData8LabelNil() {
	o.Data8Label.Set(nil)
}

// UnsetData8Label ensures that no value is present for Data8Label, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetData8Label() {
	o.Data8Label.Unset()
}

// GetData9 returns the Data9 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetData9() string {
	if o == nil || IsNil(o.Data9.Get()) {
		var ret string
		return ret
	}
	return *o.Data9.Get()
}

// GetData9Ok returns a tuple with the Data9 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetData9Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data9.Get(), o.Data9.IsSet()
}

// HasData9 returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasData9() bool {
	if o != nil && o.Data9.IsSet() {
		return true
	}

	return false
}

// SetData9 gets a reference to the given NullableString and assigns it to the Data9 field.
func (o *SupportEntitlementCreateDto) SetData9(v string) {
	o.Data9.Set(&v)
}
// SetData9Nil sets the value for Data9 to be an explicit nil
func (o *SupportEntitlementCreateDto) SetData9Nil() {
	o.Data9.Set(nil)
}

// UnsetData9 ensures that no value is present for Data9, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetData9() {
	o.Data9.Unset()
}

// GetData9Label returns the Data9Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetData9Label() string {
	if o == nil || IsNil(o.Data9Label.Get()) {
		var ret string
		return ret
	}
	return *o.Data9Label.Get()
}

// GetData9LabelOk returns a tuple with the Data9Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetData9LabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data9Label.Get(), o.Data9Label.IsSet()
}

// HasData9Label returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasData9Label() bool {
	if o != nil && o.Data9Label.IsSet() {
		return true
	}

	return false
}

// SetData9Label gets a reference to the given NullableString and assigns it to the Data9Label field.
func (o *SupportEntitlementCreateDto) SetData9Label(v string) {
	o.Data9Label.Set(&v)
}
// SetData9LabelNil sets the value for Data9Label to be an explicit nil
func (o *SupportEntitlementCreateDto) SetData9LabelNil() {
	o.Data9Label.Set(nil)
}

// UnsetData9Label ensures that no value is present for Data9Label, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetData9Label() {
	o.Data9Label.Unset()
}

// GetAccountHolderID returns the AccountHolderID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetAccountHolderID() string {
	if o == nil || IsNil(o.AccountHolderID.Get()) {
		var ret string
		return ret
	}
	return *o.AccountHolderID.Get()
}

// GetAccountHolderIDOk returns a tuple with the AccountHolderID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetAccountHolderIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountHolderID.Get(), o.AccountHolderID.IsSet()
}

// HasAccountHolderID returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasAccountHolderID() bool {
	if o != nil && o.AccountHolderID.IsSet() {
		return true
	}

	return false
}

// SetAccountHolderID gets a reference to the given NullableString and assigns it to the AccountHolderID field.
func (o *SupportEntitlementCreateDto) SetAccountHolderID(v string) {
	o.AccountHolderID.Set(&v)
}
// SetAccountHolderIDNil sets the value for AccountHolderID to be an explicit nil
func (o *SupportEntitlementCreateDto) SetAccountHolderIDNil() {
	o.AccountHolderID.Set(nil)
}

// UnsetAccountHolderID ensures that no value is present for AccountHolderID, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetAccountHolderID() {
	o.AccountHolderID.Unset()
}

// GetIndividualID returns the IndividualID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetIndividualID() string {
	if o == nil || IsNil(o.IndividualID.Get()) {
		var ret string
		return ret
	}
	return *o.IndividualID.Get()
}

// GetIndividualIDOk returns a tuple with the IndividualID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetIndividualIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IndividualID.Get(), o.IndividualID.IsSet()
}

// HasIndividualID returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasIndividualID() bool {
	if o != nil && o.IndividualID.IsSet() {
		return true
	}

	return false
}

// SetIndividualID gets a reference to the given NullableString and assigns it to the IndividualID field.
func (o *SupportEntitlementCreateDto) SetIndividualID(v string) {
	o.IndividualID.Set(&v)
}
// SetIndividualIDNil sets the value for IndividualID to be an explicit nil
func (o *SupportEntitlementCreateDto) SetIndividualIDNil() {
	o.IndividualID.Set(nil)
}

// UnsetIndividualID ensures that no value is present for IndividualID, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetIndividualID() {
	o.IndividualID.Unset()
}

// GetOrganizationID returns the OrganizationID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetOrganizationID() string {
	if o == nil || IsNil(o.OrganizationID.Get()) {
		var ret string
		return ret
	}
	return *o.OrganizationID.Get()
}

// GetOrganizationIDOk returns a tuple with the OrganizationID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetOrganizationIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationID.Get(), o.OrganizationID.IsSet()
}

// HasOrganizationID returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasOrganizationID() bool {
	if o != nil && o.OrganizationID.IsSet() {
		return true
	}

	return false
}

// SetOrganizationID gets a reference to the given NullableString and assigns it to the OrganizationID field.
func (o *SupportEntitlementCreateDto) SetOrganizationID(v string) {
	o.OrganizationID.Set(&v)
}
// SetOrganizationIDNil sets the value for OrganizationID to be an explicit nil
func (o *SupportEntitlementCreateDto) SetOrganizationIDNil() {
	o.OrganizationID.Set(nil)
}

// UnsetOrganizationID ensures that no value is present for OrganizationID, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetOrganizationID() {
	o.OrganizationID.Unset()
}

// GetReceiverBusinessID returns the ReceiverBusinessID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetReceiverBusinessID() string {
	if o == nil || IsNil(o.ReceiverBusinessID.Get()) {
		var ret string
		return ret
	}
	return *o.ReceiverBusinessID.Get()
}

// GetReceiverBusinessIDOk returns a tuple with the ReceiverBusinessID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetReceiverBusinessIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiverBusinessID.Get(), o.ReceiverBusinessID.IsSet()
}

// HasReceiverBusinessID returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasReceiverBusinessID() bool {
	if o != nil && o.ReceiverBusinessID.IsSet() {
		return true
	}

	return false
}

// SetReceiverBusinessID gets a reference to the given NullableString and assigns it to the ReceiverBusinessID field.
func (o *SupportEntitlementCreateDto) SetReceiverBusinessID(v string) {
	o.ReceiverBusinessID.Set(&v)
}
// SetReceiverBusinessIDNil sets the value for ReceiverBusinessID to be an explicit nil
func (o *SupportEntitlementCreateDto) SetReceiverBusinessIDNil() {
	o.ReceiverBusinessID.Set(nil)
}

// UnsetReceiverBusinessID ensures that no value is present for ReceiverBusinessID, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetReceiverBusinessID() {
	o.ReceiverBusinessID.Unset()
}

// GetBusinessID returns the BusinessID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetBusinessID() string {
	if o == nil || IsNil(o.BusinessID.Get()) {
		var ret string
		return ret
	}
	return *o.BusinessID.Get()
}

// GetBusinessIDOk returns a tuple with the BusinessID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetBusinessIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BusinessID.Get(), o.BusinessID.IsSet()
}

// HasBusinessID returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasBusinessID() bool {
	if o != nil && o.BusinessID.IsSet() {
		return true
	}

	return false
}

// SetBusinessID gets a reference to the given NullableString and assigns it to the BusinessID field.
func (o *SupportEntitlementCreateDto) SetBusinessID(v string) {
	o.BusinessID.Set(&v)
}
// SetBusinessIDNil sets the value for BusinessID to be an explicit nil
func (o *SupportEntitlementCreateDto) SetBusinessIDNil() {
	o.BusinessID.Set(nil)
}

// UnsetBusinessID ensures that no value is present for BusinessID, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetBusinessID() {
	o.BusinessID.Unset()
}

// GetBusinessProfileRecordID returns the BusinessProfileRecordID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetBusinessProfileRecordID() string {
	if o == nil || IsNil(o.BusinessProfileRecordID.Get()) {
		var ret string
		return ret
	}
	return *o.BusinessProfileRecordID.Get()
}

// GetBusinessProfileRecordIDOk returns a tuple with the BusinessProfileRecordID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetBusinessProfileRecordIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BusinessProfileRecordID.Get(), o.BusinessProfileRecordID.IsSet()
}

// HasBusinessProfileRecordID returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasBusinessProfileRecordID() bool {
	if o != nil && o.BusinessProfileRecordID.IsSet() {
		return true
	}

	return false
}

// SetBusinessProfileRecordID gets a reference to the given NullableString and assigns it to the BusinessProfileRecordID field.
func (o *SupportEntitlementCreateDto) SetBusinessProfileRecordID(v string) {
	o.BusinessProfileRecordID.Set(&v)
}
// SetBusinessProfileRecordIDNil sets the value for BusinessProfileRecordID to be an explicit nil
func (o *SupportEntitlementCreateDto) SetBusinessProfileRecordIDNil() {
	o.BusinessProfileRecordID.Set(nil)
}

// UnsetBusinessProfileRecordID ensures that no value is present for BusinessProfileRecordID, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetBusinessProfileRecordID() {
	o.BusinessProfileRecordID.Unset()
}

// GetPaymentTokenID returns the PaymentTokenID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetPaymentTokenID() string {
	if o == nil || IsNil(o.PaymentTokenID.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentTokenID.Get()
}

// GetPaymentTokenIDOk returns a tuple with the PaymentTokenID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetPaymentTokenIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentTokenID.Get(), o.PaymentTokenID.IsSet()
}

// HasPaymentTokenID returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasPaymentTokenID() bool {
	if o != nil && o.PaymentTokenID.IsSet() {
		return true
	}

	return false
}

// SetPaymentTokenID gets a reference to the given NullableString and assigns it to the PaymentTokenID field.
func (o *SupportEntitlementCreateDto) SetPaymentTokenID(v string) {
	o.PaymentTokenID.Set(&v)
}
// SetPaymentTokenIDNil sets the value for PaymentTokenID to be an explicit nil
func (o *SupportEntitlementCreateDto) SetPaymentTokenIDNil() {
	o.PaymentTokenID.Set(nil)
}

// UnsetPaymentTokenID ensures that no value is present for PaymentTokenID, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetPaymentTokenID() {
	o.PaymentTokenID.Unset()
}

// GetWalletAccountID returns the WalletAccountID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetWalletAccountID() string {
	if o == nil || IsNil(o.WalletAccountID.Get()) {
		var ret string
		return ret
	}
	return *o.WalletAccountID.Get()
}

// GetWalletAccountIDOk returns a tuple with the WalletAccountID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetWalletAccountIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WalletAccountID.Get(), o.WalletAccountID.IsSet()
}

// HasWalletAccountID returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasWalletAccountID() bool {
	if o != nil && o.WalletAccountID.IsSet() {
		return true
	}

	return false
}

// SetWalletAccountID gets a reference to the given NullableString and assigns it to the WalletAccountID field.
func (o *SupportEntitlementCreateDto) SetWalletAccountID(v string) {
	o.WalletAccountID.Set(&v)
}
// SetWalletAccountIDNil sets the value for WalletAccountID to be an explicit nil
func (o *SupportEntitlementCreateDto) SetWalletAccountIDNil() {
	o.WalletAccountID.Set(nil)
}

// UnsetWalletAccountID ensures that no value is present for WalletAccountID, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetWalletAccountID() {
	o.WalletAccountID.Unset()
}

// GetSecurityCertificateID returns the SecurityCertificateID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportEntitlementCreateDto) GetSecurityCertificateID() string {
	if o == nil || IsNil(o.SecurityCertificateID.Get()) {
		var ret string
		return ret
	}
	return *o.SecurityCertificateID.Get()
}

// GetSecurityCertificateIDOk returns a tuple with the SecurityCertificateID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportEntitlementCreateDto) GetSecurityCertificateIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecurityCertificateID.Get(), o.SecurityCertificateID.IsSet()
}

// HasSecurityCertificateID returns a boolean if a field has been set.
func (o *SupportEntitlementCreateDto) HasSecurityCertificateID() bool {
	if o != nil && o.SecurityCertificateID.IsSet() {
		return true
	}

	return false
}

// SetSecurityCertificateID gets a reference to the given NullableString and assigns it to the SecurityCertificateID field.
func (o *SupportEntitlementCreateDto) SetSecurityCertificateID(v string) {
	o.SecurityCertificateID.Set(&v)
}
// SetSecurityCertificateIDNil sets the value for SecurityCertificateID to be an explicit nil
func (o *SupportEntitlementCreateDto) SetSecurityCertificateIDNil() {
	o.SecurityCertificateID.Set(nil)
}

// UnsetSecurityCertificateID ensures that no value is present for SecurityCertificateID, not even an explicit nil
func (o *SupportEntitlementCreateDto) UnsetSecurityCertificateID() {
	o.SecurityCertificateID.Unset()
}

func (o SupportEntitlementCreateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SupportEntitlementCreateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.StartDateTime) {
		toSerialize["startDateTime"] = o.StartDateTime
	}
	if !IsNil(o.EndDateTime) {
		toSerialize["endDateTime"] = o.EndDateTime
	}
	if !IsNil(o.NextInvoiceDateTime) {
		toSerialize["nextInvoiceDateTime"] = o.NextInvoiceDateTime
	}
	if o.Code.IsSet() {
		toSerialize["code"] = o.Code.Get()
	}
	if o.Signature.IsSet() {
		toSerialize["signature"] = o.Signature.Get()
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.Repetitions) {
		toSerialize["repetitions"] = o.Repetitions
	}
	if !IsNil(o.ChargeAttempts) {
		toSerialize["chargeAttempts"] = o.ChargeAttempts
	}
	if !IsNil(o.FreeTrialInDays) {
		toSerialize["freeTrialInDays"] = o.FreeTrialInDays
	}
	if !IsNil(o.GracePeriodInDays) {
		toSerialize["gracePeriodInDays"] = o.GracePeriodInDays
	}
	if !IsNil(o.CustomRenewalPeriod) {
		toSerialize["customRenewalPeriod"] = o.CustomRenewalPeriod
	}
	if !IsNil(o.EnableAutomaticRenew) {
		toSerialize["enableAutomaticRenew"] = o.EnableAutomaticRenew
	}
	if !IsNil(o.EnableProRateBilling) {
		toSerialize["enableProRateBilling"] = o.EnableProRateBilling
	}
	if !IsNil(o.EnableUsageThreshold) {
		toSerialize["enableUsageThreshold"] = o.EnableUsageThreshold
	}
	if !IsNil(o.EnableAutomaticDisable) {
		toSerialize["enableAutomaticDisable"] = o.EnableAutomaticDisable
	}
	if !IsNil(o.EnableAutomaticPayments) {
		toSerialize["enableAutomaticPayments"] = o.EnableAutomaticPayments
	}
	if !IsNil(o.UsageThreshold) {
		toSerialize["usageThreshold"] = o.UsageThreshold
	}
	if o.Data.IsSet() {
		toSerialize["data"] = o.Data.Get()
	}
	if o.DataLabel.IsSet() {
		toSerialize["dataLabel"] = o.DataLabel.Get()
	}
	if o.Data1.IsSet() {
		toSerialize["data1"] = o.Data1.Get()
	}
	if o.Data1Label.IsSet() {
		toSerialize["data1Label"] = o.Data1Label.Get()
	}
	if o.Data2.IsSet() {
		toSerialize["data2"] = o.Data2.Get()
	}
	if o.Data2Label.IsSet() {
		toSerialize["data2Label"] = o.Data2Label.Get()
	}
	if o.Data3.IsSet() {
		toSerialize["data3"] = o.Data3.Get()
	}
	if o.Data3Label.IsSet() {
		toSerialize["data3Label"] = o.Data3Label.Get()
	}
	if o.Data4.IsSet() {
		toSerialize["data4"] = o.Data4.Get()
	}
	if o.Data4Label.IsSet() {
		toSerialize["data4Label"] = o.Data4Label.Get()
	}
	if o.Data5.IsSet() {
		toSerialize["data5"] = o.Data5.Get()
	}
	if o.Data5Label.IsSet() {
		toSerialize["data5Label"] = o.Data5Label.Get()
	}
	if o.Data6.IsSet() {
		toSerialize["data6"] = o.Data6.Get()
	}
	if o.Data6Label.IsSet() {
		toSerialize["data6Label"] = o.Data6Label.Get()
	}
	if o.Data7.IsSet() {
		toSerialize["data7"] = o.Data7.Get()
	}
	if o.Data7Label.IsSet() {
		toSerialize["data7Label"] = o.Data7Label.Get()
	}
	if o.Data8.IsSet() {
		toSerialize["data8"] = o.Data8.Get()
	}
	if o.Data8Label.IsSet() {
		toSerialize["data8Label"] = o.Data8Label.Get()
	}
	if o.Data9.IsSet() {
		toSerialize["data9"] = o.Data9.Get()
	}
	if o.Data9Label.IsSet() {
		toSerialize["data9Label"] = o.Data9Label.Get()
	}
	if o.AccountHolderID.IsSet() {
		toSerialize["accountHolderID"] = o.AccountHolderID.Get()
	}
	if o.IndividualID.IsSet() {
		toSerialize["individualID"] = o.IndividualID.Get()
	}
	if o.OrganizationID.IsSet() {
		toSerialize["organizationID"] = o.OrganizationID.Get()
	}
	if o.ReceiverBusinessID.IsSet() {
		toSerialize["receiverBusinessID"] = o.ReceiverBusinessID.Get()
	}
	if o.BusinessID.IsSet() {
		toSerialize["businessID"] = o.BusinessID.Get()
	}
	if o.BusinessProfileRecordID.IsSet() {
		toSerialize["businessProfileRecordID"] = o.BusinessProfileRecordID.Get()
	}
	if o.PaymentTokenID.IsSet() {
		toSerialize["paymentTokenID"] = o.PaymentTokenID.Get()
	}
	if o.WalletAccountID.IsSet() {
		toSerialize["walletAccountID"] = o.WalletAccountID.Get()
	}
	if o.SecurityCertificateID.IsSet() {
		toSerialize["securityCertificateID"] = o.SecurityCertificateID.Get()
	}
	return toSerialize, nil
}

type NullableSupportEntitlementCreateDto struct {
	value *SupportEntitlementCreateDto
	isSet bool
}

func (v NullableSupportEntitlementCreateDto) Get() *SupportEntitlementCreateDto {
	return v.value
}

func (v *NullableSupportEntitlementCreateDto) Set(val *SupportEntitlementCreateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSupportEntitlementCreateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSupportEntitlementCreateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupportEntitlementCreateDto(val *SupportEntitlementCreateDto) *NullableSupportEntitlementCreateDto {
	return &NullableSupportEntitlementCreateDto{value: val, isSet: true}
}

func (v NullableSupportEntitlementCreateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupportEntitlementCreateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


