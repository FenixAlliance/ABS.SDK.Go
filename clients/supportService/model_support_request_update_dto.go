/*
SupportService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the SupportRequestUpdateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SupportRequestUpdateDto{}

// SupportRequestUpdateDto struct for SupportRequestUpdateDto
type SupportRequestUpdateDto struct {
	Title NullableString `json:"title,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Approved *bool `json:"approved,omitempty"`
	ApprovedTimestamp *time.Time `json:"approvedTimestamp,omitempty"`
	SupportEntitlementID NullableString `json:"supportEntitlementID,omitempty"`
}

// NewSupportRequestUpdateDto instantiates a new SupportRequestUpdateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSupportRequestUpdateDto() *SupportRequestUpdateDto {
	this := SupportRequestUpdateDto{}
	return &this
}

// NewSupportRequestUpdateDtoWithDefaults instantiates a new SupportRequestUpdateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSupportRequestUpdateDtoWithDefaults() *SupportRequestUpdateDto {
	this := SupportRequestUpdateDto{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportRequestUpdateDto) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportRequestUpdateDto) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *SupportRequestUpdateDto) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *SupportRequestUpdateDto) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *SupportRequestUpdateDto) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *SupportRequestUpdateDto) UnsetTitle() {
	o.Title.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportRequestUpdateDto) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportRequestUpdateDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *SupportRequestUpdateDto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *SupportRequestUpdateDto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *SupportRequestUpdateDto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *SupportRequestUpdateDto) UnsetDescription() {
	o.Description.Unset()
}

// GetApproved returns the Approved field value if set, zero value otherwise.
func (o *SupportRequestUpdateDto) GetApproved() bool {
	if o == nil || IsNil(o.Approved) {
		var ret bool
		return ret
	}
	return *o.Approved
}

// GetApprovedOk returns a tuple with the Approved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportRequestUpdateDto) GetApprovedOk() (*bool, bool) {
	if o == nil || IsNil(o.Approved) {
		return nil, false
	}
	return o.Approved, true
}

// HasApproved returns a boolean if a field has been set.
func (o *SupportRequestUpdateDto) HasApproved() bool {
	if o != nil && !IsNil(o.Approved) {
		return true
	}

	return false
}

// SetApproved gets a reference to the given bool and assigns it to the Approved field.
func (o *SupportRequestUpdateDto) SetApproved(v bool) {
	o.Approved = &v
}

// GetApprovedTimestamp returns the ApprovedTimestamp field value if set, zero value otherwise.
func (o *SupportRequestUpdateDto) GetApprovedTimestamp() time.Time {
	if o == nil || IsNil(o.ApprovedTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.ApprovedTimestamp
}

// GetApprovedTimestampOk returns a tuple with the ApprovedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportRequestUpdateDto) GetApprovedTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ApprovedTimestamp) {
		return nil, false
	}
	return o.ApprovedTimestamp, true
}

// HasApprovedTimestamp returns a boolean if a field has been set.
func (o *SupportRequestUpdateDto) HasApprovedTimestamp() bool {
	if o != nil && !IsNil(o.ApprovedTimestamp) {
		return true
	}

	return false
}

// SetApprovedTimestamp gets a reference to the given time.Time and assigns it to the ApprovedTimestamp field.
func (o *SupportRequestUpdateDto) SetApprovedTimestamp(v time.Time) {
	o.ApprovedTimestamp = &v
}

// GetSupportEntitlementID returns the SupportEntitlementID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportRequestUpdateDto) GetSupportEntitlementID() string {
	if o == nil || IsNil(o.SupportEntitlementID.Get()) {
		var ret string
		return ret
	}
	return *o.SupportEntitlementID.Get()
}

// GetSupportEntitlementIDOk returns a tuple with the SupportEntitlementID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportRequestUpdateDto) GetSupportEntitlementIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SupportEntitlementID.Get(), o.SupportEntitlementID.IsSet()
}

// HasSupportEntitlementID returns a boolean if a field has been set.
func (o *SupportRequestUpdateDto) HasSupportEntitlementID() bool {
	if o != nil && o.SupportEntitlementID.IsSet() {
		return true
	}

	return false
}

// SetSupportEntitlementID gets a reference to the given NullableString and assigns it to the SupportEntitlementID field.
func (o *SupportRequestUpdateDto) SetSupportEntitlementID(v string) {
	o.SupportEntitlementID.Set(&v)
}
// SetSupportEntitlementIDNil sets the value for SupportEntitlementID to be an explicit nil
func (o *SupportRequestUpdateDto) SetSupportEntitlementIDNil() {
	o.SupportEntitlementID.Set(nil)
}

// UnsetSupportEntitlementID ensures that no value is present for SupportEntitlementID, not even an explicit nil
func (o *SupportRequestUpdateDto) UnsetSupportEntitlementID() {
	o.SupportEntitlementID.Unset()
}

func (o SupportRequestUpdateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SupportRequestUpdateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.Approved) {
		toSerialize["approved"] = o.Approved
	}
	if !IsNil(o.ApprovedTimestamp) {
		toSerialize["approvedTimestamp"] = o.ApprovedTimestamp
	}
	if o.SupportEntitlementID.IsSet() {
		toSerialize["supportEntitlementID"] = o.SupportEntitlementID.Get()
	}
	return toSerialize, nil
}

type NullableSupportRequestUpdateDto struct {
	value *SupportRequestUpdateDto
	isSet bool
}

func (v NullableSupportRequestUpdateDto) Get() *SupportRequestUpdateDto {
	return v.value
}

func (v *NullableSupportRequestUpdateDto) Set(val *SupportRequestUpdateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSupportRequestUpdateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSupportRequestUpdateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupportRequestUpdateDto(val *SupportRequestUpdateDto) *NullableSupportRequestUpdateDto {
	return &NullableSupportRequestUpdateDto{value: val, isSet: true}
}

func (v NullableSupportRequestUpdateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupportRequestUpdateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


