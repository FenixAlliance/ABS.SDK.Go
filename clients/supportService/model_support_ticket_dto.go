/*
SupportService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the SupportTicketDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SupportTicketDto{}

// SupportTicketDto struct for SupportTicketDto
type SupportTicketDto struct {
	Id NullableString `json:"id,omitempty"`
	Timestamp NullableTime `json:"timestamp,omitempty"`
	Description NullableString `json:"description,omitempty"`
	AccountHolderID NullableString `json:"accountHolderID,omitempty"`
	ContactID NullableString `json:"contactID,omitempty"`
	BusinessID NullableString `json:"businessID,omitempty"`
	BusinessProfileRecordID NullableString `json:"businessProfileRecordID,omitempty"`
	SupportTicketTypeID NullableString `json:"supportTicketTypeID,omitempty"`
	SupportEntitlementID NullableString `json:"supportEntitlementID,omitempty"`
	SupportPriorityID NullableString `json:"supportPriorityID,omitempty"`
}

// NewSupportTicketDto instantiates a new SupportTicketDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSupportTicketDto() *SupportTicketDto {
	this := SupportTicketDto{}
	return &this
}

// NewSupportTicketDtoWithDefaults instantiates a new SupportTicketDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSupportTicketDtoWithDefaults() *SupportTicketDto {
	this := SupportTicketDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportTicketDto) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportTicketDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *SupportTicketDto) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *SupportTicketDto) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *SupportTicketDto) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *SupportTicketDto) UnsetId() {
	o.Id.Unset()
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportTicketDto) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp.Get()
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportTicketDto) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timestamp.Get(), o.Timestamp.IsSet()
}

// HasTimestamp returns a boolean if a field has been set.
func (o *SupportTicketDto) HasTimestamp() bool {
	if o != nil && o.Timestamp.IsSet() {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given NullableTime and assigns it to the Timestamp field.
func (o *SupportTicketDto) SetTimestamp(v time.Time) {
	o.Timestamp.Set(&v)
}
// SetTimestampNil sets the value for Timestamp to be an explicit nil
func (o *SupportTicketDto) SetTimestampNil() {
	o.Timestamp.Set(nil)
}

// UnsetTimestamp ensures that no value is present for Timestamp, not even an explicit nil
func (o *SupportTicketDto) UnsetTimestamp() {
	o.Timestamp.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportTicketDto) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportTicketDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *SupportTicketDto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *SupportTicketDto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *SupportTicketDto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *SupportTicketDto) UnsetDescription() {
	o.Description.Unset()
}

// GetAccountHolderID returns the AccountHolderID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportTicketDto) GetAccountHolderID() string {
	if o == nil || IsNil(o.AccountHolderID.Get()) {
		var ret string
		return ret
	}
	return *o.AccountHolderID.Get()
}

// GetAccountHolderIDOk returns a tuple with the AccountHolderID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportTicketDto) GetAccountHolderIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountHolderID.Get(), o.AccountHolderID.IsSet()
}

// HasAccountHolderID returns a boolean if a field has been set.
func (o *SupportTicketDto) HasAccountHolderID() bool {
	if o != nil && o.AccountHolderID.IsSet() {
		return true
	}

	return false
}

// SetAccountHolderID gets a reference to the given NullableString and assigns it to the AccountHolderID field.
func (o *SupportTicketDto) SetAccountHolderID(v string) {
	o.AccountHolderID.Set(&v)
}
// SetAccountHolderIDNil sets the value for AccountHolderID to be an explicit nil
func (o *SupportTicketDto) SetAccountHolderIDNil() {
	o.AccountHolderID.Set(nil)
}

// UnsetAccountHolderID ensures that no value is present for AccountHolderID, not even an explicit nil
func (o *SupportTicketDto) UnsetAccountHolderID() {
	o.AccountHolderID.Unset()
}

// GetContactID returns the ContactID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportTicketDto) GetContactID() string {
	if o == nil || IsNil(o.ContactID.Get()) {
		var ret string
		return ret
	}
	return *o.ContactID.Get()
}

// GetContactIDOk returns a tuple with the ContactID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportTicketDto) GetContactIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContactID.Get(), o.ContactID.IsSet()
}

// HasContactID returns a boolean if a field has been set.
func (o *SupportTicketDto) HasContactID() bool {
	if o != nil && o.ContactID.IsSet() {
		return true
	}

	return false
}

// SetContactID gets a reference to the given NullableString and assigns it to the ContactID field.
func (o *SupportTicketDto) SetContactID(v string) {
	o.ContactID.Set(&v)
}
// SetContactIDNil sets the value for ContactID to be an explicit nil
func (o *SupportTicketDto) SetContactIDNil() {
	o.ContactID.Set(nil)
}

// UnsetContactID ensures that no value is present for ContactID, not even an explicit nil
func (o *SupportTicketDto) UnsetContactID() {
	o.ContactID.Unset()
}

// GetBusinessID returns the BusinessID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportTicketDto) GetBusinessID() string {
	if o == nil || IsNil(o.BusinessID.Get()) {
		var ret string
		return ret
	}
	return *o.BusinessID.Get()
}

// GetBusinessIDOk returns a tuple with the BusinessID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportTicketDto) GetBusinessIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BusinessID.Get(), o.BusinessID.IsSet()
}

// HasBusinessID returns a boolean if a field has been set.
func (o *SupportTicketDto) HasBusinessID() bool {
	if o != nil && o.BusinessID.IsSet() {
		return true
	}

	return false
}

// SetBusinessID gets a reference to the given NullableString and assigns it to the BusinessID field.
func (o *SupportTicketDto) SetBusinessID(v string) {
	o.BusinessID.Set(&v)
}
// SetBusinessIDNil sets the value for BusinessID to be an explicit nil
func (o *SupportTicketDto) SetBusinessIDNil() {
	o.BusinessID.Set(nil)
}

// UnsetBusinessID ensures that no value is present for BusinessID, not even an explicit nil
func (o *SupportTicketDto) UnsetBusinessID() {
	o.BusinessID.Unset()
}

// GetBusinessProfileRecordID returns the BusinessProfileRecordID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportTicketDto) GetBusinessProfileRecordID() string {
	if o == nil || IsNil(o.BusinessProfileRecordID.Get()) {
		var ret string
		return ret
	}
	return *o.BusinessProfileRecordID.Get()
}

// GetBusinessProfileRecordIDOk returns a tuple with the BusinessProfileRecordID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportTicketDto) GetBusinessProfileRecordIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BusinessProfileRecordID.Get(), o.BusinessProfileRecordID.IsSet()
}

// HasBusinessProfileRecordID returns a boolean if a field has been set.
func (o *SupportTicketDto) HasBusinessProfileRecordID() bool {
	if o != nil && o.BusinessProfileRecordID.IsSet() {
		return true
	}

	return false
}

// SetBusinessProfileRecordID gets a reference to the given NullableString and assigns it to the BusinessProfileRecordID field.
func (o *SupportTicketDto) SetBusinessProfileRecordID(v string) {
	o.BusinessProfileRecordID.Set(&v)
}
// SetBusinessProfileRecordIDNil sets the value for BusinessProfileRecordID to be an explicit nil
func (o *SupportTicketDto) SetBusinessProfileRecordIDNil() {
	o.BusinessProfileRecordID.Set(nil)
}

// UnsetBusinessProfileRecordID ensures that no value is present for BusinessProfileRecordID, not even an explicit nil
func (o *SupportTicketDto) UnsetBusinessProfileRecordID() {
	o.BusinessProfileRecordID.Unset()
}

// GetSupportTicketTypeID returns the SupportTicketTypeID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportTicketDto) GetSupportTicketTypeID() string {
	if o == nil || IsNil(o.SupportTicketTypeID.Get()) {
		var ret string
		return ret
	}
	return *o.SupportTicketTypeID.Get()
}

// GetSupportTicketTypeIDOk returns a tuple with the SupportTicketTypeID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportTicketDto) GetSupportTicketTypeIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SupportTicketTypeID.Get(), o.SupportTicketTypeID.IsSet()
}

// HasSupportTicketTypeID returns a boolean if a field has been set.
func (o *SupportTicketDto) HasSupportTicketTypeID() bool {
	if o != nil && o.SupportTicketTypeID.IsSet() {
		return true
	}

	return false
}

// SetSupportTicketTypeID gets a reference to the given NullableString and assigns it to the SupportTicketTypeID field.
func (o *SupportTicketDto) SetSupportTicketTypeID(v string) {
	o.SupportTicketTypeID.Set(&v)
}
// SetSupportTicketTypeIDNil sets the value for SupportTicketTypeID to be an explicit nil
func (o *SupportTicketDto) SetSupportTicketTypeIDNil() {
	o.SupportTicketTypeID.Set(nil)
}

// UnsetSupportTicketTypeID ensures that no value is present for SupportTicketTypeID, not even an explicit nil
func (o *SupportTicketDto) UnsetSupportTicketTypeID() {
	o.SupportTicketTypeID.Unset()
}

// GetSupportEntitlementID returns the SupportEntitlementID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportTicketDto) GetSupportEntitlementID() string {
	if o == nil || IsNil(o.SupportEntitlementID.Get()) {
		var ret string
		return ret
	}
	return *o.SupportEntitlementID.Get()
}

// GetSupportEntitlementIDOk returns a tuple with the SupportEntitlementID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportTicketDto) GetSupportEntitlementIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SupportEntitlementID.Get(), o.SupportEntitlementID.IsSet()
}

// HasSupportEntitlementID returns a boolean if a field has been set.
func (o *SupportTicketDto) HasSupportEntitlementID() bool {
	if o != nil && o.SupportEntitlementID.IsSet() {
		return true
	}

	return false
}

// SetSupportEntitlementID gets a reference to the given NullableString and assigns it to the SupportEntitlementID field.
func (o *SupportTicketDto) SetSupportEntitlementID(v string) {
	o.SupportEntitlementID.Set(&v)
}
// SetSupportEntitlementIDNil sets the value for SupportEntitlementID to be an explicit nil
func (o *SupportTicketDto) SetSupportEntitlementIDNil() {
	o.SupportEntitlementID.Set(nil)
}

// UnsetSupportEntitlementID ensures that no value is present for SupportEntitlementID, not even an explicit nil
func (o *SupportTicketDto) UnsetSupportEntitlementID() {
	o.SupportEntitlementID.Unset()
}

// GetSupportPriorityID returns the SupportPriorityID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupportTicketDto) GetSupportPriorityID() string {
	if o == nil || IsNil(o.SupportPriorityID.Get()) {
		var ret string
		return ret
	}
	return *o.SupportPriorityID.Get()
}

// GetSupportPriorityIDOk returns a tuple with the SupportPriorityID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupportTicketDto) GetSupportPriorityIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SupportPriorityID.Get(), o.SupportPriorityID.IsSet()
}

// HasSupportPriorityID returns a boolean if a field has been set.
func (o *SupportTicketDto) HasSupportPriorityID() bool {
	if o != nil && o.SupportPriorityID.IsSet() {
		return true
	}

	return false
}

// SetSupportPriorityID gets a reference to the given NullableString and assigns it to the SupportPriorityID field.
func (o *SupportTicketDto) SetSupportPriorityID(v string) {
	o.SupportPriorityID.Set(&v)
}
// SetSupportPriorityIDNil sets the value for SupportPriorityID to be an explicit nil
func (o *SupportTicketDto) SetSupportPriorityIDNil() {
	o.SupportPriorityID.Set(nil)
}

// UnsetSupportPriorityID ensures that no value is present for SupportPriorityID, not even an explicit nil
func (o *SupportTicketDto) UnsetSupportPriorityID() {
	o.SupportPriorityID.Unset()
}

func (o SupportTicketDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SupportTicketDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Timestamp.IsSet() {
		toSerialize["timestamp"] = o.Timestamp.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.AccountHolderID.IsSet() {
		toSerialize["accountHolderID"] = o.AccountHolderID.Get()
	}
	if o.ContactID.IsSet() {
		toSerialize["contactID"] = o.ContactID.Get()
	}
	if o.BusinessID.IsSet() {
		toSerialize["businessID"] = o.BusinessID.Get()
	}
	if o.BusinessProfileRecordID.IsSet() {
		toSerialize["businessProfileRecordID"] = o.BusinessProfileRecordID.Get()
	}
	if o.SupportTicketTypeID.IsSet() {
		toSerialize["supportTicketTypeID"] = o.SupportTicketTypeID.Get()
	}
	if o.SupportEntitlementID.IsSet() {
		toSerialize["supportEntitlementID"] = o.SupportEntitlementID.Get()
	}
	if o.SupportPriorityID.IsSet() {
		toSerialize["supportPriorityID"] = o.SupportPriorityID.Get()
	}
	return toSerialize, nil
}

type NullableSupportTicketDto struct {
	value *SupportTicketDto
	isSet bool
}

func (v NullableSupportTicketDto) Get() *SupportTicketDto {
	return v.value
}

func (v *NullableSupportTicketDto) Set(val *SupportTicketDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSupportTicketDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSupportTicketDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupportTicketDto(val *SupportTicketDto) *NullableSupportTicketDto {
	return &NullableSupportTicketDto{value: val, isSet: true}
}

func (v NullableSupportTicketDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupportTicketDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


