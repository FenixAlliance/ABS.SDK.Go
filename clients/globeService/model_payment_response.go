/*
GlobeService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PaymentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentResponse{}

// PaymentResponse struct for PaymentResponse
type PaymentResponse struct {
	Test *bool `json:"test,omitempty"`
	Ip NullableString `json:"ip,omitempty"`
	Bank NullableString `json:"bank,omitempty"`
	Status NullableString `json:"status,omitempty"`
	Errors interface{} `json:"errors,omitempty"`
	Response NullableString `json:"response,omitempty"`
	AuthCode NullableString `json:"authCode,omitempty"`
	PaymentID NullableString `json:"paymentID,omitempty"`
	Franchise NullableString `json:"franchise,omitempty"`
	Signature NullableString `json:"signature,omitempty"`
	PaymentStatus *int32 `json:"paymentStatus,omitempty"`
}

// NewPaymentResponse instantiates a new PaymentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentResponse() *PaymentResponse {
	this := PaymentResponse{}
	return &this
}

// NewPaymentResponseWithDefaults instantiates a new PaymentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentResponseWithDefaults() *PaymentResponse {
	this := PaymentResponse{}
	return &this
}

// GetTest returns the Test field value if set, zero value otherwise.
func (o *PaymentResponse) GetTest() bool {
	if o == nil || IsNil(o.Test) {
		var ret bool
		return ret
	}
	return *o.Test
}

// GetTestOk returns a tuple with the Test field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentResponse) GetTestOk() (*bool, bool) {
	if o == nil || IsNil(o.Test) {
		return nil, false
	}
	return o.Test, true
}

// HasTest returns a boolean if a field has been set.
func (o *PaymentResponse) HasTest() bool {
	if o != nil && !IsNil(o.Test) {
		return true
	}

	return false
}

// SetTest gets a reference to the given bool and assigns it to the Test field.
func (o *PaymentResponse) SetTest(v bool) {
	o.Test = &v
}

// GetIp returns the Ip field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentResponse) GetIp() string {
	if o == nil || IsNil(o.Ip.Get()) {
		var ret string
		return ret
	}
	return *o.Ip.Get()
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentResponse) GetIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ip.Get(), o.Ip.IsSet()
}

// HasIp returns a boolean if a field has been set.
func (o *PaymentResponse) HasIp() bool {
	if o != nil && o.Ip.IsSet() {
		return true
	}

	return false
}

// SetIp gets a reference to the given NullableString and assigns it to the Ip field.
func (o *PaymentResponse) SetIp(v string) {
	o.Ip.Set(&v)
}
// SetIpNil sets the value for Ip to be an explicit nil
func (o *PaymentResponse) SetIpNil() {
	o.Ip.Set(nil)
}

// UnsetIp ensures that no value is present for Ip, not even an explicit nil
func (o *PaymentResponse) UnsetIp() {
	o.Ip.Unset()
}

// GetBank returns the Bank field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentResponse) GetBank() string {
	if o == nil || IsNil(o.Bank.Get()) {
		var ret string
		return ret
	}
	return *o.Bank.Get()
}

// GetBankOk returns a tuple with the Bank field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentResponse) GetBankOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bank.Get(), o.Bank.IsSet()
}

// HasBank returns a boolean if a field has been set.
func (o *PaymentResponse) HasBank() bool {
	if o != nil && o.Bank.IsSet() {
		return true
	}

	return false
}

// SetBank gets a reference to the given NullableString and assigns it to the Bank field.
func (o *PaymentResponse) SetBank(v string) {
	o.Bank.Set(&v)
}
// SetBankNil sets the value for Bank to be an explicit nil
func (o *PaymentResponse) SetBankNil() {
	o.Bank.Set(nil)
}

// UnsetBank ensures that no value is present for Bank, not even an explicit nil
func (o *PaymentResponse) UnsetBank() {
	o.Bank.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentResponse) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentResponse) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *PaymentResponse) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *PaymentResponse) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *PaymentResponse) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *PaymentResponse) UnsetStatus() {
	o.Status.Unset()
}

// GetErrors returns the Errors field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentResponse) GetErrors() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentResponse) GetErrorsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return &o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *PaymentResponse) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given interface{} and assigns it to the Errors field.
func (o *PaymentResponse) SetErrors(v interface{}) {
	o.Errors = v
}

// GetResponse returns the Response field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentResponse) GetResponse() string {
	if o == nil || IsNil(o.Response.Get()) {
		var ret string
		return ret
	}
	return *o.Response.Get()
}

// GetResponseOk returns a tuple with the Response field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentResponse) GetResponseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Response.Get(), o.Response.IsSet()
}

// HasResponse returns a boolean if a field has been set.
func (o *PaymentResponse) HasResponse() bool {
	if o != nil && o.Response.IsSet() {
		return true
	}

	return false
}

// SetResponse gets a reference to the given NullableString and assigns it to the Response field.
func (o *PaymentResponse) SetResponse(v string) {
	o.Response.Set(&v)
}
// SetResponseNil sets the value for Response to be an explicit nil
func (o *PaymentResponse) SetResponseNil() {
	o.Response.Set(nil)
}

// UnsetResponse ensures that no value is present for Response, not even an explicit nil
func (o *PaymentResponse) UnsetResponse() {
	o.Response.Unset()
}

// GetAuthCode returns the AuthCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentResponse) GetAuthCode() string {
	if o == nil || IsNil(o.AuthCode.Get()) {
		var ret string
		return ret
	}
	return *o.AuthCode.Get()
}

// GetAuthCodeOk returns a tuple with the AuthCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentResponse) GetAuthCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthCode.Get(), o.AuthCode.IsSet()
}

// HasAuthCode returns a boolean if a field has been set.
func (o *PaymentResponse) HasAuthCode() bool {
	if o != nil && o.AuthCode.IsSet() {
		return true
	}

	return false
}

// SetAuthCode gets a reference to the given NullableString and assigns it to the AuthCode field.
func (o *PaymentResponse) SetAuthCode(v string) {
	o.AuthCode.Set(&v)
}
// SetAuthCodeNil sets the value for AuthCode to be an explicit nil
func (o *PaymentResponse) SetAuthCodeNil() {
	o.AuthCode.Set(nil)
}

// UnsetAuthCode ensures that no value is present for AuthCode, not even an explicit nil
func (o *PaymentResponse) UnsetAuthCode() {
	o.AuthCode.Unset()
}

// GetPaymentID returns the PaymentID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentResponse) GetPaymentID() string {
	if o == nil || IsNil(o.PaymentID.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentID.Get()
}

// GetPaymentIDOk returns a tuple with the PaymentID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentResponse) GetPaymentIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentID.Get(), o.PaymentID.IsSet()
}

// HasPaymentID returns a boolean if a field has been set.
func (o *PaymentResponse) HasPaymentID() bool {
	if o != nil && o.PaymentID.IsSet() {
		return true
	}

	return false
}

// SetPaymentID gets a reference to the given NullableString and assigns it to the PaymentID field.
func (o *PaymentResponse) SetPaymentID(v string) {
	o.PaymentID.Set(&v)
}
// SetPaymentIDNil sets the value for PaymentID to be an explicit nil
func (o *PaymentResponse) SetPaymentIDNil() {
	o.PaymentID.Set(nil)
}

// UnsetPaymentID ensures that no value is present for PaymentID, not even an explicit nil
func (o *PaymentResponse) UnsetPaymentID() {
	o.PaymentID.Unset()
}

// GetFranchise returns the Franchise field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentResponse) GetFranchise() string {
	if o == nil || IsNil(o.Franchise.Get()) {
		var ret string
		return ret
	}
	return *o.Franchise.Get()
}

// GetFranchiseOk returns a tuple with the Franchise field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentResponse) GetFranchiseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Franchise.Get(), o.Franchise.IsSet()
}

// HasFranchise returns a boolean if a field has been set.
func (o *PaymentResponse) HasFranchise() bool {
	if o != nil && o.Franchise.IsSet() {
		return true
	}

	return false
}

// SetFranchise gets a reference to the given NullableString and assigns it to the Franchise field.
func (o *PaymentResponse) SetFranchise(v string) {
	o.Franchise.Set(&v)
}
// SetFranchiseNil sets the value for Franchise to be an explicit nil
func (o *PaymentResponse) SetFranchiseNil() {
	o.Franchise.Set(nil)
}

// UnsetFranchise ensures that no value is present for Franchise, not even an explicit nil
func (o *PaymentResponse) UnsetFranchise() {
	o.Franchise.Unset()
}

// GetSignature returns the Signature field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentResponse) GetSignature() string {
	if o == nil || IsNil(o.Signature.Get()) {
		var ret string
		return ret
	}
	return *o.Signature.Get()
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentResponse) GetSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Signature.Get(), o.Signature.IsSet()
}

// HasSignature returns a boolean if a field has been set.
func (o *PaymentResponse) HasSignature() bool {
	if o != nil && o.Signature.IsSet() {
		return true
	}

	return false
}

// SetSignature gets a reference to the given NullableString and assigns it to the Signature field.
func (o *PaymentResponse) SetSignature(v string) {
	o.Signature.Set(&v)
}
// SetSignatureNil sets the value for Signature to be an explicit nil
func (o *PaymentResponse) SetSignatureNil() {
	o.Signature.Set(nil)
}

// UnsetSignature ensures that no value is present for Signature, not even an explicit nil
func (o *PaymentResponse) UnsetSignature() {
	o.Signature.Unset()
}

// GetPaymentStatus returns the PaymentStatus field value if set, zero value otherwise.
func (o *PaymentResponse) GetPaymentStatus() int32 {
	if o == nil || IsNil(o.PaymentStatus) {
		var ret int32
		return ret
	}
	return *o.PaymentStatus
}

// GetPaymentStatusOk returns a tuple with the PaymentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentResponse) GetPaymentStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.PaymentStatus) {
		return nil, false
	}
	return o.PaymentStatus, true
}

// HasPaymentStatus returns a boolean if a field has been set.
func (o *PaymentResponse) HasPaymentStatus() bool {
	if o != nil && !IsNil(o.PaymentStatus) {
		return true
	}

	return false
}

// SetPaymentStatus gets a reference to the given int32 and assigns it to the PaymentStatus field.
func (o *PaymentResponse) SetPaymentStatus(v int32) {
	o.PaymentStatus = &v
}

func (o PaymentResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Test) {
		toSerialize["test"] = o.Test
	}
	if o.Ip.IsSet() {
		toSerialize["ip"] = o.Ip.Get()
	}
	if o.Bank.IsSet() {
		toSerialize["bank"] = o.Bank.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	if o.Response.IsSet() {
		toSerialize["response"] = o.Response.Get()
	}
	if o.AuthCode.IsSet() {
		toSerialize["authCode"] = o.AuthCode.Get()
	}
	if o.PaymentID.IsSet() {
		toSerialize["paymentID"] = o.PaymentID.Get()
	}
	if o.Franchise.IsSet() {
		toSerialize["franchise"] = o.Franchise.Get()
	}
	if o.Signature.IsSet() {
		toSerialize["signature"] = o.Signature.Get()
	}
	if !IsNil(o.PaymentStatus) {
		toSerialize["paymentStatus"] = o.PaymentStatus
	}
	return toSerialize, nil
}

type NullablePaymentResponse struct {
	value *PaymentResponse
	isSet bool
}

func (v NullablePaymentResponse) Get() *PaymentResponse {
	return v.value
}

func (v *NullablePaymentResponse) Set(val *PaymentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentResponse(val *PaymentResponse) *NullablePaymentResponse {
	return &NullablePaymentResponse{value: val, isSet: true}
}

func (v NullablePaymentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


