/*
GlobeService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the TimezoneDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimezoneDto{}

// TimezoneDto struct for TimezoneDto
type TimezoneDto struct {
	Timestamp NullableTime `json:"timestamp,omitempty"`
	Id NullableString `json:"id,omitempty"`
	Name NullableString `json:"name,omitempty"`
	DisplayName NullableString `json:"displayName,omitempty"`
	UtcOffset NullableString `json:"utcOffset,omitempty"`
}

// NewTimezoneDto instantiates a new TimezoneDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimezoneDto() *TimezoneDto {
	this := TimezoneDto{}
	return &this
}

// NewTimezoneDtoWithDefaults instantiates a new TimezoneDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimezoneDtoWithDefaults() *TimezoneDto {
	this := TimezoneDto{}
	return &this
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimezoneDto) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp.Get()
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimezoneDto) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timestamp.Get(), o.Timestamp.IsSet()
}

// HasTimestamp returns a boolean if a field has been set.
func (o *TimezoneDto) HasTimestamp() bool {
	if o != nil && o.Timestamp.IsSet() {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given NullableTime and assigns it to the Timestamp field.
func (o *TimezoneDto) SetTimestamp(v time.Time) {
	o.Timestamp.Set(&v)
}
// SetTimestampNil sets the value for Timestamp to be an explicit nil
func (o *TimezoneDto) SetTimestampNil() {
	o.Timestamp.Set(nil)
}

// UnsetTimestamp ensures that no value is present for Timestamp, not even an explicit nil
func (o *TimezoneDto) UnsetTimestamp() {
	o.Timestamp.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimezoneDto) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimezoneDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *TimezoneDto) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *TimezoneDto) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *TimezoneDto) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *TimezoneDto) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimezoneDto) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimezoneDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *TimezoneDto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *TimezoneDto) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *TimezoneDto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *TimezoneDto) UnsetName() {
	o.Name.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimezoneDto) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimezoneDto) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *TimezoneDto) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *TimezoneDto) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *TimezoneDto) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *TimezoneDto) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetUtcOffset returns the UtcOffset field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimezoneDto) GetUtcOffset() string {
	if o == nil || IsNil(o.UtcOffset.Get()) {
		var ret string
		return ret
	}
	return *o.UtcOffset.Get()
}

// GetUtcOffsetOk returns a tuple with the UtcOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimezoneDto) GetUtcOffsetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UtcOffset.Get(), o.UtcOffset.IsSet()
}

// HasUtcOffset returns a boolean if a field has been set.
func (o *TimezoneDto) HasUtcOffset() bool {
	if o != nil && o.UtcOffset.IsSet() {
		return true
	}

	return false
}

// SetUtcOffset gets a reference to the given NullableString and assigns it to the UtcOffset field.
func (o *TimezoneDto) SetUtcOffset(v string) {
	o.UtcOffset.Set(&v)
}
// SetUtcOffsetNil sets the value for UtcOffset to be an explicit nil
func (o *TimezoneDto) SetUtcOffsetNil() {
	o.UtcOffset.Set(nil)
}

// UnsetUtcOffset ensures that no value is present for UtcOffset, not even an explicit nil
func (o *TimezoneDto) UnsetUtcOffset() {
	o.UtcOffset.Unset()
}

func (o TimezoneDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimezoneDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Timestamp.IsSet() {
		toSerialize["timestamp"] = o.Timestamp.Get()
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.UtcOffset.IsSet() {
		toSerialize["utcOffset"] = o.UtcOffset.Get()
	}
	return toSerialize, nil
}

type NullableTimezoneDto struct {
	value *TimezoneDto
	isSet bool
}

func (v NullableTimezoneDto) Get() *TimezoneDto {
	return v.value
}

func (v *NullableTimezoneDto) Set(val *TimezoneDto) {
	v.value = val
	v.isSet = true
}

func (v NullableTimezoneDto) IsSet() bool {
	return v.isSet
}

func (v *NullableTimezoneDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimezoneDto(val *TimezoneDto) *NullableTimezoneDto {
	return &NullableTimezoneDto{value: val, isSet: true}
}

func (v NullableTimezoneDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimezoneDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


