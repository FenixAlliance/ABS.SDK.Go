/*
InvoicingService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InvoiceAdjustmentUpdateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceAdjustmentUpdateDto{}

// InvoiceAdjustmentUpdateDto struct for InvoiceAdjustmentUpdateDto
type InvoiceAdjustmentUpdateDto struct {
	CurrencyId NullableString `json:"currencyId,omitempty"`
	Description NullableString `json:"description,omitempty"`
	SurchargePercent *float64 `json:"surchargePercent,omitempty"`
	SurchargeAmount *float64 `json:"surchargeAmount,omitempty"`
	DiscountPercent *float64 `json:"discountPercent,omitempty"`
	DiscountAmount *float64 `json:"discountAmount,omitempty"`
	TotalSurcharge *float64 `json:"totalSurcharge,omitempty"`
	TotalDiscount *float64 `json:"totalDiscount,omitempty"`
	Type *int32 `json:"type,omitempty"`
}

// NewInvoiceAdjustmentUpdateDto instantiates a new InvoiceAdjustmentUpdateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceAdjustmentUpdateDto() *InvoiceAdjustmentUpdateDto {
	this := InvoiceAdjustmentUpdateDto{}
	return &this
}

// NewInvoiceAdjustmentUpdateDtoWithDefaults instantiates a new InvoiceAdjustmentUpdateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceAdjustmentUpdateDtoWithDefaults() *InvoiceAdjustmentUpdateDto {
	this := InvoiceAdjustmentUpdateDto{}
	return &this
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceAdjustmentUpdateDto) GetCurrencyId() string {
	if o == nil || IsNil(o.CurrencyId.Get()) {
		var ret string
		return ret
	}
	return *o.CurrencyId.Get()
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceAdjustmentUpdateDto) GetCurrencyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrencyId.Get(), o.CurrencyId.IsSet()
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *InvoiceAdjustmentUpdateDto) HasCurrencyId() bool {
	if o != nil && o.CurrencyId.IsSet() {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given NullableString and assigns it to the CurrencyId field.
func (o *InvoiceAdjustmentUpdateDto) SetCurrencyId(v string) {
	o.CurrencyId.Set(&v)
}
// SetCurrencyIdNil sets the value for CurrencyId to be an explicit nil
func (o *InvoiceAdjustmentUpdateDto) SetCurrencyIdNil() {
	o.CurrencyId.Set(nil)
}

// UnsetCurrencyId ensures that no value is present for CurrencyId, not even an explicit nil
func (o *InvoiceAdjustmentUpdateDto) UnsetCurrencyId() {
	o.CurrencyId.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceAdjustmentUpdateDto) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceAdjustmentUpdateDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *InvoiceAdjustmentUpdateDto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *InvoiceAdjustmentUpdateDto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *InvoiceAdjustmentUpdateDto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *InvoiceAdjustmentUpdateDto) UnsetDescription() {
	o.Description.Unset()
}

// GetSurchargePercent returns the SurchargePercent field value if set, zero value otherwise.
func (o *InvoiceAdjustmentUpdateDto) GetSurchargePercent() float64 {
	if o == nil || IsNil(o.SurchargePercent) {
		var ret float64
		return ret
	}
	return *o.SurchargePercent
}

// GetSurchargePercentOk returns a tuple with the SurchargePercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceAdjustmentUpdateDto) GetSurchargePercentOk() (*float64, bool) {
	if o == nil || IsNil(o.SurchargePercent) {
		return nil, false
	}
	return o.SurchargePercent, true
}

// HasSurchargePercent returns a boolean if a field has been set.
func (o *InvoiceAdjustmentUpdateDto) HasSurchargePercent() bool {
	if o != nil && !IsNil(o.SurchargePercent) {
		return true
	}

	return false
}

// SetSurchargePercent gets a reference to the given float64 and assigns it to the SurchargePercent field.
func (o *InvoiceAdjustmentUpdateDto) SetSurchargePercent(v float64) {
	o.SurchargePercent = &v
}

// GetSurchargeAmount returns the SurchargeAmount field value if set, zero value otherwise.
func (o *InvoiceAdjustmentUpdateDto) GetSurchargeAmount() float64 {
	if o == nil || IsNil(o.SurchargeAmount) {
		var ret float64
		return ret
	}
	return *o.SurchargeAmount
}

// GetSurchargeAmountOk returns a tuple with the SurchargeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceAdjustmentUpdateDto) GetSurchargeAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.SurchargeAmount) {
		return nil, false
	}
	return o.SurchargeAmount, true
}

// HasSurchargeAmount returns a boolean if a field has been set.
func (o *InvoiceAdjustmentUpdateDto) HasSurchargeAmount() bool {
	if o != nil && !IsNil(o.SurchargeAmount) {
		return true
	}

	return false
}

// SetSurchargeAmount gets a reference to the given float64 and assigns it to the SurchargeAmount field.
func (o *InvoiceAdjustmentUpdateDto) SetSurchargeAmount(v float64) {
	o.SurchargeAmount = &v
}

// GetDiscountPercent returns the DiscountPercent field value if set, zero value otherwise.
func (o *InvoiceAdjustmentUpdateDto) GetDiscountPercent() float64 {
	if o == nil || IsNil(o.DiscountPercent) {
		var ret float64
		return ret
	}
	return *o.DiscountPercent
}

// GetDiscountPercentOk returns a tuple with the DiscountPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceAdjustmentUpdateDto) GetDiscountPercentOk() (*float64, bool) {
	if o == nil || IsNil(o.DiscountPercent) {
		return nil, false
	}
	return o.DiscountPercent, true
}

// HasDiscountPercent returns a boolean if a field has been set.
func (o *InvoiceAdjustmentUpdateDto) HasDiscountPercent() bool {
	if o != nil && !IsNil(o.DiscountPercent) {
		return true
	}

	return false
}

// SetDiscountPercent gets a reference to the given float64 and assigns it to the DiscountPercent field.
func (o *InvoiceAdjustmentUpdateDto) SetDiscountPercent(v float64) {
	o.DiscountPercent = &v
}

// GetDiscountAmount returns the DiscountAmount field value if set, zero value otherwise.
func (o *InvoiceAdjustmentUpdateDto) GetDiscountAmount() float64 {
	if o == nil || IsNil(o.DiscountAmount) {
		var ret float64
		return ret
	}
	return *o.DiscountAmount
}

// GetDiscountAmountOk returns a tuple with the DiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceAdjustmentUpdateDto) GetDiscountAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.DiscountAmount) {
		return nil, false
	}
	return o.DiscountAmount, true
}

// HasDiscountAmount returns a boolean if a field has been set.
func (o *InvoiceAdjustmentUpdateDto) HasDiscountAmount() bool {
	if o != nil && !IsNil(o.DiscountAmount) {
		return true
	}

	return false
}

// SetDiscountAmount gets a reference to the given float64 and assigns it to the DiscountAmount field.
func (o *InvoiceAdjustmentUpdateDto) SetDiscountAmount(v float64) {
	o.DiscountAmount = &v
}

// GetTotalSurcharge returns the TotalSurcharge field value if set, zero value otherwise.
func (o *InvoiceAdjustmentUpdateDto) GetTotalSurcharge() float64 {
	if o == nil || IsNil(o.TotalSurcharge) {
		var ret float64
		return ret
	}
	return *o.TotalSurcharge
}

// GetTotalSurchargeOk returns a tuple with the TotalSurcharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceAdjustmentUpdateDto) GetTotalSurchargeOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalSurcharge) {
		return nil, false
	}
	return o.TotalSurcharge, true
}

// HasTotalSurcharge returns a boolean if a field has been set.
func (o *InvoiceAdjustmentUpdateDto) HasTotalSurcharge() bool {
	if o != nil && !IsNil(o.TotalSurcharge) {
		return true
	}

	return false
}

// SetTotalSurcharge gets a reference to the given float64 and assigns it to the TotalSurcharge field.
func (o *InvoiceAdjustmentUpdateDto) SetTotalSurcharge(v float64) {
	o.TotalSurcharge = &v
}

// GetTotalDiscount returns the TotalDiscount field value if set, zero value otherwise.
func (o *InvoiceAdjustmentUpdateDto) GetTotalDiscount() float64 {
	if o == nil || IsNil(o.TotalDiscount) {
		var ret float64
		return ret
	}
	return *o.TotalDiscount
}

// GetTotalDiscountOk returns a tuple with the TotalDiscount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceAdjustmentUpdateDto) GetTotalDiscountOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalDiscount) {
		return nil, false
	}
	return o.TotalDiscount, true
}

// HasTotalDiscount returns a boolean if a field has been set.
func (o *InvoiceAdjustmentUpdateDto) HasTotalDiscount() bool {
	if o != nil && !IsNil(o.TotalDiscount) {
		return true
	}

	return false
}

// SetTotalDiscount gets a reference to the given float64 and assigns it to the TotalDiscount field.
func (o *InvoiceAdjustmentUpdateDto) SetTotalDiscount(v float64) {
	o.TotalDiscount = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *InvoiceAdjustmentUpdateDto) GetType() int32 {
	if o == nil || IsNil(o.Type) {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceAdjustmentUpdateDto) GetTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *InvoiceAdjustmentUpdateDto) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *InvoiceAdjustmentUpdateDto) SetType(v int32) {
	o.Type = &v
}

func (o InvoiceAdjustmentUpdateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceAdjustmentUpdateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CurrencyId.IsSet() {
		toSerialize["currencyId"] = o.CurrencyId.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.SurchargePercent) {
		toSerialize["surchargePercent"] = o.SurchargePercent
	}
	if !IsNil(o.SurchargeAmount) {
		toSerialize["surchargeAmount"] = o.SurchargeAmount
	}
	if !IsNil(o.DiscountPercent) {
		toSerialize["discountPercent"] = o.DiscountPercent
	}
	if !IsNil(o.DiscountAmount) {
		toSerialize["discountAmount"] = o.DiscountAmount
	}
	if !IsNil(o.TotalSurcharge) {
		toSerialize["totalSurcharge"] = o.TotalSurcharge
	}
	if !IsNil(o.TotalDiscount) {
		toSerialize["totalDiscount"] = o.TotalDiscount
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableInvoiceAdjustmentUpdateDto struct {
	value *InvoiceAdjustmentUpdateDto
	isSet bool
}

func (v NullableInvoiceAdjustmentUpdateDto) Get() *InvoiceAdjustmentUpdateDto {
	return v.value
}

func (v *NullableInvoiceAdjustmentUpdateDto) Set(val *InvoiceAdjustmentUpdateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceAdjustmentUpdateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceAdjustmentUpdateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceAdjustmentUpdateDto(val *InvoiceAdjustmentUpdateDto) *NullableInvoiceAdjustmentUpdateDto {
	return &NullableInvoiceAdjustmentUpdateDto{value: val, isSet: true}
}

func (v NullableInvoiceAdjustmentUpdateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceAdjustmentUpdateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


