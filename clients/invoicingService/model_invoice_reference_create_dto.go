/*
InvoicingService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the InvoiceReferenceCreateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceReferenceCreateDto{}

// InvoiceReferenceCreateDto struct for InvoiceReferenceCreateDto
type InvoiceReferenceCreateDto struct {
	Id *string `json:"id,omitempty"`
	Timestamp *time.Time `json:"timestamp,omitempty"`
	TenantId NullableString `json:"tenantId,omitempty"`
	EnrollmentId NullableString `json:"enrollmentId,omitempty"`
	ReferralInvoiceId NullableString `json:"referralInvoiceId,omitempty"`
	ReferencedInvoiceId NullableString `json:"referencedInvoiceId,omitempty"`
}

// NewInvoiceReferenceCreateDto instantiates a new InvoiceReferenceCreateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceReferenceCreateDto() *InvoiceReferenceCreateDto {
	this := InvoiceReferenceCreateDto{}
	return &this
}

// NewInvoiceReferenceCreateDtoWithDefaults instantiates a new InvoiceReferenceCreateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceReferenceCreateDtoWithDefaults() *InvoiceReferenceCreateDto {
	this := InvoiceReferenceCreateDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InvoiceReferenceCreateDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceReferenceCreateDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InvoiceReferenceCreateDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InvoiceReferenceCreateDto) SetId(v string) {
	o.Id = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *InvoiceReferenceCreateDto) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceReferenceCreateDto) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *InvoiceReferenceCreateDto) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *InvoiceReferenceCreateDto) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceReferenceCreateDto) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceReferenceCreateDto) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *InvoiceReferenceCreateDto) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *InvoiceReferenceCreateDto) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *InvoiceReferenceCreateDto) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *InvoiceReferenceCreateDto) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetEnrollmentId returns the EnrollmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceReferenceCreateDto) GetEnrollmentId() string {
	if o == nil || IsNil(o.EnrollmentId.Get()) {
		var ret string
		return ret
	}
	return *o.EnrollmentId.Get()
}

// GetEnrollmentIdOk returns a tuple with the EnrollmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceReferenceCreateDto) GetEnrollmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnrollmentId.Get(), o.EnrollmentId.IsSet()
}

// HasEnrollmentId returns a boolean if a field has been set.
func (o *InvoiceReferenceCreateDto) HasEnrollmentId() bool {
	if o != nil && o.EnrollmentId.IsSet() {
		return true
	}

	return false
}

// SetEnrollmentId gets a reference to the given NullableString and assigns it to the EnrollmentId field.
func (o *InvoiceReferenceCreateDto) SetEnrollmentId(v string) {
	o.EnrollmentId.Set(&v)
}
// SetEnrollmentIdNil sets the value for EnrollmentId to be an explicit nil
func (o *InvoiceReferenceCreateDto) SetEnrollmentIdNil() {
	o.EnrollmentId.Set(nil)
}

// UnsetEnrollmentId ensures that no value is present for EnrollmentId, not even an explicit nil
func (o *InvoiceReferenceCreateDto) UnsetEnrollmentId() {
	o.EnrollmentId.Unset()
}

// GetReferralInvoiceId returns the ReferralInvoiceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceReferenceCreateDto) GetReferralInvoiceId() string {
	if o == nil || IsNil(o.ReferralInvoiceId.Get()) {
		var ret string
		return ret
	}
	return *o.ReferralInvoiceId.Get()
}

// GetReferralInvoiceIdOk returns a tuple with the ReferralInvoiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceReferenceCreateDto) GetReferralInvoiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReferralInvoiceId.Get(), o.ReferralInvoiceId.IsSet()
}

// HasReferralInvoiceId returns a boolean if a field has been set.
func (o *InvoiceReferenceCreateDto) HasReferralInvoiceId() bool {
	if o != nil && o.ReferralInvoiceId.IsSet() {
		return true
	}

	return false
}

// SetReferralInvoiceId gets a reference to the given NullableString and assigns it to the ReferralInvoiceId field.
func (o *InvoiceReferenceCreateDto) SetReferralInvoiceId(v string) {
	o.ReferralInvoiceId.Set(&v)
}
// SetReferralInvoiceIdNil sets the value for ReferralInvoiceId to be an explicit nil
func (o *InvoiceReferenceCreateDto) SetReferralInvoiceIdNil() {
	o.ReferralInvoiceId.Set(nil)
}

// UnsetReferralInvoiceId ensures that no value is present for ReferralInvoiceId, not even an explicit nil
func (o *InvoiceReferenceCreateDto) UnsetReferralInvoiceId() {
	o.ReferralInvoiceId.Unset()
}

// GetReferencedInvoiceId returns the ReferencedInvoiceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceReferenceCreateDto) GetReferencedInvoiceId() string {
	if o == nil || IsNil(o.ReferencedInvoiceId.Get()) {
		var ret string
		return ret
	}
	return *o.ReferencedInvoiceId.Get()
}

// GetReferencedInvoiceIdOk returns a tuple with the ReferencedInvoiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceReferenceCreateDto) GetReferencedInvoiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReferencedInvoiceId.Get(), o.ReferencedInvoiceId.IsSet()
}

// HasReferencedInvoiceId returns a boolean if a field has been set.
func (o *InvoiceReferenceCreateDto) HasReferencedInvoiceId() bool {
	if o != nil && o.ReferencedInvoiceId.IsSet() {
		return true
	}

	return false
}

// SetReferencedInvoiceId gets a reference to the given NullableString and assigns it to the ReferencedInvoiceId field.
func (o *InvoiceReferenceCreateDto) SetReferencedInvoiceId(v string) {
	o.ReferencedInvoiceId.Set(&v)
}
// SetReferencedInvoiceIdNil sets the value for ReferencedInvoiceId to be an explicit nil
func (o *InvoiceReferenceCreateDto) SetReferencedInvoiceIdNil() {
	o.ReferencedInvoiceId.Set(nil)
}

// UnsetReferencedInvoiceId ensures that no value is present for ReferencedInvoiceId, not even an explicit nil
func (o *InvoiceReferenceCreateDto) UnsetReferencedInvoiceId() {
	o.ReferencedInvoiceId.Unset()
}

func (o InvoiceReferenceCreateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceReferenceCreateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.EnrollmentId.IsSet() {
		toSerialize["enrollmentId"] = o.EnrollmentId.Get()
	}
	if o.ReferralInvoiceId.IsSet() {
		toSerialize["referralInvoiceId"] = o.ReferralInvoiceId.Get()
	}
	if o.ReferencedInvoiceId.IsSet() {
		toSerialize["referencedInvoiceId"] = o.ReferencedInvoiceId.Get()
	}
	return toSerialize, nil
}

type NullableInvoiceReferenceCreateDto struct {
	value *InvoiceReferenceCreateDto
	isSet bool
}

func (v NullableInvoiceReferenceCreateDto) Get() *InvoiceReferenceCreateDto {
	return v.value
}

func (v *NullableInvoiceReferenceCreateDto) Set(val *InvoiceReferenceCreateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceReferenceCreateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceReferenceCreateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceReferenceCreateDto(val *InvoiceReferenceCreateDto) *NullableInvoiceReferenceCreateDto {
	return &NullableInvoiceReferenceCreateDto{value: val, isSet: true}
}

func (v NullableInvoiceReferenceCreateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceReferenceCreateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


