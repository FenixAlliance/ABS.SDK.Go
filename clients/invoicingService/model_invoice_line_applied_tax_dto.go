/*
InvoicingService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the InvoiceLineAppliedTaxDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceLineAppliedTaxDto{}

// InvoiceLineAppliedTaxDto struct for InvoiceLineAppliedTaxDto
type InvoiceLineAppliedTaxDto struct {
	Id NullableString `json:"id,omitempty"`
	Timestamp NullableTime `json:"timestamp,omitempty"`
	TenantId NullableString `json:"tenantId,omitempty"`
	InvoiceId NullableString `json:"invoiceId,omitempty"`
	EnrollmentId NullableString `json:"enrollmentId,omitempty"`
	InvoiceLineId NullableString `json:"invoiceLineId,omitempty"`
	TaxPolicyId NullableString `json:"taxPolicyId,omitempty"`
	ItemPriceId NullableString `json:"itemPriceId,omitempty"`
	ItemId NullableString `json:"itemId,omitempty"`
	TaxAmountInUsd *float64 `json:"taxAmountInUsd,omitempty"`
	TaxBaseAmountInUsd *float64 `json:"taxBaseAmountInUsd,omitempty"`
	TaxPolicyName NullableString `json:"taxPolicyName,omitempty"`
	TaxPolicyDescription NullableString `json:"taxPolicyDescription,omitempty"`
}

// NewInvoiceLineAppliedTaxDto instantiates a new InvoiceLineAppliedTaxDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceLineAppliedTaxDto() *InvoiceLineAppliedTaxDto {
	this := InvoiceLineAppliedTaxDto{}
	return &this
}

// NewInvoiceLineAppliedTaxDtoWithDefaults instantiates a new InvoiceLineAppliedTaxDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceLineAppliedTaxDtoWithDefaults() *InvoiceLineAppliedTaxDto {
	this := InvoiceLineAppliedTaxDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceLineAppliedTaxDto) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceLineAppliedTaxDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *InvoiceLineAppliedTaxDto) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *InvoiceLineAppliedTaxDto) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *InvoiceLineAppliedTaxDto) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *InvoiceLineAppliedTaxDto) UnsetId() {
	o.Id.Unset()
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceLineAppliedTaxDto) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp.Get()
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceLineAppliedTaxDto) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timestamp.Get(), o.Timestamp.IsSet()
}

// HasTimestamp returns a boolean if a field has been set.
func (o *InvoiceLineAppliedTaxDto) HasTimestamp() bool {
	if o != nil && o.Timestamp.IsSet() {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given NullableTime and assigns it to the Timestamp field.
func (o *InvoiceLineAppliedTaxDto) SetTimestamp(v time.Time) {
	o.Timestamp.Set(&v)
}
// SetTimestampNil sets the value for Timestamp to be an explicit nil
func (o *InvoiceLineAppliedTaxDto) SetTimestampNil() {
	o.Timestamp.Set(nil)
}

// UnsetTimestamp ensures that no value is present for Timestamp, not even an explicit nil
func (o *InvoiceLineAppliedTaxDto) UnsetTimestamp() {
	o.Timestamp.Unset()
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceLineAppliedTaxDto) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceLineAppliedTaxDto) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *InvoiceLineAppliedTaxDto) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *InvoiceLineAppliedTaxDto) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *InvoiceLineAppliedTaxDto) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *InvoiceLineAppliedTaxDto) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetInvoiceId returns the InvoiceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceLineAppliedTaxDto) GetInvoiceId() string {
	if o == nil || IsNil(o.InvoiceId.Get()) {
		var ret string
		return ret
	}
	return *o.InvoiceId.Get()
}

// GetInvoiceIdOk returns a tuple with the InvoiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceLineAppliedTaxDto) GetInvoiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceId.Get(), o.InvoiceId.IsSet()
}

// HasInvoiceId returns a boolean if a field has been set.
func (o *InvoiceLineAppliedTaxDto) HasInvoiceId() bool {
	if o != nil && o.InvoiceId.IsSet() {
		return true
	}

	return false
}

// SetInvoiceId gets a reference to the given NullableString and assigns it to the InvoiceId field.
func (o *InvoiceLineAppliedTaxDto) SetInvoiceId(v string) {
	o.InvoiceId.Set(&v)
}
// SetInvoiceIdNil sets the value for InvoiceId to be an explicit nil
func (o *InvoiceLineAppliedTaxDto) SetInvoiceIdNil() {
	o.InvoiceId.Set(nil)
}

// UnsetInvoiceId ensures that no value is present for InvoiceId, not even an explicit nil
func (o *InvoiceLineAppliedTaxDto) UnsetInvoiceId() {
	o.InvoiceId.Unset()
}

// GetEnrollmentId returns the EnrollmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceLineAppliedTaxDto) GetEnrollmentId() string {
	if o == nil || IsNil(o.EnrollmentId.Get()) {
		var ret string
		return ret
	}
	return *o.EnrollmentId.Get()
}

// GetEnrollmentIdOk returns a tuple with the EnrollmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceLineAppliedTaxDto) GetEnrollmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnrollmentId.Get(), o.EnrollmentId.IsSet()
}

// HasEnrollmentId returns a boolean if a field has been set.
func (o *InvoiceLineAppliedTaxDto) HasEnrollmentId() bool {
	if o != nil && o.EnrollmentId.IsSet() {
		return true
	}

	return false
}

// SetEnrollmentId gets a reference to the given NullableString and assigns it to the EnrollmentId field.
func (o *InvoiceLineAppliedTaxDto) SetEnrollmentId(v string) {
	o.EnrollmentId.Set(&v)
}
// SetEnrollmentIdNil sets the value for EnrollmentId to be an explicit nil
func (o *InvoiceLineAppliedTaxDto) SetEnrollmentIdNil() {
	o.EnrollmentId.Set(nil)
}

// UnsetEnrollmentId ensures that no value is present for EnrollmentId, not even an explicit nil
func (o *InvoiceLineAppliedTaxDto) UnsetEnrollmentId() {
	o.EnrollmentId.Unset()
}

// GetInvoiceLineId returns the InvoiceLineId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceLineAppliedTaxDto) GetInvoiceLineId() string {
	if o == nil || IsNil(o.InvoiceLineId.Get()) {
		var ret string
		return ret
	}
	return *o.InvoiceLineId.Get()
}

// GetInvoiceLineIdOk returns a tuple with the InvoiceLineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceLineAppliedTaxDto) GetInvoiceLineIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceLineId.Get(), o.InvoiceLineId.IsSet()
}

// HasInvoiceLineId returns a boolean if a field has been set.
func (o *InvoiceLineAppliedTaxDto) HasInvoiceLineId() bool {
	if o != nil && o.InvoiceLineId.IsSet() {
		return true
	}

	return false
}

// SetInvoiceLineId gets a reference to the given NullableString and assigns it to the InvoiceLineId field.
func (o *InvoiceLineAppliedTaxDto) SetInvoiceLineId(v string) {
	o.InvoiceLineId.Set(&v)
}
// SetInvoiceLineIdNil sets the value for InvoiceLineId to be an explicit nil
func (o *InvoiceLineAppliedTaxDto) SetInvoiceLineIdNil() {
	o.InvoiceLineId.Set(nil)
}

// UnsetInvoiceLineId ensures that no value is present for InvoiceLineId, not even an explicit nil
func (o *InvoiceLineAppliedTaxDto) UnsetInvoiceLineId() {
	o.InvoiceLineId.Unset()
}

// GetTaxPolicyId returns the TaxPolicyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceLineAppliedTaxDto) GetTaxPolicyId() string {
	if o == nil || IsNil(o.TaxPolicyId.Get()) {
		var ret string
		return ret
	}
	return *o.TaxPolicyId.Get()
}

// GetTaxPolicyIdOk returns a tuple with the TaxPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceLineAppliedTaxDto) GetTaxPolicyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaxPolicyId.Get(), o.TaxPolicyId.IsSet()
}

// HasTaxPolicyId returns a boolean if a field has been set.
func (o *InvoiceLineAppliedTaxDto) HasTaxPolicyId() bool {
	if o != nil && o.TaxPolicyId.IsSet() {
		return true
	}

	return false
}

// SetTaxPolicyId gets a reference to the given NullableString and assigns it to the TaxPolicyId field.
func (o *InvoiceLineAppliedTaxDto) SetTaxPolicyId(v string) {
	o.TaxPolicyId.Set(&v)
}
// SetTaxPolicyIdNil sets the value for TaxPolicyId to be an explicit nil
func (o *InvoiceLineAppliedTaxDto) SetTaxPolicyIdNil() {
	o.TaxPolicyId.Set(nil)
}

// UnsetTaxPolicyId ensures that no value is present for TaxPolicyId, not even an explicit nil
func (o *InvoiceLineAppliedTaxDto) UnsetTaxPolicyId() {
	o.TaxPolicyId.Unset()
}

// GetItemPriceId returns the ItemPriceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceLineAppliedTaxDto) GetItemPriceId() string {
	if o == nil || IsNil(o.ItemPriceId.Get()) {
		var ret string
		return ret
	}
	return *o.ItemPriceId.Get()
}

// GetItemPriceIdOk returns a tuple with the ItemPriceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceLineAppliedTaxDto) GetItemPriceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemPriceId.Get(), o.ItemPriceId.IsSet()
}

// HasItemPriceId returns a boolean if a field has been set.
func (o *InvoiceLineAppliedTaxDto) HasItemPriceId() bool {
	if o != nil && o.ItemPriceId.IsSet() {
		return true
	}

	return false
}

// SetItemPriceId gets a reference to the given NullableString and assigns it to the ItemPriceId field.
func (o *InvoiceLineAppliedTaxDto) SetItemPriceId(v string) {
	o.ItemPriceId.Set(&v)
}
// SetItemPriceIdNil sets the value for ItemPriceId to be an explicit nil
func (o *InvoiceLineAppliedTaxDto) SetItemPriceIdNil() {
	o.ItemPriceId.Set(nil)
}

// UnsetItemPriceId ensures that no value is present for ItemPriceId, not even an explicit nil
func (o *InvoiceLineAppliedTaxDto) UnsetItemPriceId() {
	o.ItemPriceId.Unset()
}

// GetItemId returns the ItemId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceLineAppliedTaxDto) GetItemId() string {
	if o == nil || IsNil(o.ItemId.Get()) {
		var ret string
		return ret
	}
	return *o.ItemId.Get()
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceLineAppliedTaxDto) GetItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemId.Get(), o.ItemId.IsSet()
}

// HasItemId returns a boolean if a field has been set.
func (o *InvoiceLineAppliedTaxDto) HasItemId() bool {
	if o != nil && o.ItemId.IsSet() {
		return true
	}

	return false
}

// SetItemId gets a reference to the given NullableString and assigns it to the ItemId field.
func (o *InvoiceLineAppliedTaxDto) SetItemId(v string) {
	o.ItemId.Set(&v)
}
// SetItemIdNil sets the value for ItemId to be an explicit nil
func (o *InvoiceLineAppliedTaxDto) SetItemIdNil() {
	o.ItemId.Set(nil)
}

// UnsetItemId ensures that no value is present for ItemId, not even an explicit nil
func (o *InvoiceLineAppliedTaxDto) UnsetItemId() {
	o.ItemId.Unset()
}

// GetTaxAmountInUsd returns the TaxAmountInUsd field value if set, zero value otherwise.
func (o *InvoiceLineAppliedTaxDto) GetTaxAmountInUsd() float64 {
	if o == nil || IsNil(o.TaxAmountInUsd) {
		var ret float64
		return ret
	}
	return *o.TaxAmountInUsd
}

// GetTaxAmountInUsdOk returns a tuple with the TaxAmountInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceLineAppliedTaxDto) GetTaxAmountInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TaxAmountInUsd) {
		return nil, false
	}
	return o.TaxAmountInUsd, true
}

// HasTaxAmountInUsd returns a boolean if a field has been set.
func (o *InvoiceLineAppliedTaxDto) HasTaxAmountInUsd() bool {
	if o != nil && !IsNil(o.TaxAmountInUsd) {
		return true
	}

	return false
}

// SetTaxAmountInUsd gets a reference to the given float64 and assigns it to the TaxAmountInUsd field.
func (o *InvoiceLineAppliedTaxDto) SetTaxAmountInUsd(v float64) {
	o.TaxAmountInUsd = &v
}

// GetTaxBaseAmountInUsd returns the TaxBaseAmountInUsd field value if set, zero value otherwise.
func (o *InvoiceLineAppliedTaxDto) GetTaxBaseAmountInUsd() float64 {
	if o == nil || IsNil(o.TaxBaseAmountInUsd) {
		var ret float64
		return ret
	}
	return *o.TaxBaseAmountInUsd
}

// GetTaxBaseAmountInUsdOk returns a tuple with the TaxBaseAmountInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceLineAppliedTaxDto) GetTaxBaseAmountInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TaxBaseAmountInUsd) {
		return nil, false
	}
	return o.TaxBaseAmountInUsd, true
}

// HasTaxBaseAmountInUsd returns a boolean if a field has been set.
func (o *InvoiceLineAppliedTaxDto) HasTaxBaseAmountInUsd() bool {
	if o != nil && !IsNil(o.TaxBaseAmountInUsd) {
		return true
	}

	return false
}

// SetTaxBaseAmountInUsd gets a reference to the given float64 and assigns it to the TaxBaseAmountInUsd field.
func (o *InvoiceLineAppliedTaxDto) SetTaxBaseAmountInUsd(v float64) {
	o.TaxBaseAmountInUsd = &v
}

// GetTaxPolicyName returns the TaxPolicyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceLineAppliedTaxDto) GetTaxPolicyName() string {
	if o == nil || IsNil(o.TaxPolicyName.Get()) {
		var ret string
		return ret
	}
	return *o.TaxPolicyName.Get()
}

// GetTaxPolicyNameOk returns a tuple with the TaxPolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceLineAppliedTaxDto) GetTaxPolicyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaxPolicyName.Get(), o.TaxPolicyName.IsSet()
}

// HasTaxPolicyName returns a boolean if a field has been set.
func (o *InvoiceLineAppliedTaxDto) HasTaxPolicyName() bool {
	if o != nil && o.TaxPolicyName.IsSet() {
		return true
	}

	return false
}

// SetTaxPolicyName gets a reference to the given NullableString and assigns it to the TaxPolicyName field.
func (o *InvoiceLineAppliedTaxDto) SetTaxPolicyName(v string) {
	o.TaxPolicyName.Set(&v)
}
// SetTaxPolicyNameNil sets the value for TaxPolicyName to be an explicit nil
func (o *InvoiceLineAppliedTaxDto) SetTaxPolicyNameNil() {
	o.TaxPolicyName.Set(nil)
}

// UnsetTaxPolicyName ensures that no value is present for TaxPolicyName, not even an explicit nil
func (o *InvoiceLineAppliedTaxDto) UnsetTaxPolicyName() {
	o.TaxPolicyName.Unset()
}

// GetTaxPolicyDescription returns the TaxPolicyDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceLineAppliedTaxDto) GetTaxPolicyDescription() string {
	if o == nil || IsNil(o.TaxPolicyDescription.Get()) {
		var ret string
		return ret
	}
	return *o.TaxPolicyDescription.Get()
}

// GetTaxPolicyDescriptionOk returns a tuple with the TaxPolicyDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceLineAppliedTaxDto) GetTaxPolicyDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaxPolicyDescription.Get(), o.TaxPolicyDescription.IsSet()
}

// HasTaxPolicyDescription returns a boolean if a field has been set.
func (o *InvoiceLineAppliedTaxDto) HasTaxPolicyDescription() bool {
	if o != nil && o.TaxPolicyDescription.IsSet() {
		return true
	}

	return false
}

// SetTaxPolicyDescription gets a reference to the given NullableString and assigns it to the TaxPolicyDescription field.
func (o *InvoiceLineAppliedTaxDto) SetTaxPolicyDescription(v string) {
	o.TaxPolicyDescription.Set(&v)
}
// SetTaxPolicyDescriptionNil sets the value for TaxPolicyDescription to be an explicit nil
func (o *InvoiceLineAppliedTaxDto) SetTaxPolicyDescriptionNil() {
	o.TaxPolicyDescription.Set(nil)
}

// UnsetTaxPolicyDescription ensures that no value is present for TaxPolicyDescription, not even an explicit nil
func (o *InvoiceLineAppliedTaxDto) UnsetTaxPolicyDescription() {
	o.TaxPolicyDescription.Unset()
}

func (o InvoiceLineAppliedTaxDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceLineAppliedTaxDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Timestamp.IsSet() {
		toSerialize["timestamp"] = o.Timestamp.Get()
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.InvoiceId.IsSet() {
		toSerialize["invoiceId"] = o.InvoiceId.Get()
	}
	if o.EnrollmentId.IsSet() {
		toSerialize["enrollmentId"] = o.EnrollmentId.Get()
	}
	if o.InvoiceLineId.IsSet() {
		toSerialize["invoiceLineId"] = o.InvoiceLineId.Get()
	}
	if o.TaxPolicyId.IsSet() {
		toSerialize["taxPolicyId"] = o.TaxPolicyId.Get()
	}
	if o.ItemPriceId.IsSet() {
		toSerialize["itemPriceId"] = o.ItemPriceId.Get()
	}
	if o.ItemId.IsSet() {
		toSerialize["itemId"] = o.ItemId.Get()
	}
	if !IsNil(o.TaxAmountInUsd) {
		toSerialize["taxAmountInUsd"] = o.TaxAmountInUsd
	}
	if !IsNil(o.TaxBaseAmountInUsd) {
		toSerialize["taxBaseAmountInUsd"] = o.TaxBaseAmountInUsd
	}
	if o.TaxPolicyName.IsSet() {
		toSerialize["taxPolicyName"] = o.TaxPolicyName.Get()
	}
	if o.TaxPolicyDescription.IsSet() {
		toSerialize["taxPolicyDescription"] = o.TaxPolicyDescription.Get()
	}
	return toSerialize, nil
}

type NullableInvoiceLineAppliedTaxDto struct {
	value *InvoiceLineAppliedTaxDto
	isSet bool
}

func (v NullableInvoiceLineAppliedTaxDto) Get() *InvoiceLineAppliedTaxDto {
	return v.value
}

func (v *NullableInvoiceLineAppliedTaxDto) Set(val *InvoiceLineAppliedTaxDto) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceLineAppliedTaxDto) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceLineAppliedTaxDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceLineAppliedTaxDto(val *InvoiceLineAppliedTaxDto) *NullableInvoiceLineAppliedTaxDto {
	return &NullableInvoiceLineAppliedTaxDto{value: val, isSet: true}
}

func (v NullableInvoiceLineAppliedTaxDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceLineAppliedTaxDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


