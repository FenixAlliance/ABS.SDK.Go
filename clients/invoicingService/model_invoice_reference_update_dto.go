/*
InvoicingService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InvoiceReferenceUpdateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceReferenceUpdateDto{}

// InvoiceReferenceUpdateDto struct for InvoiceReferenceUpdateDto
type InvoiceReferenceUpdateDto struct {
	ReferencedInvoiceId NullableString `json:"referencedInvoiceId,omitempty"`
}

// NewInvoiceReferenceUpdateDto instantiates a new InvoiceReferenceUpdateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceReferenceUpdateDto() *InvoiceReferenceUpdateDto {
	this := InvoiceReferenceUpdateDto{}
	return &this
}

// NewInvoiceReferenceUpdateDtoWithDefaults instantiates a new InvoiceReferenceUpdateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceReferenceUpdateDtoWithDefaults() *InvoiceReferenceUpdateDto {
	this := InvoiceReferenceUpdateDto{}
	return &this
}

// GetReferencedInvoiceId returns the ReferencedInvoiceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceReferenceUpdateDto) GetReferencedInvoiceId() string {
	if o == nil || IsNil(o.ReferencedInvoiceId.Get()) {
		var ret string
		return ret
	}
	return *o.ReferencedInvoiceId.Get()
}

// GetReferencedInvoiceIdOk returns a tuple with the ReferencedInvoiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceReferenceUpdateDto) GetReferencedInvoiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReferencedInvoiceId.Get(), o.ReferencedInvoiceId.IsSet()
}

// HasReferencedInvoiceId returns a boolean if a field has been set.
func (o *InvoiceReferenceUpdateDto) HasReferencedInvoiceId() bool {
	if o != nil && o.ReferencedInvoiceId.IsSet() {
		return true
	}

	return false
}

// SetReferencedInvoiceId gets a reference to the given NullableString and assigns it to the ReferencedInvoiceId field.
func (o *InvoiceReferenceUpdateDto) SetReferencedInvoiceId(v string) {
	o.ReferencedInvoiceId.Set(&v)
}
// SetReferencedInvoiceIdNil sets the value for ReferencedInvoiceId to be an explicit nil
func (o *InvoiceReferenceUpdateDto) SetReferencedInvoiceIdNil() {
	o.ReferencedInvoiceId.Set(nil)
}

// UnsetReferencedInvoiceId ensures that no value is present for ReferencedInvoiceId, not even an explicit nil
func (o *InvoiceReferenceUpdateDto) UnsetReferencedInvoiceId() {
	o.ReferencedInvoiceId.Unset()
}

func (o InvoiceReferenceUpdateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceReferenceUpdateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ReferencedInvoiceId.IsSet() {
		toSerialize["referencedInvoiceId"] = o.ReferencedInvoiceId.Get()
	}
	return toSerialize, nil
}

type NullableInvoiceReferenceUpdateDto struct {
	value *InvoiceReferenceUpdateDto
	isSet bool
}

func (v NullableInvoiceReferenceUpdateDto) Get() *InvoiceReferenceUpdateDto {
	return v.value
}

func (v *NullableInvoiceReferenceUpdateDto) Set(val *InvoiceReferenceUpdateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceReferenceUpdateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceReferenceUpdateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceReferenceUpdateDto(val *InvoiceReferenceUpdateDto) *NullableInvoiceReferenceUpdateDto {
	return &NullableInvoiceReferenceUpdateDto{value: val, isSet: true}
}

func (v NullableInvoiceReferenceUpdateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceReferenceUpdateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


