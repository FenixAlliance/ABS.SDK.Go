/*
InvoicingService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the SimpleContactDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SimpleContactDto{}

// SimpleContactDto struct for SimpleContactDto
type SimpleContactDto struct {
	Id NullableString `json:"id,omitempty"`
	Timestamp NullableTime `json:"timestamp,omitempty"`
	QualifiedName NullableString `json:"qualifiedName,omitempty"`
	TenantId NullableString `json:"tenantId,omitempty"`
	Type *int32 `json:"type,omitempty"`
	PublicName NullableString `json:"publicName,omitempty"`
	FirstName NullableString `json:"firstName,omitempty"`
	LastName NullableString `json:"lastName,omitempty"`
	JobTitle NullableString `json:"jobTitle,omitempty"`
	CoverUrl NullableString `json:"coverUrl,omitempty"`
	AvatarUrl NullableString `json:"avatarUrl,omitempty"`
	CountryId NullableString `json:"countryId,omitempty"`
	TimezoneId NullableString `json:"timezoneId,omitempty"`
	LanguageId NullableString `json:"languageId,omitempty"`
	SocialProfileId NullableString `json:"socialProfileId,omitempty"`
	WebUrl NullableString `json:"webUrl,omitempty"`
	GitHubUrl NullableString `json:"gitHubUrl,omitempty"`
	TwitchUrl NullableString `json:"twitchUrl,omitempty"`
	RedditUrl NullableString `json:"redditUrl,omitempty"`
	TikTokUrl NullableString `json:"tikTokUrl,omitempty"`
	WebsiteUrl NullableString `json:"websiteUrl,omitempty"`
	TwitterUrl NullableString `json:"twitterUrl,omitempty"`
	FacebookUrl NullableString `json:"facebookUrl,omitempty"`
	YouTubeUrl NullableString `json:"youTubeUrl,omitempty"`
	LinkedInUrl NullableString `json:"linkedInUrl,omitempty"`
	InstagramUrl NullableString `json:"instagramUrl,omitempty"`
	GithubUsername NullableString `json:"githubUsername,omitempty"`
}

// NewSimpleContactDto instantiates a new SimpleContactDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSimpleContactDto() *SimpleContactDto {
	this := SimpleContactDto{}
	return &this
}

// NewSimpleContactDtoWithDefaults instantiates a new SimpleContactDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSimpleContactDtoWithDefaults() *SimpleContactDto {
	this := SimpleContactDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *SimpleContactDto) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *SimpleContactDto) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *SimpleContactDto) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *SimpleContactDto) UnsetId() {
	o.Id.Unset()
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp.Get()
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timestamp.Get(), o.Timestamp.IsSet()
}

// HasTimestamp returns a boolean if a field has been set.
func (o *SimpleContactDto) HasTimestamp() bool {
	if o != nil && o.Timestamp.IsSet() {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given NullableTime and assigns it to the Timestamp field.
func (o *SimpleContactDto) SetTimestamp(v time.Time) {
	o.Timestamp.Set(&v)
}
// SetTimestampNil sets the value for Timestamp to be an explicit nil
func (o *SimpleContactDto) SetTimestampNil() {
	o.Timestamp.Set(nil)
}

// UnsetTimestamp ensures that no value is present for Timestamp, not even an explicit nil
func (o *SimpleContactDto) UnsetTimestamp() {
	o.Timestamp.Unset()
}

// GetQualifiedName returns the QualifiedName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetQualifiedName() string {
	if o == nil || IsNil(o.QualifiedName.Get()) {
		var ret string
		return ret
	}
	return *o.QualifiedName.Get()
}

// GetQualifiedNameOk returns a tuple with the QualifiedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetQualifiedNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.QualifiedName.Get(), o.QualifiedName.IsSet()
}

// HasQualifiedName returns a boolean if a field has been set.
func (o *SimpleContactDto) HasQualifiedName() bool {
	if o != nil && o.QualifiedName.IsSet() {
		return true
	}

	return false
}

// SetQualifiedName gets a reference to the given NullableString and assigns it to the QualifiedName field.
func (o *SimpleContactDto) SetQualifiedName(v string) {
	o.QualifiedName.Set(&v)
}
// SetQualifiedNameNil sets the value for QualifiedName to be an explicit nil
func (o *SimpleContactDto) SetQualifiedNameNil() {
	o.QualifiedName.Set(nil)
}

// UnsetQualifiedName ensures that no value is present for QualifiedName, not even an explicit nil
func (o *SimpleContactDto) UnsetQualifiedName() {
	o.QualifiedName.Unset()
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *SimpleContactDto) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *SimpleContactDto) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *SimpleContactDto) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *SimpleContactDto) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SimpleContactDto) GetType() int32 {
	if o == nil || IsNil(o.Type) {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimpleContactDto) GetTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SimpleContactDto) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *SimpleContactDto) SetType(v int32) {
	o.Type = &v
}

// GetPublicName returns the PublicName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetPublicName() string {
	if o == nil || IsNil(o.PublicName.Get()) {
		var ret string
		return ret
	}
	return *o.PublicName.Get()
}

// GetPublicNameOk returns a tuple with the PublicName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetPublicNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PublicName.Get(), o.PublicName.IsSet()
}

// HasPublicName returns a boolean if a field has been set.
func (o *SimpleContactDto) HasPublicName() bool {
	if o != nil && o.PublicName.IsSet() {
		return true
	}

	return false
}

// SetPublicName gets a reference to the given NullableString and assigns it to the PublicName field.
func (o *SimpleContactDto) SetPublicName(v string) {
	o.PublicName.Set(&v)
}
// SetPublicNameNil sets the value for PublicName to be an explicit nil
func (o *SimpleContactDto) SetPublicNameNil() {
	o.PublicName.Set(nil)
}

// UnsetPublicName ensures that no value is present for PublicName, not even an explicit nil
func (o *SimpleContactDto) UnsetPublicName() {
	o.PublicName.Unset()
}

// GetFirstName returns the FirstName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetFirstName() string {
	if o == nil || IsNil(o.FirstName.Get()) {
		var ret string
		return ret
	}
	return *o.FirstName.Get()
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstName.Get(), o.FirstName.IsSet()
}

// HasFirstName returns a boolean if a field has been set.
func (o *SimpleContactDto) HasFirstName() bool {
	if o != nil && o.FirstName.IsSet() {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given NullableString and assigns it to the FirstName field.
func (o *SimpleContactDto) SetFirstName(v string) {
	o.FirstName.Set(&v)
}
// SetFirstNameNil sets the value for FirstName to be an explicit nil
func (o *SimpleContactDto) SetFirstNameNil() {
	o.FirstName.Set(nil)
}

// UnsetFirstName ensures that no value is present for FirstName, not even an explicit nil
func (o *SimpleContactDto) UnsetFirstName() {
	o.FirstName.Unset()
}

// GetLastName returns the LastName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetLastName() string {
	if o == nil || IsNil(o.LastName.Get()) {
		var ret string
		return ret
	}
	return *o.LastName.Get()
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastName.Get(), o.LastName.IsSet()
}

// HasLastName returns a boolean if a field has been set.
func (o *SimpleContactDto) HasLastName() bool {
	if o != nil && o.LastName.IsSet() {
		return true
	}

	return false
}

// SetLastName gets a reference to the given NullableString and assigns it to the LastName field.
func (o *SimpleContactDto) SetLastName(v string) {
	o.LastName.Set(&v)
}
// SetLastNameNil sets the value for LastName to be an explicit nil
func (o *SimpleContactDto) SetLastNameNil() {
	o.LastName.Set(nil)
}

// UnsetLastName ensures that no value is present for LastName, not even an explicit nil
func (o *SimpleContactDto) UnsetLastName() {
	o.LastName.Unset()
}

// GetJobTitle returns the JobTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetJobTitle() string {
	if o == nil || IsNil(o.JobTitle.Get()) {
		var ret string
		return ret
	}
	return *o.JobTitle.Get()
}

// GetJobTitleOk returns a tuple with the JobTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetJobTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.JobTitle.Get(), o.JobTitle.IsSet()
}

// HasJobTitle returns a boolean if a field has been set.
func (o *SimpleContactDto) HasJobTitle() bool {
	if o != nil && o.JobTitle.IsSet() {
		return true
	}

	return false
}

// SetJobTitle gets a reference to the given NullableString and assigns it to the JobTitle field.
func (o *SimpleContactDto) SetJobTitle(v string) {
	o.JobTitle.Set(&v)
}
// SetJobTitleNil sets the value for JobTitle to be an explicit nil
func (o *SimpleContactDto) SetJobTitleNil() {
	o.JobTitle.Set(nil)
}

// UnsetJobTitle ensures that no value is present for JobTitle, not even an explicit nil
func (o *SimpleContactDto) UnsetJobTitle() {
	o.JobTitle.Unset()
}

// GetCoverUrl returns the CoverUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetCoverUrl() string {
	if o == nil || IsNil(o.CoverUrl.Get()) {
		var ret string
		return ret
	}
	return *o.CoverUrl.Get()
}

// GetCoverUrlOk returns a tuple with the CoverUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetCoverUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CoverUrl.Get(), o.CoverUrl.IsSet()
}

// HasCoverUrl returns a boolean if a field has been set.
func (o *SimpleContactDto) HasCoverUrl() bool {
	if o != nil && o.CoverUrl.IsSet() {
		return true
	}

	return false
}

// SetCoverUrl gets a reference to the given NullableString and assigns it to the CoverUrl field.
func (o *SimpleContactDto) SetCoverUrl(v string) {
	o.CoverUrl.Set(&v)
}
// SetCoverUrlNil sets the value for CoverUrl to be an explicit nil
func (o *SimpleContactDto) SetCoverUrlNil() {
	o.CoverUrl.Set(nil)
}

// UnsetCoverUrl ensures that no value is present for CoverUrl, not even an explicit nil
func (o *SimpleContactDto) UnsetCoverUrl() {
	o.CoverUrl.Unset()
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetAvatarUrl() string {
	if o == nil || IsNil(o.AvatarUrl.Get()) {
		var ret string
		return ret
	}
	return *o.AvatarUrl.Get()
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetAvatarUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AvatarUrl.Get(), o.AvatarUrl.IsSet()
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *SimpleContactDto) HasAvatarUrl() bool {
	if o != nil && o.AvatarUrl.IsSet() {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given NullableString and assigns it to the AvatarUrl field.
func (o *SimpleContactDto) SetAvatarUrl(v string) {
	o.AvatarUrl.Set(&v)
}
// SetAvatarUrlNil sets the value for AvatarUrl to be an explicit nil
func (o *SimpleContactDto) SetAvatarUrlNil() {
	o.AvatarUrl.Set(nil)
}

// UnsetAvatarUrl ensures that no value is present for AvatarUrl, not even an explicit nil
func (o *SimpleContactDto) UnsetAvatarUrl() {
	o.AvatarUrl.Unset()
}

// GetCountryId returns the CountryId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetCountryId() string {
	if o == nil || IsNil(o.CountryId.Get()) {
		var ret string
		return ret
	}
	return *o.CountryId.Get()
}

// GetCountryIdOk returns a tuple with the CountryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetCountryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryId.Get(), o.CountryId.IsSet()
}

// HasCountryId returns a boolean if a field has been set.
func (o *SimpleContactDto) HasCountryId() bool {
	if o != nil && o.CountryId.IsSet() {
		return true
	}

	return false
}

// SetCountryId gets a reference to the given NullableString and assigns it to the CountryId field.
func (o *SimpleContactDto) SetCountryId(v string) {
	o.CountryId.Set(&v)
}
// SetCountryIdNil sets the value for CountryId to be an explicit nil
func (o *SimpleContactDto) SetCountryIdNil() {
	o.CountryId.Set(nil)
}

// UnsetCountryId ensures that no value is present for CountryId, not even an explicit nil
func (o *SimpleContactDto) UnsetCountryId() {
	o.CountryId.Unset()
}

// GetTimezoneId returns the TimezoneId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetTimezoneId() string {
	if o == nil || IsNil(o.TimezoneId.Get()) {
		var ret string
		return ret
	}
	return *o.TimezoneId.Get()
}

// GetTimezoneIdOk returns a tuple with the TimezoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetTimezoneIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimezoneId.Get(), o.TimezoneId.IsSet()
}

// HasTimezoneId returns a boolean if a field has been set.
func (o *SimpleContactDto) HasTimezoneId() bool {
	if o != nil && o.TimezoneId.IsSet() {
		return true
	}

	return false
}

// SetTimezoneId gets a reference to the given NullableString and assigns it to the TimezoneId field.
func (o *SimpleContactDto) SetTimezoneId(v string) {
	o.TimezoneId.Set(&v)
}
// SetTimezoneIdNil sets the value for TimezoneId to be an explicit nil
func (o *SimpleContactDto) SetTimezoneIdNil() {
	o.TimezoneId.Set(nil)
}

// UnsetTimezoneId ensures that no value is present for TimezoneId, not even an explicit nil
func (o *SimpleContactDto) UnsetTimezoneId() {
	o.TimezoneId.Unset()
}

// GetLanguageId returns the LanguageId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetLanguageId() string {
	if o == nil || IsNil(o.LanguageId.Get()) {
		var ret string
		return ret
	}
	return *o.LanguageId.Get()
}

// GetLanguageIdOk returns a tuple with the LanguageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetLanguageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LanguageId.Get(), o.LanguageId.IsSet()
}

// HasLanguageId returns a boolean if a field has been set.
func (o *SimpleContactDto) HasLanguageId() bool {
	if o != nil && o.LanguageId.IsSet() {
		return true
	}

	return false
}

// SetLanguageId gets a reference to the given NullableString and assigns it to the LanguageId field.
func (o *SimpleContactDto) SetLanguageId(v string) {
	o.LanguageId.Set(&v)
}
// SetLanguageIdNil sets the value for LanguageId to be an explicit nil
func (o *SimpleContactDto) SetLanguageIdNil() {
	o.LanguageId.Set(nil)
}

// UnsetLanguageId ensures that no value is present for LanguageId, not even an explicit nil
func (o *SimpleContactDto) UnsetLanguageId() {
	o.LanguageId.Unset()
}

// GetSocialProfileId returns the SocialProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetSocialProfileId() string {
	if o == nil || IsNil(o.SocialProfileId.Get()) {
		var ret string
		return ret
	}
	return *o.SocialProfileId.Get()
}

// GetSocialProfileIdOk returns a tuple with the SocialProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetSocialProfileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SocialProfileId.Get(), o.SocialProfileId.IsSet()
}

// HasSocialProfileId returns a boolean if a field has been set.
func (o *SimpleContactDto) HasSocialProfileId() bool {
	if o != nil && o.SocialProfileId.IsSet() {
		return true
	}

	return false
}

// SetSocialProfileId gets a reference to the given NullableString and assigns it to the SocialProfileId field.
func (o *SimpleContactDto) SetSocialProfileId(v string) {
	o.SocialProfileId.Set(&v)
}
// SetSocialProfileIdNil sets the value for SocialProfileId to be an explicit nil
func (o *SimpleContactDto) SetSocialProfileIdNil() {
	o.SocialProfileId.Set(nil)
}

// UnsetSocialProfileId ensures that no value is present for SocialProfileId, not even an explicit nil
func (o *SimpleContactDto) UnsetSocialProfileId() {
	o.SocialProfileId.Unset()
}

// GetWebUrl returns the WebUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetWebUrl() string {
	if o == nil || IsNil(o.WebUrl.Get()) {
		var ret string
		return ret
	}
	return *o.WebUrl.Get()
}

// GetWebUrlOk returns a tuple with the WebUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetWebUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WebUrl.Get(), o.WebUrl.IsSet()
}

// HasWebUrl returns a boolean if a field has been set.
func (o *SimpleContactDto) HasWebUrl() bool {
	if o != nil && o.WebUrl.IsSet() {
		return true
	}

	return false
}

// SetWebUrl gets a reference to the given NullableString and assigns it to the WebUrl field.
func (o *SimpleContactDto) SetWebUrl(v string) {
	o.WebUrl.Set(&v)
}
// SetWebUrlNil sets the value for WebUrl to be an explicit nil
func (o *SimpleContactDto) SetWebUrlNil() {
	o.WebUrl.Set(nil)
}

// UnsetWebUrl ensures that no value is present for WebUrl, not even an explicit nil
func (o *SimpleContactDto) UnsetWebUrl() {
	o.WebUrl.Unset()
}

// GetGitHubUrl returns the GitHubUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetGitHubUrl() string {
	if o == nil || IsNil(o.GitHubUrl.Get()) {
		var ret string
		return ret
	}
	return *o.GitHubUrl.Get()
}

// GetGitHubUrlOk returns a tuple with the GitHubUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetGitHubUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GitHubUrl.Get(), o.GitHubUrl.IsSet()
}

// HasGitHubUrl returns a boolean if a field has been set.
func (o *SimpleContactDto) HasGitHubUrl() bool {
	if o != nil && o.GitHubUrl.IsSet() {
		return true
	}

	return false
}

// SetGitHubUrl gets a reference to the given NullableString and assigns it to the GitHubUrl field.
func (o *SimpleContactDto) SetGitHubUrl(v string) {
	o.GitHubUrl.Set(&v)
}
// SetGitHubUrlNil sets the value for GitHubUrl to be an explicit nil
func (o *SimpleContactDto) SetGitHubUrlNil() {
	o.GitHubUrl.Set(nil)
}

// UnsetGitHubUrl ensures that no value is present for GitHubUrl, not even an explicit nil
func (o *SimpleContactDto) UnsetGitHubUrl() {
	o.GitHubUrl.Unset()
}

// GetTwitchUrl returns the TwitchUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetTwitchUrl() string {
	if o == nil || IsNil(o.TwitchUrl.Get()) {
		var ret string
		return ret
	}
	return *o.TwitchUrl.Get()
}

// GetTwitchUrlOk returns a tuple with the TwitchUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetTwitchUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TwitchUrl.Get(), o.TwitchUrl.IsSet()
}

// HasTwitchUrl returns a boolean if a field has been set.
func (o *SimpleContactDto) HasTwitchUrl() bool {
	if o != nil && o.TwitchUrl.IsSet() {
		return true
	}

	return false
}

// SetTwitchUrl gets a reference to the given NullableString and assigns it to the TwitchUrl field.
func (o *SimpleContactDto) SetTwitchUrl(v string) {
	o.TwitchUrl.Set(&v)
}
// SetTwitchUrlNil sets the value for TwitchUrl to be an explicit nil
func (o *SimpleContactDto) SetTwitchUrlNil() {
	o.TwitchUrl.Set(nil)
}

// UnsetTwitchUrl ensures that no value is present for TwitchUrl, not even an explicit nil
func (o *SimpleContactDto) UnsetTwitchUrl() {
	o.TwitchUrl.Unset()
}

// GetRedditUrl returns the RedditUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetRedditUrl() string {
	if o == nil || IsNil(o.RedditUrl.Get()) {
		var ret string
		return ret
	}
	return *o.RedditUrl.Get()
}

// GetRedditUrlOk returns a tuple with the RedditUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetRedditUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RedditUrl.Get(), o.RedditUrl.IsSet()
}

// HasRedditUrl returns a boolean if a field has been set.
func (o *SimpleContactDto) HasRedditUrl() bool {
	if o != nil && o.RedditUrl.IsSet() {
		return true
	}

	return false
}

// SetRedditUrl gets a reference to the given NullableString and assigns it to the RedditUrl field.
func (o *SimpleContactDto) SetRedditUrl(v string) {
	o.RedditUrl.Set(&v)
}
// SetRedditUrlNil sets the value for RedditUrl to be an explicit nil
func (o *SimpleContactDto) SetRedditUrlNil() {
	o.RedditUrl.Set(nil)
}

// UnsetRedditUrl ensures that no value is present for RedditUrl, not even an explicit nil
func (o *SimpleContactDto) UnsetRedditUrl() {
	o.RedditUrl.Unset()
}

// GetTikTokUrl returns the TikTokUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetTikTokUrl() string {
	if o == nil || IsNil(o.TikTokUrl.Get()) {
		var ret string
		return ret
	}
	return *o.TikTokUrl.Get()
}

// GetTikTokUrlOk returns a tuple with the TikTokUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetTikTokUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TikTokUrl.Get(), o.TikTokUrl.IsSet()
}

// HasTikTokUrl returns a boolean if a field has been set.
func (o *SimpleContactDto) HasTikTokUrl() bool {
	if o != nil && o.TikTokUrl.IsSet() {
		return true
	}

	return false
}

// SetTikTokUrl gets a reference to the given NullableString and assigns it to the TikTokUrl field.
func (o *SimpleContactDto) SetTikTokUrl(v string) {
	o.TikTokUrl.Set(&v)
}
// SetTikTokUrlNil sets the value for TikTokUrl to be an explicit nil
func (o *SimpleContactDto) SetTikTokUrlNil() {
	o.TikTokUrl.Set(nil)
}

// UnsetTikTokUrl ensures that no value is present for TikTokUrl, not even an explicit nil
func (o *SimpleContactDto) UnsetTikTokUrl() {
	o.TikTokUrl.Unset()
}

// GetWebsiteUrl returns the WebsiteUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetWebsiteUrl() string {
	if o == nil || IsNil(o.WebsiteUrl.Get()) {
		var ret string
		return ret
	}
	return *o.WebsiteUrl.Get()
}

// GetWebsiteUrlOk returns a tuple with the WebsiteUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetWebsiteUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WebsiteUrl.Get(), o.WebsiteUrl.IsSet()
}

// HasWebsiteUrl returns a boolean if a field has been set.
func (o *SimpleContactDto) HasWebsiteUrl() bool {
	if o != nil && o.WebsiteUrl.IsSet() {
		return true
	}

	return false
}

// SetWebsiteUrl gets a reference to the given NullableString and assigns it to the WebsiteUrl field.
func (o *SimpleContactDto) SetWebsiteUrl(v string) {
	o.WebsiteUrl.Set(&v)
}
// SetWebsiteUrlNil sets the value for WebsiteUrl to be an explicit nil
func (o *SimpleContactDto) SetWebsiteUrlNil() {
	o.WebsiteUrl.Set(nil)
}

// UnsetWebsiteUrl ensures that no value is present for WebsiteUrl, not even an explicit nil
func (o *SimpleContactDto) UnsetWebsiteUrl() {
	o.WebsiteUrl.Unset()
}

// GetTwitterUrl returns the TwitterUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetTwitterUrl() string {
	if o == nil || IsNil(o.TwitterUrl.Get()) {
		var ret string
		return ret
	}
	return *o.TwitterUrl.Get()
}

// GetTwitterUrlOk returns a tuple with the TwitterUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetTwitterUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TwitterUrl.Get(), o.TwitterUrl.IsSet()
}

// HasTwitterUrl returns a boolean if a field has been set.
func (o *SimpleContactDto) HasTwitterUrl() bool {
	if o != nil && o.TwitterUrl.IsSet() {
		return true
	}

	return false
}

// SetTwitterUrl gets a reference to the given NullableString and assigns it to the TwitterUrl field.
func (o *SimpleContactDto) SetTwitterUrl(v string) {
	o.TwitterUrl.Set(&v)
}
// SetTwitterUrlNil sets the value for TwitterUrl to be an explicit nil
func (o *SimpleContactDto) SetTwitterUrlNil() {
	o.TwitterUrl.Set(nil)
}

// UnsetTwitterUrl ensures that no value is present for TwitterUrl, not even an explicit nil
func (o *SimpleContactDto) UnsetTwitterUrl() {
	o.TwitterUrl.Unset()
}

// GetFacebookUrl returns the FacebookUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetFacebookUrl() string {
	if o == nil || IsNil(o.FacebookUrl.Get()) {
		var ret string
		return ret
	}
	return *o.FacebookUrl.Get()
}

// GetFacebookUrlOk returns a tuple with the FacebookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetFacebookUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FacebookUrl.Get(), o.FacebookUrl.IsSet()
}

// HasFacebookUrl returns a boolean if a field has been set.
func (o *SimpleContactDto) HasFacebookUrl() bool {
	if o != nil && o.FacebookUrl.IsSet() {
		return true
	}

	return false
}

// SetFacebookUrl gets a reference to the given NullableString and assigns it to the FacebookUrl field.
func (o *SimpleContactDto) SetFacebookUrl(v string) {
	o.FacebookUrl.Set(&v)
}
// SetFacebookUrlNil sets the value for FacebookUrl to be an explicit nil
func (o *SimpleContactDto) SetFacebookUrlNil() {
	o.FacebookUrl.Set(nil)
}

// UnsetFacebookUrl ensures that no value is present for FacebookUrl, not even an explicit nil
func (o *SimpleContactDto) UnsetFacebookUrl() {
	o.FacebookUrl.Unset()
}

// GetYouTubeUrl returns the YouTubeUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetYouTubeUrl() string {
	if o == nil || IsNil(o.YouTubeUrl.Get()) {
		var ret string
		return ret
	}
	return *o.YouTubeUrl.Get()
}

// GetYouTubeUrlOk returns a tuple with the YouTubeUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetYouTubeUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.YouTubeUrl.Get(), o.YouTubeUrl.IsSet()
}

// HasYouTubeUrl returns a boolean if a field has been set.
func (o *SimpleContactDto) HasYouTubeUrl() bool {
	if o != nil && o.YouTubeUrl.IsSet() {
		return true
	}

	return false
}

// SetYouTubeUrl gets a reference to the given NullableString and assigns it to the YouTubeUrl field.
func (o *SimpleContactDto) SetYouTubeUrl(v string) {
	o.YouTubeUrl.Set(&v)
}
// SetYouTubeUrlNil sets the value for YouTubeUrl to be an explicit nil
func (o *SimpleContactDto) SetYouTubeUrlNil() {
	o.YouTubeUrl.Set(nil)
}

// UnsetYouTubeUrl ensures that no value is present for YouTubeUrl, not even an explicit nil
func (o *SimpleContactDto) UnsetYouTubeUrl() {
	o.YouTubeUrl.Unset()
}

// GetLinkedInUrl returns the LinkedInUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetLinkedInUrl() string {
	if o == nil || IsNil(o.LinkedInUrl.Get()) {
		var ret string
		return ret
	}
	return *o.LinkedInUrl.Get()
}

// GetLinkedInUrlOk returns a tuple with the LinkedInUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetLinkedInUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LinkedInUrl.Get(), o.LinkedInUrl.IsSet()
}

// HasLinkedInUrl returns a boolean if a field has been set.
func (o *SimpleContactDto) HasLinkedInUrl() bool {
	if o != nil && o.LinkedInUrl.IsSet() {
		return true
	}

	return false
}

// SetLinkedInUrl gets a reference to the given NullableString and assigns it to the LinkedInUrl field.
func (o *SimpleContactDto) SetLinkedInUrl(v string) {
	o.LinkedInUrl.Set(&v)
}
// SetLinkedInUrlNil sets the value for LinkedInUrl to be an explicit nil
func (o *SimpleContactDto) SetLinkedInUrlNil() {
	o.LinkedInUrl.Set(nil)
}

// UnsetLinkedInUrl ensures that no value is present for LinkedInUrl, not even an explicit nil
func (o *SimpleContactDto) UnsetLinkedInUrl() {
	o.LinkedInUrl.Unset()
}

// GetInstagramUrl returns the InstagramUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetInstagramUrl() string {
	if o == nil || IsNil(o.InstagramUrl.Get()) {
		var ret string
		return ret
	}
	return *o.InstagramUrl.Get()
}

// GetInstagramUrlOk returns a tuple with the InstagramUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetInstagramUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstagramUrl.Get(), o.InstagramUrl.IsSet()
}

// HasInstagramUrl returns a boolean if a field has been set.
func (o *SimpleContactDto) HasInstagramUrl() bool {
	if o != nil && o.InstagramUrl.IsSet() {
		return true
	}

	return false
}

// SetInstagramUrl gets a reference to the given NullableString and assigns it to the InstagramUrl field.
func (o *SimpleContactDto) SetInstagramUrl(v string) {
	o.InstagramUrl.Set(&v)
}
// SetInstagramUrlNil sets the value for InstagramUrl to be an explicit nil
func (o *SimpleContactDto) SetInstagramUrlNil() {
	o.InstagramUrl.Set(nil)
}

// UnsetInstagramUrl ensures that no value is present for InstagramUrl, not even an explicit nil
func (o *SimpleContactDto) UnsetInstagramUrl() {
	o.InstagramUrl.Unset()
}

// GetGithubUsername returns the GithubUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimpleContactDto) GetGithubUsername() string {
	if o == nil || IsNil(o.GithubUsername.Get()) {
		var ret string
		return ret
	}
	return *o.GithubUsername.Get()
}

// GetGithubUsernameOk returns a tuple with the GithubUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimpleContactDto) GetGithubUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GithubUsername.Get(), o.GithubUsername.IsSet()
}

// HasGithubUsername returns a boolean if a field has been set.
func (o *SimpleContactDto) HasGithubUsername() bool {
	if o != nil && o.GithubUsername.IsSet() {
		return true
	}

	return false
}

// SetGithubUsername gets a reference to the given NullableString and assigns it to the GithubUsername field.
func (o *SimpleContactDto) SetGithubUsername(v string) {
	o.GithubUsername.Set(&v)
}
// SetGithubUsernameNil sets the value for GithubUsername to be an explicit nil
func (o *SimpleContactDto) SetGithubUsernameNil() {
	o.GithubUsername.Set(nil)
}

// UnsetGithubUsername ensures that no value is present for GithubUsername, not even an explicit nil
func (o *SimpleContactDto) UnsetGithubUsername() {
	o.GithubUsername.Unset()
}

func (o SimpleContactDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SimpleContactDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Timestamp.IsSet() {
		toSerialize["timestamp"] = o.Timestamp.Get()
	}
	if o.QualifiedName.IsSet() {
		toSerialize["qualifiedName"] = o.QualifiedName.Get()
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if o.PublicName.IsSet() {
		toSerialize["publicName"] = o.PublicName.Get()
	}
	if o.FirstName.IsSet() {
		toSerialize["firstName"] = o.FirstName.Get()
	}
	if o.LastName.IsSet() {
		toSerialize["lastName"] = o.LastName.Get()
	}
	if o.JobTitle.IsSet() {
		toSerialize["jobTitle"] = o.JobTitle.Get()
	}
	if o.CoverUrl.IsSet() {
		toSerialize["coverUrl"] = o.CoverUrl.Get()
	}
	if o.AvatarUrl.IsSet() {
		toSerialize["avatarUrl"] = o.AvatarUrl.Get()
	}
	if o.CountryId.IsSet() {
		toSerialize["countryId"] = o.CountryId.Get()
	}
	if o.TimezoneId.IsSet() {
		toSerialize["timezoneId"] = o.TimezoneId.Get()
	}
	if o.LanguageId.IsSet() {
		toSerialize["languageId"] = o.LanguageId.Get()
	}
	if o.SocialProfileId.IsSet() {
		toSerialize["socialProfileId"] = o.SocialProfileId.Get()
	}
	if o.WebUrl.IsSet() {
		toSerialize["webUrl"] = o.WebUrl.Get()
	}
	if o.GitHubUrl.IsSet() {
		toSerialize["gitHubUrl"] = o.GitHubUrl.Get()
	}
	if o.TwitchUrl.IsSet() {
		toSerialize["twitchUrl"] = o.TwitchUrl.Get()
	}
	if o.RedditUrl.IsSet() {
		toSerialize["redditUrl"] = o.RedditUrl.Get()
	}
	if o.TikTokUrl.IsSet() {
		toSerialize["tikTokUrl"] = o.TikTokUrl.Get()
	}
	if o.WebsiteUrl.IsSet() {
		toSerialize["websiteUrl"] = o.WebsiteUrl.Get()
	}
	if o.TwitterUrl.IsSet() {
		toSerialize["twitterUrl"] = o.TwitterUrl.Get()
	}
	if o.FacebookUrl.IsSet() {
		toSerialize["facebookUrl"] = o.FacebookUrl.Get()
	}
	if o.YouTubeUrl.IsSet() {
		toSerialize["youTubeUrl"] = o.YouTubeUrl.Get()
	}
	if o.LinkedInUrl.IsSet() {
		toSerialize["linkedInUrl"] = o.LinkedInUrl.Get()
	}
	if o.InstagramUrl.IsSet() {
		toSerialize["instagramUrl"] = o.InstagramUrl.Get()
	}
	if o.GithubUsername.IsSet() {
		toSerialize["githubUsername"] = o.GithubUsername.Get()
	}
	return toSerialize, nil
}

type NullableSimpleContactDto struct {
	value *SimpleContactDto
	isSet bool
}

func (v NullableSimpleContactDto) Get() *SimpleContactDto {
	return v.value
}

func (v *NullableSimpleContactDto) Set(val *SimpleContactDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSimpleContactDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSimpleContactDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSimpleContactDto(val *SimpleContactDto) *NullableSimpleContactDto {
	return &NullableSimpleContactDto{value: val, isSet: true}
}

func (v NullableSimpleContactDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSimpleContactDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


