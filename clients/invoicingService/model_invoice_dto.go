/*
InvoicingService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the InvoiceDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceDto{}

// InvoiceDto struct for InvoiceDto
type InvoiceDto struct {
	Id NullableString `json:"id,omitempty"`
	Timestamp NullableTime `json:"timestamp,omitempty"`
	Closed *bool `json:"closed,omitempty"`
	Type NullableString `json:"type,omitempty"`
	Title NullableString `json:"title,omitempty"`
	UserId NullableString `json:"userId,omitempty"`
	TenantId NullableString `json:"tenantId,omitempty"`
	CurrencyId NullableString `json:"currencyId,omitempty"`
	Description NullableString `json:"description,omitempty"`
	PriceListId NullableString `json:"priceListId,omitempty"`
	EnrollmentId NullableString `json:"enrollmentId,omitempty"`
	IndividualId NullableString `json:"individualId,omitempty"`
	OrganizationId NullableString `json:"organizationId,omitempty"`
	ReceiverTenantId NullableString `json:"receiverTenantId,omitempty"`
	FirstName NullableString `json:"firstName,omitempty"`
	LastName NullableString `json:"lastName,omitempty"`
	CompanyName NullableString `json:"companyName,omitempty"`
	BillingEmail NullableString `json:"billingEmail,omitempty"`
	AddressLine1 NullableString `json:"addressLine1,omitempty"`
	AddressLine2 NullableString `json:"addressLine2,omitempty"`
	PostalCode NullableString `json:"postalCode,omitempty"`
	CountryId NullableString `json:"countryId,omitempty"`
	StateId NullableString `json:"stateId,omitempty"`
	CityId NullableString `json:"cityId,omitempty"`
	CustomerNotes NullableString `json:"customerNotes,omitempty"`
	ForexRate *float64 `json:"forexRate,omitempty"`
	Total *float64 `json:"total,omitempty"`
	TotalTaxes *float64 `json:"totalTaxes,omitempty"`
	TotalTaxBase *float64 `json:"totalTaxBase,omitempty"`
	TotalDiscounts *float64 `json:"totalDiscounts,omitempty"`
	TotalSurcharges *float64 `json:"totalSurcharges,omitempty"`
	TotalGlobalDiscounts *float64 `json:"totalGlobalDiscounts,omitempty"`
	TotalGlobalSurcharges *float64 `json:"totalGlobalSurcharges,omitempty"`
	TotalTaxesInUsd *float64 `json:"totalTaxesInUsd,omitempty"`
	TotalAmountInUsd *float64 `json:"totalAmountInUsd,omitempty"`
	TotalProfitInUsd *float64 `json:"totalProfitInUsd,omitempty"`
	TotalTaxBaseInUsd *float64 `json:"totalTaxBaseInUsd,omitempty"`
	TotalDiscountsInUsd *float64 `json:"totalDiscountsInUsd,omitempty"`
	TotalSurchargesInUsd *float64 `json:"totalSurchargesInUsd,omitempty"`
	TotalDetailAmountInUsd *float64 `json:"totalDetailAmountInUsd,omitempty"`
	TotalGlobalDiscountsInUsd *float64 `json:"totalGlobalDiscountsInUsd,omitempty"`
	TotalGlobalSurchargesInUsd *float64 `json:"totalGlobalSurchargesInUsd,omitempty"`
	TotalWithholdingTaxesInUsd *float64 `json:"totalWithholdingTaxesInUsd,omitempty"`
	TotalShippingCostInUsd *float64 `json:"totalShippingCostInUsd,omitempty"`
	TotalShippingTaxesInUsd *float64 `json:"totalShippingTaxesInUsd,omitempty"`
	Currency *Currency `json:"currency,omitempty"`
	TotalInUsd *Money `json:"totalInUsd,omitempty"`
	TotalTaxAmountInUsd *Money `json:"totalTaxAmountInUsd,omitempty"`
	TotalTaxBaseAmountInUsd *Money `json:"totalTaxBaseAmountInUsd,omitempty"`
	TotalDiscountsAmountInUsd *Money `json:"totalDiscountsAmountInUsd,omitempty"`
	TotalSurchargesAmountInUsd *Money `json:"totalSurchargesAmountInUsd,omitempty"`
	TotalGlobalDiscountsAmountInUsd *Money `json:"totalGlobalDiscountsAmountInUsd,omitempty"`
	TotalGlobalSurchargesAmountInUsd *Money `json:"totalGlobalSurchargesAmountInUsd,omitempty"`
	TotalAmount *Money `json:"totalAmount,omitempty"`
	TotalTaxAmount *Money `json:"totalTaxAmount,omitempty"`
	TotalTaxBaseAmount *Money `json:"totalTaxBaseAmount,omitempty"`
	TotalDiscountsAmount *Money `json:"totalDiscountsAmount,omitempty"`
	TotalSurchargesAmount *Money `json:"totalSurchargesAmount,omitempty"`
	TotalGlobalDiscountsAmount *Money `json:"totalGlobalDiscountsAmount,omitempty"`
	TotalGlobalSurchargesAmount *Money `json:"totalGlobalSurchargesAmount,omitempty"`
	Paid *bool `json:"paid,omitempty"`
	Number *int64 `json:"number,omitempty"`
	Notes NullableString `json:"notes,omitempty"`
	OrderId NullableString `json:"orderId,omitempty"`
	Enumeration NullableString `json:"enumeration,omitempty"`
	PaymentModeId NullableString `json:"paymentModeId,omitempty"`
	EnumerationRangeId NullableString `json:"enumerationRangeId,omitempty"`
	EmisorBillingProfileId NullableString `json:"emisorBillingProfileId,omitempty"`
	ReceiverBillingProfileId NullableString `json:"receiverBillingProfileId,omitempty"`
	EmisorWalletAccountId NullableString `json:"emisorWalletAccountId,omitempty"`
	ReceiverWalletAccountId NullableString `json:"receiverWalletAccountId,omitempty"`
	PaymentDue NullableTime `json:"paymentDue,omitempty"`
	InvoiceType *int32 `json:"invoiceType,omitempty"`
	DocumentType *int32 `json:"documentType,omitempty"`
	InvoiceStatus *int32 `json:"invoiceStatus,omitempty"`
}

// NewInvoiceDto instantiates a new InvoiceDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceDto() *InvoiceDto {
	this := InvoiceDto{}
	return &this
}

// NewInvoiceDtoWithDefaults instantiates a new InvoiceDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceDtoWithDefaults() *InvoiceDto {
	this := InvoiceDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *InvoiceDto) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *InvoiceDto) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *InvoiceDto) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *InvoiceDto) UnsetId() {
	o.Id.Unset()
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp.Get()
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timestamp.Get(), o.Timestamp.IsSet()
}

// HasTimestamp returns a boolean if a field has been set.
func (o *InvoiceDto) HasTimestamp() bool {
	if o != nil && o.Timestamp.IsSet() {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given NullableTime and assigns it to the Timestamp field.
func (o *InvoiceDto) SetTimestamp(v time.Time) {
	o.Timestamp.Set(&v)
}
// SetTimestampNil sets the value for Timestamp to be an explicit nil
func (o *InvoiceDto) SetTimestampNil() {
	o.Timestamp.Set(nil)
}

// UnsetTimestamp ensures that no value is present for Timestamp, not even an explicit nil
func (o *InvoiceDto) UnsetTimestamp() {
	o.Timestamp.Unset()
}

// GetClosed returns the Closed field value if set, zero value otherwise.
func (o *InvoiceDto) GetClosed() bool {
	if o == nil || IsNil(o.Closed) {
		var ret bool
		return ret
	}
	return *o.Closed
}

// GetClosedOk returns a tuple with the Closed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetClosedOk() (*bool, bool) {
	if o == nil || IsNil(o.Closed) {
		return nil, false
	}
	return o.Closed, true
}

// HasClosed returns a boolean if a field has been set.
func (o *InvoiceDto) HasClosed() bool {
	if o != nil && !IsNil(o.Closed) {
		return true
	}

	return false
}

// SetClosed gets a reference to the given bool and assigns it to the Closed field.
func (o *InvoiceDto) SetClosed(v bool) {
	o.Closed = &v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *InvoiceDto) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *InvoiceDto) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *InvoiceDto) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *InvoiceDto) UnsetType() {
	o.Type.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *InvoiceDto) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *InvoiceDto) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *InvoiceDto) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *InvoiceDto) UnsetTitle() {
	o.Title.Unset()
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetUserId() string {
	if o == nil || IsNil(o.UserId.Get()) {
		var ret string
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *InvoiceDto) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableString and assigns it to the UserId field.
func (o *InvoiceDto) SetUserId(v string) {
	o.UserId.Set(&v)
}
// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *InvoiceDto) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *InvoiceDto) UnsetUserId() {
	o.UserId.Unset()
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *InvoiceDto) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *InvoiceDto) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *InvoiceDto) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *InvoiceDto) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetCurrencyId() string {
	if o == nil || IsNil(o.CurrencyId.Get()) {
		var ret string
		return ret
	}
	return *o.CurrencyId.Get()
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetCurrencyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrencyId.Get(), o.CurrencyId.IsSet()
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *InvoiceDto) HasCurrencyId() bool {
	if o != nil && o.CurrencyId.IsSet() {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given NullableString and assigns it to the CurrencyId field.
func (o *InvoiceDto) SetCurrencyId(v string) {
	o.CurrencyId.Set(&v)
}
// SetCurrencyIdNil sets the value for CurrencyId to be an explicit nil
func (o *InvoiceDto) SetCurrencyIdNil() {
	o.CurrencyId.Set(nil)
}

// UnsetCurrencyId ensures that no value is present for CurrencyId, not even an explicit nil
func (o *InvoiceDto) UnsetCurrencyId() {
	o.CurrencyId.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *InvoiceDto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *InvoiceDto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *InvoiceDto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *InvoiceDto) UnsetDescription() {
	o.Description.Unset()
}

// GetPriceListId returns the PriceListId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetPriceListId() string {
	if o == nil || IsNil(o.PriceListId.Get()) {
		var ret string
		return ret
	}
	return *o.PriceListId.Get()
}

// GetPriceListIdOk returns a tuple with the PriceListId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetPriceListIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceListId.Get(), o.PriceListId.IsSet()
}

// HasPriceListId returns a boolean if a field has been set.
func (o *InvoiceDto) HasPriceListId() bool {
	if o != nil && o.PriceListId.IsSet() {
		return true
	}

	return false
}

// SetPriceListId gets a reference to the given NullableString and assigns it to the PriceListId field.
func (o *InvoiceDto) SetPriceListId(v string) {
	o.PriceListId.Set(&v)
}
// SetPriceListIdNil sets the value for PriceListId to be an explicit nil
func (o *InvoiceDto) SetPriceListIdNil() {
	o.PriceListId.Set(nil)
}

// UnsetPriceListId ensures that no value is present for PriceListId, not even an explicit nil
func (o *InvoiceDto) UnsetPriceListId() {
	o.PriceListId.Unset()
}

// GetEnrollmentId returns the EnrollmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetEnrollmentId() string {
	if o == nil || IsNil(o.EnrollmentId.Get()) {
		var ret string
		return ret
	}
	return *o.EnrollmentId.Get()
}

// GetEnrollmentIdOk returns a tuple with the EnrollmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetEnrollmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnrollmentId.Get(), o.EnrollmentId.IsSet()
}

// HasEnrollmentId returns a boolean if a field has been set.
func (o *InvoiceDto) HasEnrollmentId() bool {
	if o != nil && o.EnrollmentId.IsSet() {
		return true
	}

	return false
}

// SetEnrollmentId gets a reference to the given NullableString and assigns it to the EnrollmentId field.
func (o *InvoiceDto) SetEnrollmentId(v string) {
	o.EnrollmentId.Set(&v)
}
// SetEnrollmentIdNil sets the value for EnrollmentId to be an explicit nil
func (o *InvoiceDto) SetEnrollmentIdNil() {
	o.EnrollmentId.Set(nil)
}

// UnsetEnrollmentId ensures that no value is present for EnrollmentId, not even an explicit nil
func (o *InvoiceDto) UnsetEnrollmentId() {
	o.EnrollmentId.Unset()
}

// GetIndividualId returns the IndividualId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetIndividualId() string {
	if o == nil || IsNil(o.IndividualId.Get()) {
		var ret string
		return ret
	}
	return *o.IndividualId.Get()
}

// GetIndividualIdOk returns a tuple with the IndividualId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetIndividualIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IndividualId.Get(), o.IndividualId.IsSet()
}

// HasIndividualId returns a boolean if a field has been set.
func (o *InvoiceDto) HasIndividualId() bool {
	if o != nil && o.IndividualId.IsSet() {
		return true
	}

	return false
}

// SetIndividualId gets a reference to the given NullableString and assigns it to the IndividualId field.
func (o *InvoiceDto) SetIndividualId(v string) {
	o.IndividualId.Set(&v)
}
// SetIndividualIdNil sets the value for IndividualId to be an explicit nil
func (o *InvoiceDto) SetIndividualIdNil() {
	o.IndividualId.Set(nil)
}

// UnsetIndividualId ensures that no value is present for IndividualId, not even an explicit nil
func (o *InvoiceDto) UnsetIndividualId() {
	o.IndividualId.Unset()
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId.Get()) {
		var ret string
		return ret
	}
	return *o.OrganizationId.Get()
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationId.Get(), o.OrganizationId.IsSet()
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *InvoiceDto) HasOrganizationId() bool {
	if o != nil && o.OrganizationId.IsSet() {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given NullableString and assigns it to the OrganizationId field.
func (o *InvoiceDto) SetOrganizationId(v string) {
	o.OrganizationId.Set(&v)
}
// SetOrganizationIdNil sets the value for OrganizationId to be an explicit nil
func (o *InvoiceDto) SetOrganizationIdNil() {
	o.OrganizationId.Set(nil)
}

// UnsetOrganizationId ensures that no value is present for OrganizationId, not even an explicit nil
func (o *InvoiceDto) UnsetOrganizationId() {
	o.OrganizationId.Unset()
}

// GetReceiverTenantId returns the ReceiverTenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetReceiverTenantId() string {
	if o == nil || IsNil(o.ReceiverTenantId.Get()) {
		var ret string
		return ret
	}
	return *o.ReceiverTenantId.Get()
}

// GetReceiverTenantIdOk returns a tuple with the ReceiverTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetReceiverTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiverTenantId.Get(), o.ReceiverTenantId.IsSet()
}

// HasReceiverTenantId returns a boolean if a field has been set.
func (o *InvoiceDto) HasReceiverTenantId() bool {
	if o != nil && o.ReceiverTenantId.IsSet() {
		return true
	}

	return false
}

// SetReceiverTenantId gets a reference to the given NullableString and assigns it to the ReceiverTenantId field.
func (o *InvoiceDto) SetReceiverTenantId(v string) {
	o.ReceiverTenantId.Set(&v)
}
// SetReceiverTenantIdNil sets the value for ReceiverTenantId to be an explicit nil
func (o *InvoiceDto) SetReceiverTenantIdNil() {
	o.ReceiverTenantId.Set(nil)
}

// UnsetReceiverTenantId ensures that no value is present for ReceiverTenantId, not even an explicit nil
func (o *InvoiceDto) UnsetReceiverTenantId() {
	o.ReceiverTenantId.Unset()
}

// GetFirstName returns the FirstName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetFirstName() string {
	if o == nil || IsNil(o.FirstName.Get()) {
		var ret string
		return ret
	}
	return *o.FirstName.Get()
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstName.Get(), o.FirstName.IsSet()
}

// HasFirstName returns a boolean if a field has been set.
func (o *InvoiceDto) HasFirstName() bool {
	if o != nil && o.FirstName.IsSet() {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given NullableString and assigns it to the FirstName field.
func (o *InvoiceDto) SetFirstName(v string) {
	o.FirstName.Set(&v)
}
// SetFirstNameNil sets the value for FirstName to be an explicit nil
func (o *InvoiceDto) SetFirstNameNil() {
	o.FirstName.Set(nil)
}

// UnsetFirstName ensures that no value is present for FirstName, not even an explicit nil
func (o *InvoiceDto) UnsetFirstName() {
	o.FirstName.Unset()
}

// GetLastName returns the LastName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetLastName() string {
	if o == nil || IsNil(o.LastName.Get()) {
		var ret string
		return ret
	}
	return *o.LastName.Get()
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastName.Get(), o.LastName.IsSet()
}

// HasLastName returns a boolean if a field has been set.
func (o *InvoiceDto) HasLastName() bool {
	if o != nil && o.LastName.IsSet() {
		return true
	}

	return false
}

// SetLastName gets a reference to the given NullableString and assigns it to the LastName field.
func (o *InvoiceDto) SetLastName(v string) {
	o.LastName.Set(&v)
}
// SetLastNameNil sets the value for LastName to be an explicit nil
func (o *InvoiceDto) SetLastNameNil() {
	o.LastName.Set(nil)
}

// UnsetLastName ensures that no value is present for LastName, not even an explicit nil
func (o *InvoiceDto) UnsetLastName() {
	o.LastName.Unset()
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName.Get()) {
		var ret string
		return ret
	}
	return *o.CompanyName.Get()
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetCompanyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyName.Get(), o.CompanyName.IsSet()
}

// HasCompanyName returns a boolean if a field has been set.
func (o *InvoiceDto) HasCompanyName() bool {
	if o != nil && o.CompanyName.IsSet() {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given NullableString and assigns it to the CompanyName field.
func (o *InvoiceDto) SetCompanyName(v string) {
	o.CompanyName.Set(&v)
}
// SetCompanyNameNil sets the value for CompanyName to be an explicit nil
func (o *InvoiceDto) SetCompanyNameNil() {
	o.CompanyName.Set(nil)
}

// UnsetCompanyName ensures that no value is present for CompanyName, not even an explicit nil
func (o *InvoiceDto) UnsetCompanyName() {
	o.CompanyName.Unset()
}

// GetBillingEmail returns the BillingEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetBillingEmail() string {
	if o == nil || IsNil(o.BillingEmail.Get()) {
		var ret string
		return ret
	}
	return *o.BillingEmail.Get()
}

// GetBillingEmailOk returns a tuple with the BillingEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetBillingEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingEmail.Get(), o.BillingEmail.IsSet()
}

// HasBillingEmail returns a boolean if a field has been set.
func (o *InvoiceDto) HasBillingEmail() bool {
	if o != nil && o.BillingEmail.IsSet() {
		return true
	}

	return false
}

// SetBillingEmail gets a reference to the given NullableString and assigns it to the BillingEmail field.
func (o *InvoiceDto) SetBillingEmail(v string) {
	o.BillingEmail.Set(&v)
}
// SetBillingEmailNil sets the value for BillingEmail to be an explicit nil
func (o *InvoiceDto) SetBillingEmailNil() {
	o.BillingEmail.Set(nil)
}

// UnsetBillingEmail ensures that no value is present for BillingEmail, not even an explicit nil
func (o *InvoiceDto) UnsetBillingEmail() {
	o.BillingEmail.Unset()
}

// GetAddressLine1 returns the AddressLine1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetAddressLine1() string {
	if o == nil || IsNil(o.AddressLine1.Get()) {
		var ret string
		return ret
	}
	return *o.AddressLine1.Get()
}

// GetAddressLine1Ok returns a tuple with the AddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetAddressLine1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressLine1.Get(), o.AddressLine1.IsSet()
}

// HasAddressLine1 returns a boolean if a field has been set.
func (o *InvoiceDto) HasAddressLine1() bool {
	if o != nil && o.AddressLine1.IsSet() {
		return true
	}

	return false
}

// SetAddressLine1 gets a reference to the given NullableString and assigns it to the AddressLine1 field.
func (o *InvoiceDto) SetAddressLine1(v string) {
	o.AddressLine1.Set(&v)
}
// SetAddressLine1Nil sets the value for AddressLine1 to be an explicit nil
func (o *InvoiceDto) SetAddressLine1Nil() {
	o.AddressLine1.Set(nil)
}

// UnsetAddressLine1 ensures that no value is present for AddressLine1, not even an explicit nil
func (o *InvoiceDto) UnsetAddressLine1() {
	o.AddressLine1.Unset()
}

// GetAddressLine2 returns the AddressLine2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetAddressLine2() string {
	if o == nil || IsNil(o.AddressLine2.Get()) {
		var ret string
		return ret
	}
	return *o.AddressLine2.Get()
}

// GetAddressLine2Ok returns a tuple with the AddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetAddressLine2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressLine2.Get(), o.AddressLine2.IsSet()
}

// HasAddressLine2 returns a boolean if a field has been set.
func (o *InvoiceDto) HasAddressLine2() bool {
	if o != nil && o.AddressLine2.IsSet() {
		return true
	}

	return false
}

// SetAddressLine2 gets a reference to the given NullableString and assigns it to the AddressLine2 field.
func (o *InvoiceDto) SetAddressLine2(v string) {
	o.AddressLine2.Set(&v)
}
// SetAddressLine2Nil sets the value for AddressLine2 to be an explicit nil
func (o *InvoiceDto) SetAddressLine2Nil() {
	o.AddressLine2.Set(nil)
}

// UnsetAddressLine2 ensures that no value is present for AddressLine2, not even an explicit nil
func (o *InvoiceDto) UnsetAddressLine2() {
	o.AddressLine2.Unset()
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode.Get()) {
		var ret string
		return ret
	}
	return *o.PostalCode.Get()
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PostalCode.Get(), o.PostalCode.IsSet()
}

// HasPostalCode returns a boolean if a field has been set.
func (o *InvoiceDto) HasPostalCode() bool {
	if o != nil && o.PostalCode.IsSet() {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given NullableString and assigns it to the PostalCode field.
func (o *InvoiceDto) SetPostalCode(v string) {
	o.PostalCode.Set(&v)
}
// SetPostalCodeNil sets the value for PostalCode to be an explicit nil
func (o *InvoiceDto) SetPostalCodeNil() {
	o.PostalCode.Set(nil)
}

// UnsetPostalCode ensures that no value is present for PostalCode, not even an explicit nil
func (o *InvoiceDto) UnsetPostalCode() {
	o.PostalCode.Unset()
}

// GetCountryId returns the CountryId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetCountryId() string {
	if o == nil || IsNil(o.CountryId.Get()) {
		var ret string
		return ret
	}
	return *o.CountryId.Get()
}

// GetCountryIdOk returns a tuple with the CountryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetCountryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryId.Get(), o.CountryId.IsSet()
}

// HasCountryId returns a boolean if a field has been set.
func (o *InvoiceDto) HasCountryId() bool {
	if o != nil && o.CountryId.IsSet() {
		return true
	}

	return false
}

// SetCountryId gets a reference to the given NullableString and assigns it to the CountryId field.
func (o *InvoiceDto) SetCountryId(v string) {
	o.CountryId.Set(&v)
}
// SetCountryIdNil sets the value for CountryId to be an explicit nil
func (o *InvoiceDto) SetCountryIdNil() {
	o.CountryId.Set(nil)
}

// UnsetCountryId ensures that no value is present for CountryId, not even an explicit nil
func (o *InvoiceDto) UnsetCountryId() {
	o.CountryId.Unset()
}

// GetStateId returns the StateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetStateId() string {
	if o == nil || IsNil(o.StateId.Get()) {
		var ret string
		return ret
	}
	return *o.StateId.Get()
}

// GetStateIdOk returns a tuple with the StateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetStateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StateId.Get(), o.StateId.IsSet()
}

// HasStateId returns a boolean if a field has been set.
func (o *InvoiceDto) HasStateId() bool {
	if o != nil && o.StateId.IsSet() {
		return true
	}

	return false
}

// SetStateId gets a reference to the given NullableString and assigns it to the StateId field.
func (o *InvoiceDto) SetStateId(v string) {
	o.StateId.Set(&v)
}
// SetStateIdNil sets the value for StateId to be an explicit nil
func (o *InvoiceDto) SetStateIdNil() {
	o.StateId.Set(nil)
}

// UnsetStateId ensures that no value is present for StateId, not even an explicit nil
func (o *InvoiceDto) UnsetStateId() {
	o.StateId.Unset()
}

// GetCityId returns the CityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetCityId() string {
	if o == nil || IsNil(o.CityId.Get()) {
		var ret string
		return ret
	}
	return *o.CityId.Get()
}

// GetCityIdOk returns a tuple with the CityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetCityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CityId.Get(), o.CityId.IsSet()
}

// HasCityId returns a boolean if a field has been set.
func (o *InvoiceDto) HasCityId() bool {
	if o != nil && o.CityId.IsSet() {
		return true
	}

	return false
}

// SetCityId gets a reference to the given NullableString and assigns it to the CityId field.
func (o *InvoiceDto) SetCityId(v string) {
	o.CityId.Set(&v)
}
// SetCityIdNil sets the value for CityId to be an explicit nil
func (o *InvoiceDto) SetCityIdNil() {
	o.CityId.Set(nil)
}

// UnsetCityId ensures that no value is present for CityId, not even an explicit nil
func (o *InvoiceDto) UnsetCityId() {
	o.CityId.Unset()
}

// GetCustomerNotes returns the CustomerNotes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetCustomerNotes() string {
	if o == nil || IsNil(o.CustomerNotes.Get()) {
		var ret string
		return ret
	}
	return *o.CustomerNotes.Get()
}

// GetCustomerNotesOk returns a tuple with the CustomerNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetCustomerNotesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomerNotes.Get(), o.CustomerNotes.IsSet()
}

// HasCustomerNotes returns a boolean if a field has been set.
func (o *InvoiceDto) HasCustomerNotes() bool {
	if o != nil && o.CustomerNotes.IsSet() {
		return true
	}

	return false
}

// SetCustomerNotes gets a reference to the given NullableString and assigns it to the CustomerNotes field.
func (o *InvoiceDto) SetCustomerNotes(v string) {
	o.CustomerNotes.Set(&v)
}
// SetCustomerNotesNil sets the value for CustomerNotes to be an explicit nil
func (o *InvoiceDto) SetCustomerNotesNil() {
	o.CustomerNotes.Set(nil)
}

// UnsetCustomerNotes ensures that no value is present for CustomerNotes, not even an explicit nil
func (o *InvoiceDto) UnsetCustomerNotes() {
	o.CustomerNotes.Unset()
}

// GetForexRate returns the ForexRate field value if set, zero value otherwise.
func (o *InvoiceDto) GetForexRate() float64 {
	if o == nil || IsNil(o.ForexRate) {
		var ret float64
		return ret
	}
	return *o.ForexRate
}

// GetForexRateOk returns a tuple with the ForexRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetForexRateOk() (*float64, bool) {
	if o == nil || IsNil(o.ForexRate) {
		return nil, false
	}
	return o.ForexRate, true
}

// HasForexRate returns a boolean if a field has been set.
func (o *InvoiceDto) HasForexRate() bool {
	if o != nil && !IsNil(o.ForexRate) {
		return true
	}

	return false
}

// SetForexRate gets a reference to the given float64 and assigns it to the ForexRate field.
func (o *InvoiceDto) SetForexRate(v float64) {
	o.ForexRate = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotal() float64 {
	if o == nil || IsNil(o.Total) {
		var ret float64
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalOk() (*float64, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float64 and assigns it to the Total field.
func (o *InvoiceDto) SetTotal(v float64) {
	o.Total = &v
}

// GetTotalTaxes returns the TotalTaxes field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalTaxes() float64 {
	if o == nil || IsNil(o.TotalTaxes) {
		var ret float64
		return ret
	}
	return *o.TotalTaxes
}

// GetTotalTaxesOk returns a tuple with the TotalTaxes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalTaxesOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalTaxes) {
		return nil, false
	}
	return o.TotalTaxes, true
}

// HasTotalTaxes returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalTaxes() bool {
	if o != nil && !IsNil(o.TotalTaxes) {
		return true
	}

	return false
}

// SetTotalTaxes gets a reference to the given float64 and assigns it to the TotalTaxes field.
func (o *InvoiceDto) SetTotalTaxes(v float64) {
	o.TotalTaxes = &v
}

// GetTotalTaxBase returns the TotalTaxBase field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalTaxBase() float64 {
	if o == nil || IsNil(o.TotalTaxBase) {
		var ret float64
		return ret
	}
	return *o.TotalTaxBase
}

// GetTotalTaxBaseOk returns a tuple with the TotalTaxBase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalTaxBaseOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalTaxBase) {
		return nil, false
	}
	return o.TotalTaxBase, true
}

// HasTotalTaxBase returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalTaxBase() bool {
	if o != nil && !IsNil(o.TotalTaxBase) {
		return true
	}

	return false
}

// SetTotalTaxBase gets a reference to the given float64 and assigns it to the TotalTaxBase field.
func (o *InvoiceDto) SetTotalTaxBase(v float64) {
	o.TotalTaxBase = &v
}

// GetTotalDiscounts returns the TotalDiscounts field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalDiscounts() float64 {
	if o == nil || IsNil(o.TotalDiscounts) {
		var ret float64
		return ret
	}
	return *o.TotalDiscounts
}

// GetTotalDiscountsOk returns a tuple with the TotalDiscounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalDiscountsOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalDiscounts) {
		return nil, false
	}
	return o.TotalDiscounts, true
}

// HasTotalDiscounts returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalDiscounts() bool {
	if o != nil && !IsNil(o.TotalDiscounts) {
		return true
	}

	return false
}

// SetTotalDiscounts gets a reference to the given float64 and assigns it to the TotalDiscounts field.
func (o *InvoiceDto) SetTotalDiscounts(v float64) {
	o.TotalDiscounts = &v
}

// GetTotalSurcharges returns the TotalSurcharges field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalSurcharges() float64 {
	if o == nil || IsNil(o.TotalSurcharges) {
		var ret float64
		return ret
	}
	return *o.TotalSurcharges
}

// GetTotalSurchargesOk returns a tuple with the TotalSurcharges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalSurchargesOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalSurcharges) {
		return nil, false
	}
	return o.TotalSurcharges, true
}

// HasTotalSurcharges returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalSurcharges() bool {
	if o != nil && !IsNil(o.TotalSurcharges) {
		return true
	}

	return false
}

// SetTotalSurcharges gets a reference to the given float64 and assigns it to the TotalSurcharges field.
func (o *InvoiceDto) SetTotalSurcharges(v float64) {
	o.TotalSurcharges = &v
}

// GetTotalGlobalDiscounts returns the TotalGlobalDiscounts field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalGlobalDiscounts() float64 {
	if o == nil || IsNil(o.TotalGlobalDiscounts) {
		var ret float64
		return ret
	}
	return *o.TotalGlobalDiscounts
}

// GetTotalGlobalDiscountsOk returns a tuple with the TotalGlobalDiscounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalGlobalDiscountsOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalGlobalDiscounts) {
		return nil, false
	}
	return o.TotalGlobalDiscounts, true
}

// HasTotalGlobalDiscounts returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalGlobalDiscounts() bool {
	if o != nil && !IsNil(o.TotalGlobalDiscounts) {
		return true
	}

	return false
}

// SetTotalGlobalDiscounts gets a reference to the given float64 and assigns it to the TotalGlobalDiscounts field.
func (o *InvoiceDto) SetTotalGlobalDiscounts(v float64) {
	o.TotalGlobalDiscounts = &v
}

// GetTotalGlobalSurcharges returns the TotalGlobalSurcharges field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalGlobalSurcharges() float64 {
	if o == nil || IsNil(o.TotalGlobalSurcharges) {
		var ret float64
		return ret
	}
	return *o.TotalGlobalSurcharges
}

// GetTotalGlobalSurchargesOk returns a tuple with the TotalGlobalSurcharges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalGlobalSurchargesOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalGlobalSurcharges) {
		return nil, false
	}
	return o.TotalGlobalSurcharges, true
}

// HasTotalGlobalSurcharges returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalGlobalSurcharges() bool {
	if o != nil && !IsNil(o.TotalGlobalSurcharges) {
		return true
	}

	return false
}

// SetTotalGlobalSurcharges gets a reference to the given float64 and assigns it to the TotalGlobalSurcharges field.
func (o *InvoiceDto) SetTotalGlobalSurcharges(v float64) {
	o.TotalGlobalSurcharges = &v
}

// GetTotalTaxesInUsd returns the TotalTaxesInUsd field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalTaxesInUsd() float64 {
	if o == nil || IsNil(o.TotalTaxesInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalTaxesInUsd
}

// GetTotalTaxesInUsdOk returns a tuple with the TotalTaxesInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalTaxesInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalTaxesInUsd) {
		return nil, false
	}
	return o.TotalTaxesInUsd, true
}

// HasTotalTaxesInUsd returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalTaxesInUsd() bool {
	if o != nil && !IsNil(o.TotalTaxesInUsd) {
		return true
	}

	return false
}

// SetTotalTaxesInUsd gets a reference to the given float64 and assigns it to the TotalTaxesInUsd field.
func (o *InvoiceDto) SetTotalTaxesInUsd(v float64) {
	o.TotalTaxesInUsd = &v
}

// GetTotalAmountInUsd returns the TotalAmountInUsd field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalAmountInUsd() float64 {
	if o == nil || IsNil(o.TotalAmountInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalAmountInUsd
}

// GetTotalAmountInUsdOk returns a tuple with the TotalAmountInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalAmountInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalAmountInUsd) {
		return nil, false
	}
	return o.TotalAmountInUsd, true
}

// HasTotalAmountInUsd returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalAmountInUsd() bool {
	if o != nil && !IsNil(o.TotalAmountInUsd) {
		return true
	}

	return false
}

// SetTotalAmountInUsd gets a reference to the given float64 and assigns it to the TotalAmountInUsd field.
func (o *InvoiceDto) SetTotalAmountInUsd(v float64) {
	o.TotalAmountInUsd = &v
}

// GetTotalProfitInUsd returns the TotalProfitInUsd field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalProfitInUsd() float64 {
	if o == nil || IsNil(o.TotalProfitInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalProfitInUsd
}

// GetTotalProfitInUsdOk returns a tuple with the TotalProfitInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalProfitInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalProfitInUsd) {
		return nil, false
	}
	return o.TotalProfitInUsd, true
}

// HasTotalProfitInUsd returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalProfitInUsd() bool {
	if o != nil && !IsNil(o.TotalProfitInUsd) {
		return true
	}

	return false
}

// SetTotalProfitInUsd gets a reference to the given float64 and assigns it to the TotalProfitInUsd field.
func (o *InvoiceDto) SetTotalProfitInUsd(v float64) {
	o.TotalProfitInUsd = &v
}

// GetTotalTaxBaseInUsd returns the TotalTaxBaseInUsd field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalTaxBaseInUsd() float64 {
	if o == nil || IsNil(o.TotalTaxBaseInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalTaxBaseInUsd
}

// GetTotalTaxBaseInUsdOk returns a tuple with the TotalTaxBaseInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalTaxBaseInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalTaxBaseInUsd) {
		return nil, false
	}
	return o.TotalTaxBaseInUsd, true
}

// HasTotalTaxBaseInUsd returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalTaxBaseInUsd() bool {
	if o != nil && !IsNil(o.TotalTaxBaseInUsd) {
		return true
	}

	return false
}

// SetTotalTaxBaseInUsd gets a reference to the given float64 and assigns it to the TotalTaxBaseInUsd field.
func (o *InvoiceDto) SetTotalTaxBaseInUsd(v float64) {
	o.TotalTaxBaseInUsd = &v
}

// GetTotalDiscountsInUsd returns the TotalDiscountsInUsd field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalDiscountsInUsd() float64 {
	if o == nil || IsNil(o.TotalDiscountsInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalDiscountsInUsd
}

// GetTotalDiscountsInUsdOk returns a tuple with the TotalDiscountsInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalDiscountsInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalDiscountsInUsd) {
		return nil, false
	}
	return o.TotalDiscountsInUsd, true
}

// HasTotalDiscountsInUsd returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalDiscountsInUsd() bool {
	if o != nil && !IsNil(o.TotalDiscountsInUsd) {
		return true
	}

	return false
}

// SetTotalDiscountsInUsd gets a reference to the given float64 and assigns it to the TotalDiscountsInUsd field.
func (o *InvoiceDto) SetTotalDiscountsInUsd(v float64) {
	o.TotalDiscountsInUsd = &v
}

// GetTotalSurchargesInUsd returns the TotalSurchargesInUsd field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalSurchargesInUsd() float64 {
	if o == nil || IsNil(o.TotalSurchargesInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalSurchargesInUsd
}

// GetTotalSurchargesInUsdOk returns a tuple with the TotalSurchargesInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalSurchargesInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalSurchargesInUsd) {
		return nil, false
	}
	return o.TotalSurchargesInUsd, true
}

// HasTotalSurchargesInUsd returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalSurchargesInUsd() bool {
	if o != nil && !IsNil(o.TotalSurchargesInUsd) {
		return true
	}

	return false
}

// SetTotalSurchargesInUsd gets a reference to the given float64 and assigns it to the TotalSurchargesInUsd field.
func (o *InvoiceDto) SetTotalSurchargesInUsd(v float64) {
	o.TotalSurchargesInUsd = &v
}

// GetTotalDetailAmountInUsd returns the TotalDetailAmountInUsd field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalDetailAmountInUsd() float64 {
	if o == nil || IsNil(o.TotalDetailAmountInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalDetailAmountInUsd
}

// GetTotalDetailAmountInUsdOk returns a tuple with the TotalDetailAmountInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalDetailAmountInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalDetailAmountInUsd) {
		return nil, false
	}
	return o.TotalDetailAmountInUsd, true
}

// HasTotalDetailAmountInUsd returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalDetailAmountInUsd() bool {
	if o != nil && !IsNil(o.TotalDetailAmountInUsd) {
		return true
	}

	return false
}

// SetTotalDetailAmountInUsd gets a reference to the given float64 and assigns it to the TotalDetailAmountInUsd field.
func (o *InvoiceDto) SetTotalDetailAmountInUsd(v float64) {
	o.TotalDetailAmountInUsd = &v
}

// GetTotalGlobalDiscountsInUsd returns the TotalGlobalDiscountsInUsd field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalGlobalDiscountsInUsd() float64 {
	if o == nil || IsNil(o.TotalGlobalDiscountsInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalGlobalDiscountsInUsd
}

// GetTotalGlobalDiscountsInUsdOk returns a tuple with the TotalGlobalDiscountsInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalGlobalDiscountsInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalGlobalDiscountsInUsd) {
		return nil, false
	}
	return o.TotalGlobalDiscountsInUsd, true
}

// HasTotalGlobalDiscountsInUsd returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalGlobalDiscountsInUsd() bool {
	if o != nil && !IsNil(o.TotalGlobalDiscountsInUsd) {
		return true
	}

	return false
}

// SetTotalGlobalDiscountsInUsd gets a reference to the given float64 and assigns it to the TotalGlobalDiscountsInUsd field.
func (o *InvoiceDto) SetTotalGlobalDiscountsInUsd(v float64) {
	o.TotalGlobalDiscountsInUsd = &v
}

// GetTotalGlobalSurchargesInUsd returns the TotalGlobalSurchargesInUsd field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalGlobalSurchargesInUsd() float64 {
	if o == nil || IsNil(o.TotalGlobalSurchargesInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalGlobalSurchargesInUsd
}

// GetTotalGlobalSurchargesInUsdOk returns a tuple with the TotalGlobalSurchargesInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalGlobalSurchargesInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalGlobalSurchargesInUsd) {
		return nil, false
	}
	return o.TotalGlobalSurchargesInUsd, true
}

// HasTotalGlobalSurchargesInUsd returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalGlobalSurchargesInUsd() bool {
	if o != nil && !IsNil(o.TotalGlobalSurchargesInUsd) {
		return true
	}

	return false
}

// SetTotalGlobalSurchargesInUsd gets a reference to the given float64 and assigns it to the TotalGlobalSurchargesInUsd field.
func (o *InvoiceDto) SetTotalGlobalSurchargesInUsd(v float64) {
	o.TotalGlobalSurchargesInUsd = &v
}

// GetTotalWithholdingTaxesInUsd returns the TotalWithholdingTaxesInUsd field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalWithholdingTaxesInUsd() float64 {
	if o == nil || IsNil(o.TotalWithholdingTaxesInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalWithholdingTaxesInUsd
}

// GetTotalWithholdingTaxesInUsdOk returns a tuple with the TotalWithholdingTaxesInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalWithholdingTaxesInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalWithholdingTaxesInUsd) {
		return nil, false
	}
	return o.TotalWithholdingTaxesInUsd, true
}

// HasTotalWithholdingTaxesInUsd returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalWithholdingTaxesInUsd() bool {
	if o != nil && !IsNil(o.TotalWithholdingTaxesInUsd) {
		return true
	}

	return false
}

// SetTotalWithholdingTaxesInUsd gets a reference to the given float64 and assigns it to the TotalWithholdingTaxesInUsd field.
func (o *InvoiceDto) SetTotalWithholdingTaxesInUsd(v float64) {
	o.TotalWithholdingTaxesInUsd = &v
}

// GetTotalShippingCostInUsd returns the TotalShippingCostInUsd field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalShippingCostInUsd() float64 {
	if o == nil || IsNil(o.TotalShippingCostInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalShippingCostInUsd
}

// GetTotalShippingCostInUsdOk returns a tuple with the TotalShippingCostInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalShippingCostInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalShippingCostInUsd) {
		return nil, false
	}
	return o.TotalShippingCostInUsd, true
}

// HasTotalShippingCostInUsd returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalShippingCostInUsd() bool {
	if o != nil && !IsNil(o.TotalShippingCostInUsd) {
		return true
	}

	return false
}

// SetTotalShippingCostInUsd gets a reference to the given float64 and assigns it to the TotalShippingCostInUsd field.
func (o *InvoiceDto) SetTotalShippingCostInUsd(v float64) {
	o.TotalShippingCostInUsd = &v
}

// GetTotalShippingTaxesInUsd returns the TotalShippingTaxesInUsd field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalShippingTaxesInUsd() float64 {
	if o == nil || IsNil(o.TotalShippingTaxesInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalShippingTaxesInUsd
}

// GetTotalShippingTaxesInUsdOk returns a tuple with the TotalShippingTaxesInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalShippingTaxesInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalShippingTaxesInUsd) {
		return nil, false
	}
	return o.TotalShippingTaxesInUsd, true
}

// HasTotalShippingTaxesInUsd returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalShippingTaxesInUsd() bool {
	if o != nil && !IsNil(o.TotalShippingTaxesInUsd) {
		return true
	}

	return false
}

// SetTotalShippingTaxesInUsd gets a reference to the given float64 and assigns it to the TotalShippingTaxesInUsd field.
func (o *InvoiceDto) SetTotalShippingTaxesInUsd(v float64) {
	o.TotalShippingTaxesInUsd = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *InvoiceDto) GetCurrency() Currency {
	if o == nil || IsNil(o.Currency) {
		var ret Currency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *InvoiceDto) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given Currency and assigns it to the Currency field.
func (o *InvoiceDto) SetCurrency(v Currency) {
	o.Currency = &v
}

// GetTotalInUsd returns the TotalInUsd field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalInUsd() Money {
	if o == nil || IsNil(o.TotalInUsd) {
		var ret Money
		return ret
	}
	return *o.TotalInUsd
}

// GetTotalInUsdOk returns a tuple with the TotalInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalInUsdOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalInUsd) {
		return nil, false
	}
	return o.TotalInUsd, true
}

// HasTotalInUsd returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalInUsd() bool {
	if o != nil && !IsNil(o.TotalInUsd) {
		return true
	}

	return false
}

// SetTotalInUsd gets a reference to the given Money and assigns it to the TotalInUsd field.
func (o *InvoiceDto) SetTotalInUsd(v Money) {
	o.TotalInUsd = &v
}

// GetTotalTaxAmountInUsd returns the TotalTaxAmountInUsd field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalTaxAmountInUsd() Money {
	if o == nil || IsNil(o.TotalTaxAmountInUsd) {
		var ret Money
		return ret
	}
	return *o.TotalTaxAmountInUsd
}

// GetTotalTaxAmountInUsdOk returns a tuple with the TotalTaxAmountInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalTaxAmountInUsdOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalTaxAmountInUsd) {
		return nil, false
	}
	return o.TotalTaxAmountInUsd, true
}

// HasTotalTaxAmountInUsd returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalTaxAmountInUsd() bool {
	if o != nil && !IsNil(o.TotalTaxAmountInUsd) {
		return true
	}

	return false
}

// SetTotalTaxAmountInUsd gets a reference to the given Money and assigns it to the TotalTaxAmountInUsd field.
func (o *InvoiceDto) SetTotalTaxAmountInUsd(v Money) {
	o.TotalTaxAmountInUsd = &v
}

// GetTotalTaxBaseAmountInUsd returns the TotalTaxBaseAmountInUsd field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalTaxBaseAmountInUsd() Money {
	if o == nil || IsNil(o.TotalTaxBaseAmountInUsd) {
		var ret Money
		return ret
	}
	return *o.TotalTaxBaseAmountInUsd
}

// GetTotalTaxBaseAmountInUsdOk returns a tuple with the TotalTaxBaseAmountInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalTaxBaseAmountInUsdOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalTaxBaseAmountInUsd) {
		return nil, false
	}
	return o.TotalTaxBaseAmountInUsd, true
}

// HasTotalTaxBaseAmountInUsd returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalTaxBaseAmountInUsd() bool {
	if o != nil && !IsNil(o.TotalTaxBaseAmountInUsd) {
		return true
	}

	return false
}

// SetTotalTaxBaseAmountInUsd gets a reference to the given Money and assigns it to the TotalTaxBaseAmountInUsd field.
func (o *InvoiceDto) SetTotalTaxBaseAmountInUsd(v Money) {
	o.TotalTaxBaseAmountInUsd = &v
}

// GetTotalDiscountsAmountInUsd returns the TotalDiscountsAmountInUsd field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalDiscountsAmountInUsd() Money {
	if o == nil || IsNil(o.TotalDiscountsAmountInUsd) {
		var ret Money
		return ret
	}
	return *o.TotalDiscountsAmountInUsd
}

// GetTotalDiscountsAmountInUsdOk returns a tuple with the TotalDiscountsAmountInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalDiscountsAmountInUsdOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalDiscountsAmountInUsd) {
		return nil, false
	}
	return o.TotalDiscountsAmountInUsd, true
}

// HasTotalDiscountsAmountInUsd returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalDiscountsAmountInUsd() bool {
	if o != nil && !IsNil(o.TotalDiscountsAmountInUsd) {
		return true
	}

	return false
}

// SetTotalDiscountsAmountInUsd gets a reference to the given Money and assigns it to the TotalDiscountsAmountInUsd field.
func (o *InvoiceDto) SetTotalDiscountsAmountInUsd(v Money) {
	o.TotalDiscountsAmountInUsd = &v
}

// GetTotalSurchargesAmountInUsd returns the TotalSurchargesAmountInUsd field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalSurchargesAmountInUsd() Money {
	if o == nil || IsNil(o.TotalSurchargesAmountInUsd) {
		var ret Money
		return ret
	}
	return *o.TotalSurchargesAmountInUsd
}

// GetTotalSurchargesAmountInUsdOk returns a tuple with the TotalSurchargesAmountInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalSurchargesAmountInUsdOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalSurchargesAmountInUsd) {
		return nil, false
	}
	return o.TotalSurchargesAmountInUsd, true
}

// HasTotalSurchargesAmountInUsd returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalSurchargesAmountInUsd() bool {
	if o != nil && !IsNil(o.TotalSurchargesAmountInUsd) {
		return true
	}

	return false
}

// SetTotalSurchargesAmountInUsd gets a reference to the given Money and assigns it to the TotalSurchargesAmountInUsd field.
func (o *InvoiceDto) SetTotalSurchargesAmountInUsd(v Money) {
	o.TotalSurchargesAmountInUsd = &v
}

// GetTotalGlobalDiscountsAmountInUsd returns the TotalGlobalDiscountsAmountInUsd field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalGlobalDiscountsAmountInUsd() Money {
	if o == nil || IsNil(o.TotalGlobalDiscountsAmountInUsd) {
		var ret Money
		return ret
	}
	return *o.TotalGlobalDiscountsAmountInUsd
}

// GetTotalGlobalDiscountsAmountInUsdOk returns a tuple with the TotalGlobalDiscountsAmountInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalGlobalDiscountsAmountInUsdOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalGlobalDiscountsAmountInUsd) {
		return nil, false
	}
	return o.TotalGlobalDiscountsAmountInUsd, true
}

// HasTotalGlobalDiscountsAmountInUsd returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalGlobalDiscountsAmountInUsd() bool {
	if o != nil && !IsNil(o.TotalGlobalDiscountsAmountInUsd) {
		return true
	}

	return false
}

// SetTotalGlobalDiscountsAmountInUsd gets a reference to the given Money and assigns it to the TotalGlobalDiscountsAmountInUsd field.
func (o *InvoiceDto) SetTotalGlobalDiscountsAmountInUsd(v Money) {
	o.TotalGlobalDiscountsAmountInUsd = &v
}

// GetTotalGlobalSurchargesAmountInUsd returns the TotalGlobalSurchargesAmountInUsd field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalGlobalSurchargesAmountInUsd() Money {
	if o == nil || IsNil(o.TotalGlobalSurchargesAmountInUsd) {
		var ret Money
		return ret
	}
	return *o.TotalGlobalSurchargesAmountInUsd
}

// GetTotalGlobalSurchargesAmountInUsdOk returns a tuple with the TotalGlobalSurchargesAmountInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalGlobalSurchargesAmountInUsdOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalGlobalSurchargesAmountInUsd) {
		return nil, false
	}
	return o.TotalGlobalSurchargesAmountInUsd, true
}

// HasTotalGlobalSurchargesAmountInUsd returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalGlobalSurchargesAmountInUsd() bool {
	if o != nil && !IsNil(o.TotalGlobalSurchargesAmountInUsd) {
		return true
	}

	return false
}

// SetTotalGlobalSurchargesAmountInUsd gets a reference to the given Money and assigns it to the TotalGlobalSurchargesAmountInUsd field.
func (o *InvoiceDto) SetTotalGlobalSurchargesAmountInUsd(v Money) {
	o.TotalGlobalSurchargesAmountInUsd = &v
}

// GetTotalAmount returns the TotalAmount field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalAmount() Money {
	if o == nil || IsNil(o.TotalAmount) {
		var ret Money
		return ret
	}
	return *o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalAmountOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalAmount) {
		return nil, false
	}
	return o.TotalAmount, true
}

// HasTotalAmount returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalAmount() bool {
	if o != nil && !IsNil(o.TotalAmount) {
		return true
	}

	return false
}

// SetTotalAmount gets a reference to the given Money and assigns it to the TotalAmount field.
func (o *InvoiceDto) SetTotalAmount(v Money) {
	o.TotalAmount = &v
}

// GetTotalTaxAmount returns the TotalTaxAmount field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalTaxAmount() Money {
	if o == nil || IsNil(o.TotalTaxAmount) {
		var ret Money
		return ret
	}
	return *o.TotalTaxAmount
}

// GetTotalTaxAmountOk returns a tuple with the TotalTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalTaxAmountOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalTaxAmount) {
		return nil, false
	}
	return o.TotalTaxAmount, true
}

// HasTotalTaxAmount returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalTaxAmount() bool {
	if o != nil && !IsNil(o.TotalTaxAmount) {
		return true
	}

	return false
}

// SetTotalTaxAmount gets a reference to the given Money and assigns it to the TotalTaxAmount field.
func (o *InvoiceDto) SetTotalTaxAmount(v Money) {
	o.TotalTaxAmount = &v
}

// GetTotalTaxBaseAmount returns the TotalTaxBaseAmount field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalTaxBaseAmount() Money {
	if o == nil || IsNil(o.TotalTaxBaseAmount) {
		var ret Money
		return ret
	}
	return *o.TotalTaxBaseAmount
}

// GetTotalTaxBaseAmountOk returns a tuple with the TotalTaxBaseAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalTaxBaseAmountOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalTaxBaseAmount) {
		return nil, false
	}
	return o.TotalTaxBaseAmount, true
}

// HasTotalTaxBaseAmount returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalTaxBaseAmount() bool {
	if o != nil && !IsNil(o.TotalTaxBaseAmount) {
		return true
	}

	return false
}

// SetTotalTaxBaseAmount gets a reference to the given Money and assigns it to the TotalTaxBaseAmount field.
func (o *InvoiceDto) SetTotalTaxBaseAmount(v Money) {
	o.TotalTaxBaseAmount = &v
}

// GetTotalDiscountsAmount returns the TotalDiscountsAmount field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalDiscountsAmount() Money {
	if o == nil || IsNil(o.TotalDiscountsAmount) {
		var ret Money
		return ret
	}
	return *o.TotalDiscountsAmount
}

// GetTotalDiscountsAmountOk returns a tuple with the TotalDiscountsAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalDiscountsAmountOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalDiscountsAmount) {
		return nil, false
	}
	return o.TotalDiscountsAmount, true
}

// HasTotalDiscountsAmount returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalDiscountsAmount() bool {
	if o != nil && !IsNil(o.TotalDiscountsAmount) {
		return true
	}

	return false
}

// SetTotalDiscountsAmount gets a reference to the given Money and assigns it to the TotalDiscountsAmount field.
func (o *InvoiceDto) SetTotalDiscountsAmount(v Money) {
	o.TotalDiscountsAmount = &v
}

// GetTotalSurchargesAmount returns the TotalSurchargesAmount field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalSurchargesAmount() Money {
	if o == nil || IsNil(o.TotalSurchargesAmount) {
		var ret Money
		return ret
	}
	return *o.TotalSurchargesAmount
}

// GetTotalSurchargesAmountOk returns a tuple with the TotalSurchargesAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalSurchargesAmountOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalSurchargesAmount) {
		return nil, false
	}
	return o.TotalSurchargesAmount, true
}

// HasTotalSurchargesAmount returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalSurchargesAmount() bool {
	if o != nil && !IsNil(o.TotalSurchargesAmount) {
		return true
	}

	return false
}

// SetTotalSurchargesAmount gets a reference to the given Money and assigns it to the TotalSurchargesAmount field.
func (o *InvoiceDto) SetTotalSurchargesAmount(v Money) {
	o.TotalSurchargesAmount = &v
}

// GetTotalGlobalDiscountsAmount returns the TotalGlobalDiscountsAmount field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalGlobalDiscountsAmount() Money {
	if o == nil || IsNil(o.TotalGlobalDiscountsAmount) {
		var ret Money
		return ret
	}
	return *o.TotalGlobalDiscountsAmount
}

// GetTotalGlobalDiscountsAmountOk returns a tuple with the TotalGlobalDiscountsAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalGlobalDiscountsAmountOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalGlobalDiscountsAmount) {
		return nil, false
	}
	return o.TotalGlobalDiscountsAmount, true
}

// HasTotalGlobalDiscountsAmount returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalGlobalDiscountsAmount() bool {
	if o != nil && !IsNil(o.TotalGlobalDiscountsAmount) {
		return true
	}

	return false
}

// SetTotalGlobalDiscountsAmount gets a reference to the given Money and assigns it to the TotalGlobalDiscountsAmount field.
func (o *InvoiceDto) SetTotalGlobalDiscountsAmount(v Money) {
	o.TotalGlobalDiscountsAmount = &v
}

// GetTotalGlobalSurchargesAmount returns the TotalGlobalSurchargesAmount field value if set, zero value otherwise.
func (o *InvoiceDto) GetTotalGlobalSurchargesAmount() Money {
	if o == nil || IsNil(o.TotalGlobalSurchargesAmount) {
		var ret Money
		return ret
	}
	return *o.TotalGlobalSurchargesAmount
}

// GetTotalGlobalSurchargesAmountOk returns a tuple with the TotalGlobalSurchargesAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetTotalGlobalSurchargesAmountOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalGlobalSurchargesAmount) {
		return nil, false
	}
	return o.TotalGlobalSurchargesAmount, true
}

// HasTotalGlobalSurchargesAmount returns a boolean if a field has been set.
func (o *InvoiceDto) HasTotalGlobalSurchargesAmount() bool {
	if o != nil && !IsNil(o.TotalGlobalSurchargesAmount) {
		return true
	}

	return false
}

// SetTotalGlobalSurchargesAmount gets a reference to the given Money and assigns it to the TotalGlobalSurchargesAmount field.
func (o *InvoiceDto) SetTotalGlobalSurchargesAmount(v Money) {
	o.TotalGlobalSurchargesAmount = &v
}

// GetPaid returns the Paid field value if set, zero value otherwise.
func (o *InvoiceDto) GetPaid() bool {
	if o == nil || IsNil(o.Paid) {
		var ret bool
		return ret
	}
	return *o.Paid
}

// GetPaidOk returns a tuple with the Paid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetPaidOk() (*bool, bool) {
	if o == nil || IsNil(o.Paid) {
		return nil, false
	}
	return o.Paid, true
}

// HasPaid returns a boolean if a field has been set.
func (o *InvoiceDto) HasPaid() bool {
	if o != nil && !IsNil(o.Paid) {
		return true
	}

	return false
}

// SetPaid gets a reference to the given bool and assigns it to the Paid field.
func (o *InvoiceDto) SetPaid(v bool) {
	o.Paid = &v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *InvoiceDto) GetNumber() int64 {
	if o == nil || IsNil(o.Number) {
		var ret int64
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetNumberOk() (*int64, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *InvoiceDto) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given int64 and assigns it to the Number field.
func (o *InvoiceDto) SetNumber(v int64) {
	o.Number = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetNotes() string {
	if o == nil || IsNil(o.Notes.Get()) {
		var ret string
		return ret
	}
	return *o.Notes.Get()
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetNotesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Notes.Get(), o.Notes.IsSet()
}

// HasNotes returns a boolean if a field has been set.
func (o *InvoiceDto) HasNotes() bool {
	if o != nil && o.Notes.IsSet() {
		return true
	}

	return false
}

// SetNotes gets a reference to the given NullableString and assigns it to the Notes field.
func (o *InvoiceDto) SetNotes(v string) {
	o.Notes.Set(&v)
}
// SetNotesNil sets the value for Notes to be an explicit nil
func (o *InvoiceDto) SetNotesNil() {
	o.Notes.Set(nil)
}

// UnsetNotes ensures that no value is present for Notes, not even an explicit nil
func (o *InvoiceDto) UnsetNotes() {
	o.Notes.Unset()
}

// GetOrderId returns the OrderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetOrderId() string {
	if o == nil || IsNil(o.OrderId.Get()) {
		var ret string
		return ret
	}
	return *o.OrderId.Get()
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetOrderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderId.Get(), o.OrderId.IsSet()
}

// HasOrderId returns a boolean if a field has been set.
func (o *InvoiceDto) HasOrderId() bool {
	if o != nil && o.OrderId.IsSet() {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given NullableString and assigns it to the OrderId field.
func (o *InvoiceDto) SetOrderId(v string) {
	o.OrderId.Set(&v)
}
// SetOrderIdNil sets the value for OrderId to be an explicit nil
func (o *InvoiceDto) SetOrderIdNil() {
	o.OrderId.Set(nil)
}

// UnsetOrderId ensures that no value is present for OrderId, not even an explicit nil
func (o *InvoiceDto) UnsetOrderId() {
	o.OrderId.Unset()
}

// GetEnumeration returns the Enumeration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetEnumeration() string {
	if o == nil || IsNil(o.Enumeration.Get()) {
		var ret string
		return ret
	}
	return *o.Enumeration.Get()
}

// GetEnumerationOk returns a tuple with the Enumeration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetEnumerationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Enumeration.Get(), o.Enumeration.IsSet()
}

// HasEnumeration returns a boolean if a field has been set.
func (o *InvoiceDto) HasEnumeration() bool {
	if o != nil && o.Enumeration.IsSet() {
		return true
	}

	return false
}

// SetEnumeration gets a reference to the given NullableString and assigns it to the Enumeration field.
func (o *InvoiceDto) SetEnumeration(v string) {
	o.Enumeration.Set(&v)
}
// SetEnumerationNil sets the value for Enumeration to be an explicit nil
func (o *InvoiceDto) SetEnumerationNil() {
	o.Enumeration.Set(nil)
}

// UnsetEnumeration ensures that no value is present for Enumeration, not even an explicit nil
func (o *InvoiceDto) UnsetEnumeration() {
	o.Enumeration.Unset()
}

// GetPaymentModeId returns the PaymentModeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetPaymentModeId() string {
	if o == nil || IsNil(o.PaymentModeId.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentModeId.Get()
}

// GetPaymentModeIdOk returns a tuple with the PaymentModeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetPaymentModeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentModeId.Get(), o.PaymentModeId.IsSet()
}

// HasPaymentModeId returns a boolean if a field has been set.
func (o *InvoiceDto) HasPaymentModeId() bool {
	if o != nil && o.PaymentModeId.IsSet() {
		return true
	}

	return false
}

// SetPaymentModeId gets a reference to the given NullableString and assigns it to the PaymentModeId field.
func (o *InvoiceDto) SetPaymentModeId(v string) {
	o.PaymentModeId.Set(&v)
}
// SetPaymentModeIdNil sets the value for PaymentModeId to be an explicit nil
func (o *InvoiceDto) SetPaymentModeIdNil() {
	o.PaymentModeId.Set(nil)
}

// UnsetPaymentModeId ensures that no value is present for PaymentModeId, not even an explicit nil
func (o *InvoiceDto) UnsetPaymentModeId() {
	o.PaymentModeId.Unset()
}

// GetEnumerationRangeId returns the EnumerationRangeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetEnumerationRangeId() string {
	if o == nil || IsNil(o.EnumerationRangeId.Get()) {
		var ret string
		return ret
	}
	return *o.EnumerationRangeId.Get()
}

// GetEnumerationRangeIdOk returns a tuple with the EnumerationRangeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetEnumerationRangeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnumerationRangeId.Get(), o.EnumerationRangeId.IsSet()
}

// HasEnumerationRangeId returns a boolean if a field has been set.
func (o *InvoiceDto) HasEnumerationRangeId() bool {
	if o != nil && o.EnumerationRangeId.IsSet() {
		return true
	}

	return false
}

// SetEnumerationRangeId gets a reference to the given NullableString and assigns it to the EnumerationRangeId field.
func (o *InvoiceDto) SetEnumerationRangeId(v string) {
	o.EnumerationRangeId.Set(&v)
}
// SetEnumerationRangeIdNil sets the value for EnumerationRangeId to be an explicit nil
func (o *InvoiceDto) SetEnumerationRangeIdNil() {
	o.EnumerationRangeId.Set(nil)
}

// UnsetEnumerationRangeId ensures that no value is present for EnumerationRangeId, not even an explicit nil
func (o *InvoiceDto) UnsetEnumerationRangeId() {
	o.EnumerationRangeId.Unset()
}

// GetEmisorBillingProfileId returns the EmisorBillingProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetEmisorBillingProfileId() string {
	if o == nil || IsNil(o.EmisorBillingProfileId.Get()) {
		var ret string
		return ret
	}
	return *o.EmisorBillingProfileId.Get()
}

// GetEmisorBillingProfileIdOk returns a tuple with the EmisorBillingProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetEmisorBillingProfileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EmisorBillingProfileId.Get(), o.EmisorBillingProfileId.IsSet()
}

// HasEmisorBillingProfileId returns a boolean if a field has been set.
func (o *InvoiceDto) HasEmisorBillingProfileId() bool {
	if o != nil && o.EmisorBillingProfileId.IsSet() {
		return true
	}

	return false
}

// SetEmisorBillingProfileId gets a reference to the given NullableString and assigns it to the EmisorBillingProfileId field.
func (o *InvoiceDto) SetEmisorBillingProfileId(v string) {
	o.EmisorBillingProfileId.Set(&v)
}
// SetEmisorBillingProfileIdNil sets the value for EmisorBillingProfileId to be an explicit nil
func (o *InvoiceDto) SetEmisorBillingProfileIdNil() {
	o.EmisorBillingProfileId.Set(nil)
}

// UnsetEmisorBillingProfileId ensures that no value is present for EmisorBillingProfileId, not even an explicit nil
func (o *InvoiceDto) UnsetEmisorBillingProfileId() {
	o.EmisorBillingProfileId.Unset()
}

// GetReceiverBillingProfileId returns the ReceiverBillingProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetReceiverBillingProfileId() string {
	if o == nil || IsNil(o.ReceiverBillingProfileId.Get()) {
		var ret string
		return ret
	}
	return *o.ReceiverBillingProfileId.Get()
}

// GetReceiverBillingProfileIdOk returns a tuple with the ReceiverBillingProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetReceiverBillingProfileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiverBillingProfileId.Get(), o.ReceiverBillingProfileId.IsSet()
}

// HasReceiverBillingProfileId returns a boolean if a field has been set.
func (o *InvoiceDto) HasReceiverBillingProfileId() bool {
	if o != nil && o.ReceiverBillingProfileId.IsSet() {
		return true
	}

	return false
}

// SetReceiverBillingProfileId gets a reference to the given NullableString and assigns it to the ReceiverBillingProfileId field.
func (o *InvoiceDto) SetReceiverBillingProfileId(v string) {
	o.ReceiverBillingProfileId.Set(&v)
}
// SetReceiverBillingProfileIdNil sets the value for ReceiverBillingProfileId to be an explicit nil
func (o *InvoiceDto) SetReceiverBillingProfileIdNil() {
	o.ReceiverBillingProfileId.Set(nil)
}

// UnsetReceiverBillingProfileId ensures that no value is present for ReceiverBillingProfileId, not even an explicit nil
func (o *InvoiceDto) UnsetReceiverBillingProfileId() {
	o.ReceiverBillingProfileId.Unset()
}

// GetEmisorWalletAccountId returns the EmisorWalletAccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetEmisorWalletAccountId() string {
	if o == nil || IsNil(o.EmisorWalletAccountId.Get()) {
		var ret string
		return ret
	}
	return *o.EmisorWalletAccountId.Get()
}

// GetEmisorWalletAccountIdOk returns a tuple with the EmisorWalletAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetEmisorWalletAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EmisorWalletAccountId.Get(), o.EmisorWalletAccountId.IsSet()
}

// HasEmisorWalletAccountId returns a boolean if a field has been set.
func (o *InvoiceDto) HasEmisorWalletAccountId() bool {
	if o != nil && o.EmisorWalletAccountId.IsSet() {
		return true
	}

	return false
}

// SetEmisorWalletAccountId gets a reference to the given NullableString and assigns it to the EmisorWalletAccountId field.
func (o *InvoiceDto) SetEmisorWalletAccountId(v string) {
	o.EmisorWalletAccountId.Set(&v)
}
// SetEmisorWalletAccountIdNil sets the value for EmisorWalletAccountId to be an explicit nil
func (o *InvoiceDto) SetEmisorWalletAccountIdNil() {
	o.EmisorWalletAccountId.Set(nil)
}

// UnsetEmisorWalletAccountId ensures that no value is present for EmisorWalletAccountId, not even an explicit nil
func (o *InvoiceDto) UnsetEmisorWalletAccountId() {
	o.EmisorWalletAccountId.Unset()
}

// GetReceiverWalletAccountId returns the ReceiverWalletAccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetReceiverWalletAccountId() string {
	if o == nil || IsNil(o.ReceiverWalletAccountId.Get()) {
		var ret string
		return ret
	}
	return *o.ReceiverWalletAccountId.Get()
}

// GetReceiverWalletAccountIdOk returns a tuple with the ReceiverWalletAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetReceiverWalletAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiverWalletAccountId.Get(), o.ReceiverWalletAccountId.IsSet()
}

// HasReceiverWalletAccountId returns a boolean if a field has been set.
func (o *InvoiceDto) HasReceiverWalletAccountId() bool {
	if o != nil && o.ReceiverWalletAccountId.IsSet() {
		return true
	}

	return false
}

// SetReceiverWalletAccountId gets a reference to the given NullableString and assigns it to the ReceiverWalletAccountId field.
func (o *InvoiceDto) SetReceiverWalletAccountId(v string) {
	o.ReceiverWalletAccountId.Set(&v)
}
// SetReceiverWalletAccountIdNil sets the value for ReceiverWalletAccountId to be an explicit nil
func (o *InvoiceDto) SetReceiverWalletAccountIdNil() {
	o.ReceiverWalletAccountId.Set(nil)
}

// UnsetReceiverWalletAccountId ensures that no value is present for ReceiverWalletAccountId, not even an explicit nil
func (o *InvoiceDto) UnsetReceiverWalletAccountId() {
	o.ReceiverWalletAccountId.Unset()
}

// GetPaymentDue returns the PaymentDue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDto) GetPaymentDue() time.Time {
	if o == nil || IsNil(o.PaymentDue.Get()) {
		var ret time.Time
		return ret
	}
	return *o.PaymentDue.Get()
}

// GetPaymentDueOk returns a tuple with the PaymentDue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDto) GetPaymentDueOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentDue.Get(), o.PaymentDue.IsSet()
}

// HasPaymentDue returns a boolean if a field has been set.
func (o *InvoiceDto) HasPaymentDue() bool {
	if o != nil && o.PaymentDue.IsSet() {
		return true
	}

	return false
}

// SetPaymentDue gets a reference to the given NullableTime and assigns it to the PaymentDue field.
func (o *InvoiceDto) SetPaymentDue(v time.Time) {
	o.PaymentDue.Set(&v)
}
// SetPaymentDueNil sets the value for PaymentDue to be an explicit nil
func (o *InvoiceDto) SetPaymentDueNil() {
	o.PaymentDue.Set(nil)
}

// UnsetPaymentDue ensures that no value is present for PaymentDue, not even an explicit nil
func (o *InvoiceDto) UnsetPaymentDue() {
	o.PaymentDue.Unset()
}

// GetInvoiceType returns the InvoiceType field value if set, zero value otherwise.
func (o *InvoiceDto) GetInvoiceType() int32 {
	if o == nil || IsNil(o.InvoiceType) {
		var ret int32
		return ret
	}
	return *o.InvoiceType
}

// GetInvoiceTypeOk returns a tuple with the InvoiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetInvoiceTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.InvoiceType) {
		return nil, false
	}
	return o.InvoiceType, true
}

// HasInvoiceType returns a boolean if a field has been set.
func (o *InvoiceDto) HasInvoiceType() bool {
	if o != nil && !IsNil(o.InvoiceType) {
		return true
	}

	return false
}

// SetInvoiceType gets a reference to the given int32 and assigns it to the InvoiceType field.
func (o *InvoiceDto) SetInvoiceType(v int32) {
	o.InvoiceType = &v
}

// GetDocumentType returns the DocumentType field value if set, zero value otherwise.
func (o *InvoiceDto) GetDocumentType() int32 {
	if o == nil || IsNil(o.DocumentType) {
		var ret int32
		return ret
	}
	return *o.DocumentType
}

// GetDocumentTypeOk returns a tuple with the DocumentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetDocumentTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.DocumentType) {
		return nil, false
	}
	return o.DocumentType, true
}

// HasDocumentType returns a boolean if a field has been set.
func (o *InvoiceDto) HasDocumentType() bool {
	if o != nil && !IsNil(o.DocumentType) {
		return true
	}

	return false
}

// SetDocumentType gets a reference to the given int32 and assigns it to the DocumentType field.
func (o *InvoiceDto) SetDocumentType(v int32) {
	o.DocumentType = &v
}

// GetInvoiceStatus returns the InvoiceStatus field value if set, zero value otherwise.
func (o *InvoiceDto) GetInvoiceStatus() int32 {
	if o == nil || IsNil(o.InvoiceStatus) {
		var ret int32
		return ret
	}
	return *o.InvoiceStatus
}

// GetInvoiceStatusOk returns a tuple with the InvoiceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDto) GetInvoiceStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.InvoiceStatus) {
		return nil, false
	}
	return o.InvoiceStatus, true
}

// HasInvoiceStatus returns a boolean if a field has been set.
func (o *InvoiceDto) HasInvoiceStatus() bool {
	if o != nil && !IsNil(o.InvoiceStatus) {
		return true
	}

	return false
}

// SetInvoiceStatus gets a reference to the given int32 and assigns it to the InvoiceStatus field.
func (o *InvoiceDto) SetInvoiceStatus(v int32) {
	o.InvoiceStatus = &v
}

func (o InvoiceDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Timestamp.IsSet() {
		toSerialize["timestamp"] = o.Timestamp.Get()
	}
	if !IsNil(o.Closed) {
		toSerialize["closed"] = o.Closed
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.UserId.IsSet() {
		toSerialize["userId"] = o.UserId.Get()
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.CurrencyId.IsSet() {
		toSerialize["currencyId"] = o.CurrencyId.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.PriceListId.IsSet() {
		toSerialize["priceListId"] = o.PriceListId.Get()
	}
	if o.EnrollmentId.IsSet() {
		toSerialize["enrollmentId"] = o.EnrollmentId.Get()
	}
	if o.IndividualId.IsSet() {
		toSerialize["individualId"] = o.IndividualId.Get()
	}
	if o.OrganizationId.IsSet() {
		toSerialize["organizationId"] = o.OrganizationId.Get()
	}
	if o.ReceiverTenantId.IsSet() {
		toSerialize["receiverTenantId"] = o.ReceiverTenantId.Get()
	}
	if o.FirstName.IsSet() {
		toSerialize["firstName"] = o.FirstName.Get()
	}
	if o.LastName.IsSet() {
		toSerialize["lastName"] = o.LastName.Get()
	}
	if o.CompanyName.IsSet() {
		toSerialize["companyName"] = o.CompanyName.Get()
	}
	if o.BillingEmail.IsSet() {
		toSerialize["billingEmail"] = o.BillingEmail.Get()
	}
	if o.AddressLine1.IsSet() {
		toSerialize["addressLine1"] = o.AddressLine1.Get()
	}
	if o.AddressLine2.IsSet() {
		toSerialize["addressLine2"] = o.AddressLine2.Get()
	}
	if o.PostalCode.IsSet() {
		toSerialize["postalCode"] = o.PostalCode.Get()
	}
	if o.CountryId.IsSet() {
		toSerialize["countryId"] = o.CountryId.Get()
	}
	if o.StateId.IsSet() {
		toSerialize["stateId"] = o.StateId.Get()
	}
	if o.CityId.IsSet() {
		toSerialize["cityId"] = o.CityId.Get()
	}
	if o.CustomerNotes.IsSet() {
		toSerialize["customerNotes"] = o.CustomerNotes.Get()
	}
	if !IsNil(o.ForexRate) {
		toSerialize["forexRate"] = o.ForexRate
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.TotalTaxes) {
		toSerialize["totalTaxes"] = o.TotalTaxes
	}
	if !IsNil(o.TotalTaxBase) {
		toSerialize["totalTaxBase"] = o.TotalTaxBase
	}
	if !IsNil(o.TotalDiscounts) {
		toSerialize["totalDiscounts"] = o.TotalDiscounts
	}
	if !IsNil(o.TotalSurcharges) {
		toSerialize["totalSurcharges"] = o.TotalSurcharges
	}
	if !IsNil(o.TotalGlobalDiscounts) {
		toSerialize["totalGlobalDiscounts"] = o.TotalGlobalDiscounts
	}
	if !IsNil(o.TotalGlobalSurcharges) {
		toSerialize["totalGlobalSurcharges"] = o.TotalGlobalSurcharges
	}
	if !IsNil(o.TotalTaxesInUsd) {
		toSerialize["totalTaxesInUsd"] = o.TotalTaxesInUsd
	}
	if !IsNil(o.TotalAmountInUsd) {
		toSerialize["totalAmountInUsd"] = o.TotalAmountInUsd
	}
	if !IsNil(o.TotalProfitInUsd) {
		toSerialize["totalProfitInUsd"] = o.TotalProfitInUsd
	}
	if !IsNil(o.TotalTaxBaseInUsd) {
		toSerialize["totalTaxBaseInUsd"] = o.TotalTaxBaseInUsd
	}
	if !IsNil(o.TotalDiscountsInUsd) {
		toSerialize["totalDiscountsInUsd"] = o.TotalDiscountsInUsd
	}
	if !IsNil(o.TotalSurchargesInUsd) {
		toSerialize["totalSurchargesInUsd"] = o.TotalSurchargesInUsd
	}
	if !IsNil(o.TotalDetailAmountInUsd) {
		toSerialize["totalDetailAmountInUsd"] = o.TotalDetailAmountInUsd
	}
	if !IsNil(o.TotalGlobalDiscountsInUsd) {
		toSerialize["totalGlobalDiscountsInUsd"] = o.TotalGlobalDiscountsInUsd
	}
	if !IsNil(o.TotalGlobalSurchargesInUsd) {
		toSerialize["totalGlobalSurchargesInUsd"] = o.TotalGlobalSurchargesInUsd
	}
	if !IsNil(o.TotalWithholdingTaxesInUsd) {
		toSerialize["totalWithholdingTaxesInUsd"] = o.TotalWithholdingTaxesInUsd
	}
	if !IsNil(o.TotalShippingCostInUsd) {
		toSerialize["totalShippingCostInUsd"] = o.TotalShippingCostInUsd
	}
	if !IsNil(o.TotalShippingTaxesInUsd) {
		toSerialize["totalShippingTaxesInUsd"] = o.TotalShippingTaxesInUsd
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.TotalInUsd) {
		toSerialize["totalInUsd"] = o.TotalInUsd
	}
	if !IsNil(o.TotalTaxAmountInUsd) {
		toSerialize["totalTaxAmountInUsd"] = o.TotalTaxAmountInUsd
	}
	if !IsNil(o.TotalTaxBaseAmountInUsd) {
		toSerialize["totalTaxBaseAmountInUsd"] = o.TotalTaxBaseAmountInUsd
	}
	if !IsNil(o.TotalDiscountsAmountInUsd) {
		toSerialize["totalDiscountsAmountInUsd"] = o.TotalDiscountsAmountInUsd
	}
	if !IsNil(o.TotalSurchargesAmountInUsd) {
		toSerialize["totalSurchargesAmountInUsd"] = o.TotalSurchargesAmountInUsd
	}
	if !IsNil(o.TotalGlobalDiscountsAmountInUsd) {
		toSerialize["totalGlobalDiscountsAmountInUsd"] = o.TotalGlobalDiscountsAmountInUsd
	}
	if !IsNil(o.TotalGlobalSurchargesAmountInUsd) {
		toSerialize["totalGlobalSurchargesAmountInUsd"] = o.TotalGlobalSurchargesAmountInUsd
	}
	if !IsNil(o.TotalAmount) {
		toSerialize["totalAmount"] = o.TotalAmount
	}
	if !IsNil(o.TotalTaxAmount) {
		toSerialize["totalTaxAmount"] = o.TotalTaxAmount
	}
	if !IsNil(o.TotalTaxBaseAmount) {
		toSerialize["totalTaxBaseAmount"] = o.TotalTaxBaseAmount
	}
	if !IsNil(o.TotalDiscountsAmount) {
		toSerialize["totalDiscountsAmount"] = o.TotalDiscountsAmount
	}
	if !IsNil(o.TotalSurchargesAmount) {
		toSerialize["totalSurchargesAmount"] = o.TotalSurchargesAmount
	}
	if !IsNil(o.TotalGlobalDiscountsAmount) {
		toSerialize["totalGlobalDiscountsAmount"] = o.TotalGlobalDiscountsAmount
	}
	if !IsNil(o.TotalGlobalSurchargesAmount) {
		toSerialize["totalGlobalSurchargesAmount"] = o.TotalGlobalSurchargesAmount
	}
	if !IsNil(o.Paid) {
		toSerialize["paid"] = o.Paid
	}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	if o.Notes.IsSet() {
		toSerialize["notes"] = o.Notes.Get()
	}
	if o.OrderId.IsSet() {
		toSerialize["orderId"] = o.OrderId.Get()
	}
	if o.Enumeration.IsSet() {
		toSerialize["enumeration"] = o.Enumeration.Get()
	}
	if o.PaymentModeId.IsSet() {
		toSerialize["paymentModeId"] = o.PaymentModeId.Get()
	}
	if o.EnumerationRangeId.IsSet() {
		toSerialize["enumerationRangeId"] = o.EnumerationRangeId.Get()
	}
	if o.EmisorBillingProfileId.IsSet() {
		toSerialize["emisorBillingProfileId"] = o.EmisorBillingProfileId.Get()
	}
	if o.ReceiverBillingProfileId.IsSet() {
		toSerialize["receiverBillingProfileId"] = o.ReceiverBillingProfileId.Get()
	}
	if o.EmisorWalletAccountId.IsSet() {
		toSerialize["emisorWalletAccountId"] = o.EmisorWalletAccountId.Get()
	}
	if o.ReceiverWalletAccountId.IsSet() {
		toSerialize["receiverWalletAccountId"] = o.ReceiverWalletAccountId.Get()
	}
	if o.PaymentDue.IsSet() {
		toSerialize["paymentDue"] = o.PaymentDue.Get()
	}
	if !IsNil(o.InvoiceType) {
		toSerialize["invoiceType"] = o.InvoiceType
	}
	if !IsNil(o.DocumentType) {
		toSerialize["documentType"] = o.DocumentType
	}
	if !IsNil(o.InvoiceStatus) {
		toSerialize["invoiceStatus"] = o.InvoiceStatus
	}
	return toSerialize, nil
}

type NullableInvoiceDto struct {
	value *InvoiceDto
	isSet bool
}

func (v NullableInvoiceDto) Get() *InvoiceDto {
	return v.value
}

func (v *NullableInvoiceDto) Set(val *InvoiceDto) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceDto) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceDto(val *InvoiceDto) *NullableInvoiceDto {
	return &NullableInvoiceDto{value: val, isSet: true}
}

func (v NullableInvoiceDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


