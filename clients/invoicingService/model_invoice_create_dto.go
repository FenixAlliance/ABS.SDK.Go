/*
InvoicingService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the InvoiceCreateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceCreateDto{}

// InvoiceCreateDto struct for InvoiceCreateDto
type InvoiceCreateDto struct {
	Id *string `json:"id,omitempty"`
	Timestamp *time.Time `json:"timestamp,omitempty"`
	Closed *bool `json:"closed,omitempty"`
	Title NullableString `json:"title,omitempty"`
	UserId NullableString `json:"userId,omitempty"`
	TenantId NullableString `json:"tenantId,omitempty"`
	PriceListId NullableString `json:"priceListId,omitempty"`
	Description NullableString `json:"description,omitempty"`
	EnrollmentId NullableString `json:"enrollmentId,omitempty"`
	IndividualId NullableString `json:"individualId,omitempty"`
	PaymentTermId NullableString `json:"paymentTermId,omitempty"`
	OrganizationId NullableString `json:"organizationId,omitempty"`
	CurrencyId NullableString `json:"currencyId,omitempty"`
	ForexRate *float64 `json:"forexRate,omitempty"`
	FirstName NullableString `json:"firstName,omitempty"`
	LastName NullableString `json:"lastName,omitempty"`
	CompanyName NullableString `json:"companyName,omitempty"`
	BillingEmail NullableString `json:"billingEmail,omitempty"`
	AddressLine1 NullableString `json:"addressLine1,omitempty"`
	AddressLine2 NullableString `json:"addressLine2,omitempty"`
	PostalCode NullableString `json:"postalCode,omitempty"`
	CountryId NullableString `json:"countryId,omitempty"`
	StateId NullableString `json:"stateId,omitempty"`
	CityId NullableString `json:"cityId,omitempty"`
	Paid *bool `json:"paid,omitempty"`
	Number *int32 `json:"number,omitempty"`
	Notes NullableString `json:"notes,omitempty"`
	CustomerNotes NullableString `json:"customerNotes,omitempty"`
	OrderId NullableString `json:"orderId,omitempty"`
	Enumeration NullableString `json:"enumeration,omitempty"`
	PaymentModeId NullableString `json:"paymentModeId,omitempty"`
	ReceiverTenantId NullableString `json:"receiverTenantId,omitempty"`
	EnumerationRangeId NullableString `json:"enumerationRangeId,omitempty"`
	EmisorBillingProfileId NullableString `json:"emisorBillingProfileId,omitempty"`
	ReceiverBillingProfileId NullableString `json:"receiverBillingProfileId,omitempty"`
	EmisorWalletAccountId NullableString `json:"emisorWalletAccountId,omitempty"`
	ReceiverWalletAccountId NullableString `json:"receiverWalletAccountId,omitempty"`
	PaymentDue NullableTime `json:"paymentDue,omitempty"`
	InvoiceType *int32 `json:"invoiceType,omitempty"`
	DocumentType *int32 `json:"documentType,omitempty"`
	InvoiceStatus *int32 `json:"invoiceStatus,omitempty"`
	ValidFrom NullableTime `json:"validFrom,omitempty"`
	ValidTo NullableTime `json:"validTo,omitempty"`
	InvoiceReferences []InvoiceReferenceDto `json:"invoiceReferences,omitempty"`
	InvoiceItemRecords []InvoiceItemRecordDto `json:"invoiceItemRecords,omitempty"`
	InvoiceAdjustments []InvoiceAdjustmentDto `json:"invoiceAdjustments,omitempty"`
}

// NewInvoiceCreateDto instantiates a new InvoiceCreateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceCreateDto() *InvoiceCreateDto {
	this := InvoiceCreateDto{}
	return &this
}

// NewInvoiceCreateDtoWithDefaults instantiates a new InvoiceCreateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceCreateDtoWithDefaults() *InvoiceCreateDto {
	this := InvoiceCreateDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InvoiceCreateDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceCreateDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InvoiceCreateDto) SetId(v string) {
	o.Id = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *InvoiceCreateDto) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceCreateDto) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *InvoiceCreateDto) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetClosed returns the Closed field value if set, zero value otherwise.
func (o *InvoiceCreateDto) GetClosed() bool {
	if o == nil || IsNil(o.Closed) {
		var ret bool
		return ret
	}
	return *o.Closed
}

// GetClosedOk returns a tuple with the Closed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceCreateDto) GetClosedOk() (*bool, bool) {
	if o == nil || IsNil(o.Closed) {
		return nil, false
	}
	return o.Closed, true
}

// HasClosed returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasClosed() bool {
	if o != nil && !IsNil(o.Closed) {
		return true
	}

	return false
}

// SetClosed gets a reference to the given bool and assigns it to the Closed field.
func (o *InvoiceCreateDto) SetClosed(v bool) {
	o.Closed = &v
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *InvoiceCreateDto) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *InvoiceCreateDto) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *InvoiceCreateDto) UnsetTitle() {
	o.Title.Unset()
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetUserId() string {
	if o == nil || IsNil(o.UserId.Get()) {
		var ret string
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableString and assigns it to the UserId field.
func (o *InvoiceCreateDto) SetUserId(v string) {
	o.UserId.Set(&v)
}
// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *InvoiceCreateDto) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *InvoiceCreateDto) UnsetUserId() {
	o.UserId.Unset()
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *InvoiceCreateDto) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *InvoiceCreateDto) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *InvoiceCreateDto) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetPriceListId returns the PriceListId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetPriceListId() string {
	if o == nil || IsNil(o.PriceListId.Get()) {
		var ret string
		return ret
	}
	return *o.PriceListId.Get()
}

// GetPriceListIdOk returns a tuple with the PriceListId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetPriceListIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceListId.Get(), o.PriceListId.IsSet()
}

// HasPriceListId returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasPriceListId() bool {
	if o != nil && o.PriceListId.IsSet() {
		return true
	}

	return false
}

// SetPriceListId gets a reference to the given NullableString and assigns it to the PriceListId field.
func (o *InvoiceCreateDto) SetPriceListId(v string) {
	o.PriceListId.Set(&v)
}
// SetPriceListIdNil sets the value for PriceListId to be an explicit nil
func (o *InvoiceCreateDto) SetPriceListIdNil() {
	o.PriceListId.Set(nil)
}

// UnsetPriceListId ensures that no value is present for PriceListId, not even an explicit nil
func (o *InvoiceCreateDto) UnsetPriceListId() {
	o.PriceListId.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *InvoiceCreateDto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *InvoiceCreateDto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *InvoiceCreateDto) UnsetDescription() {
	o.Description.Unset()
}

// GetEnrollmentId returns the EnrollmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetEnrollmentId() string {
	if o == nil || IsNil(o.EnrollmentId.Get()) {
		var ret string
		return ret
	}
	return *o.EnrollmentId.Get()
}

// GetEnrollmentIdOk returns a tuple with the EnrollmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetEnrollmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnrollmentId.Get(), o.EnrollmentId.IsSet()
}

// HasEnrollmentId returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasEnrollmentId() bool {
	if o != nil && o.EnrollmentId.IsSet() {
		return true
	}

	return false
}

// SetEnrollmentId gets a reference to the given NullableString and assigns it to the EnrollmentId field.
func (o *InvoiceCreateDto) SetEnrollmentId(v string) {
	o.EnrollmentId.Set(&v)
}
// SetEnrollmentIdNil sets the value for EnrollmentId to be an explicit nil
func (o *InvoiceCreateDto) SetEnrollmentIdNil() {
	o.EnrollmentId.Set(nil)
}

// UnsetEnrollmentId ensures that no value is present for EnrollmentId, not even an explicit nil
func (o *InvoiceCreateDto) UnsetEnrollmentId() {
	o.EnrollmentId.Unset()
}

// GetIndividualId returns the IndividualId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetIndividualId() string {
	if o == nil || IsNil(o.IndividualId.Get()) {
		var ret string
		return ret
	}
	return *o.IndividualId.Get()
}

// GetIndividualIdOk returns a tuple with the IndividualId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetIndividualIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IndividualId.Get(), o.IndividualId.IsSet()
}

// HasIndividualId returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasIndividualId() bool {
	if o != nil && o.IndividualId.IsSet() {
		return true
	}

	return false
}

// SetIndividualId gets a reference to the given NullableString and assigns it to the IndividualId field.
func (o *InvoiceCreateDto) SetIndividualId(v string) {
	o.IndividualId.Set(&v)
}
// SetIndividualIdNil sets the value for IndividualId to be an explicit nil
func (o *InvoiceCreateDto) SetIndividualIdNil() {
	o.IndividualId.Set(nil)
}

// UnsetIndividualId ensures that no value is present for IndividualId, not even an explicit nil
func (o *InvoiceCreateDto) UnsetIndividualId() {
	o.IndividualId.Unset()
}

// GetPaymentTermId returns the PaymentTermId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetPaymentTermId() string {
	if o == nil || IsNil(o.PaymentTermId.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentTermId.Get()
}

// GetPaymentTermIdOk returns a tuple with the PaymentTermId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetPaymentTermIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentTermId.Get(), o.PaymentTermId.IsSet()
}

// HasPaymentTermId returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasPaymentTermId() bool {
	if o != nil && o.PaymentTermId.IsSet() {
		return true
	}

	return false
}

// SetPaymentTermId gets a reference to the given NullableString and assigns it to the PaymentTermId field.
func (o *InvoiceCreateDto) SetPaymentTermId(v string) {
	o.PaymentTermId.Set(&v)
}
// SetPaymentTermIdNil sets the value for PaymentTermId to be an explicit nil
func (o *InvoiceCreateDto) SetPaymentTermIdNil() {
	o.PaymentTermId.Set(nil)
}

// UnsetPaymentTermId ensures that no value is present for PaymentTermId, not even an explicit nil
func (o *InvoiceCreateDto) UnsetPaymentTermId() {
	o.PaymentTermId.Unset()
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId.Get()) {
		var ret string
		return ret
	}
	return *o.OrganizationId.Get()
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationId.Get(), o.OrganizationId.IsSet()
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasOrganizationId() bool {
	if o != nil && o.OrganizationId.IsSet() {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given NullableString and assigns it to the OrganizationId field.
func (o *InvoiceCreateDto) SetOrganizationId(v string) {
	o.OrganizationId.Set(&v)
}
// SetOrganizationIdNil sets the value for OrganizationId to be an explicit nil
func (o *InvoiceCreateDto) SetOrganizationIdNil() {
	o.OrganizationId.Set(nil)
}

// UnsetOrganizationId ensures that no value is present for OrganizationId, not even an explicit nil
func (o *InvoiceCreateDto) UnsetOrganizationId() {
	o.OrganizationId.Unset()
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetCurrencyId() string {
	if o == nil || IsNil(o.CurrencyId.Get()) {
		var ret string
		return ret
	}
	return *o.CurrencyId.Get()
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetCurrencyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrencyId.Get(), o.CurrencyId.IsSet()
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasCurrencyId() bool {
	if o != nil && o.CurrencyId.IsSet() {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given NullableString and assigns it to the CurrencyId field.
func (o *InvoiceCreateDto) SetCurrencyId(v string) {
	o.CurrencyId.Set(&v)
}
// SetCurrencyIdNil sets the value for CurrencyId to be an explicit nil
func (o *InvoiceCreateDto) SetCurrencyIdNil() {
	o.CurrencyId.Set(nil)
}

// UnsetCurrencyId ensures that no value is present for CurrencyId, not even an explicit nil
func (o *InvoiceCreateDto) UnsetCurrencyId() {
	o.CurrencyId.Unset()
}

// GetForexRate returns the ForexRate field value if set, zero value otherwise.
func (o *InvoiceCreateDto) GetForexRate() float64 {
	if o == nil || IsNil(o.ForexRate) {
		var ret float64
		return ret
	}
	return *o.ForexRate
}

// GetForexRateOk returns a tuple with the ForexRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceCreateDto) GetForexRateOk() (*float64, bool) {
	if o == nil || IsNil(o.ForexRate) {
		return nil, false
	}
	return o.ForexRate, true
}

// HasForexRate returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasForexRate() bool {
	if o != nil && !IsNil(o.ForexRate) {
		return true
	}

	return false
}

// SetForexRate gets a reference to the given float64 and assigns it to the ForexRate field.
func (o *InvoiceCreateDto) SetForexRate(v float64) {
	o.ForexRate = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetFirstName() string {
	if o == nil || IsNil(o.FirstName.Get()) {
		var ret string
		return ret
	}
	return *o.FirstName.Get()
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstName.Get(), o.FirstName.IsSet()
}

// HasFirstName returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasFirstName() bool {
	if o != nil && o.FirstName.IsSet() {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given NullableString and assigns it to the FirstName field.
func (o *InvoiceCreateDto) SetFirstName(v string) {
	o.FirstName.Set(&v)
}
// SetFirstNameNil sets the value for FirstName to be an explicit nil
func (o *InvoiceCreateDto) SetFirstNameNil() {
	o.FirstName.Set(nil)
}

// UnsetFirstName ensures that no value is present for FirstName, not even an explicit nil
func (o *InvoiceCreateDto) UnsetFirstName() {
	o.FirstName.Unset()
}

// GetLastName returns the LastName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetLastName() string {
	if o == nil || IsNil(o.LastName.Get()) {
		var ret string
		return ret
	}
	return *o.LastName.Get()
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastName.Get(), o.LastName.IsSet()
}

// HasLastName returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasLastName() bool {
	if o != nil && o.LastName.IsSet() {
		return true
	}

	return false
}

// SetLastName gets a reference to the given NullableString and assigns it to the LastName field.
func (o *InvoiceCreateDto) SetLastName(v string) {
	o.LastName.Set(&v)
}
// SetLastNameNil sets the value for LastName to be an explicit nil
func (o *InvoiceCreateDto) SetLastNameNil() {
	o.LastName.Set(nil)
}

// UnsetLastName ensures that no value is present for LastName, not even an explicit nil
func (o *InvoiceCreateDto) UnsetLastName() {
	o.LastName.Unset()
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName.Get()) {
		var ret string
		return ret
	}
	return *o.CompanyName.Get()
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetCompanyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyName.Get(), o.CompanyName.IsSet()
}

// HasCompanyName returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasCompanyName() bool {
	if o != nil && o.CompanyName.IsSet() {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given NullableString and assigns it to the CompanyName field.
func (o *InvoiceCreateDto) SetCompanyName(v string) {
	o.CompanyName.Set(&v)
}
// SetCompanyNameNil sets the value for CompanyName to be an explicit nil
func (o *InvoiceCreateDto) SetCompanyNameNil() {
	o.CompanyName.Set(nil)
}

// UnsetCompanyName ensures that no value is present for CompanyName, not even an explicit nil
func (o *InvoiceCreateDto) UnsetCompanyName() {
	o.CompanyName.Unset()
}

// GetBillingEmail returns the BillingEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetBillingEmail() string {
	if o == nil || IsNil(o.BillingEmail.Get()) {
		var ret string
		return ret
	}
	return *o.BillingEmail.Get()
}

// GetBillingEmailOk returns a tuple with the BillingEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetBillingEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingEmail.Get(), o.BillingEmail.IsSet()
}

// HasBillingEmail returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasBillingEmail() bool {
	if o != nil && o.BillingEmail.IsSet() {
		return true
	}

	return false
}

// SetBillingEmail gets a reference to the given NullableString and assigns it to the BillingEmail field.
func (o *InvoiceCreateDto) SetBillingEmail(v string) {
	o.BillingEmail.Set(&v)
}
// SetBillingEmailNil sets the value for BillingEmail to be an explicit nil
func (o *InvoiceCreateDto) SetBillingEmailNil() {
	o.BillingEmail.Set(nil)
}

// UnsetBillingEmail ensures that no value is present for BillingEmail, not even an explicit nil
func (o *InvoiceCreateDto) UnsetBillingEmail() {
	o.BillingEmail.Unset()
}

// GetAddressLine1 returns the AddressLine1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetAddressLine1() string {
	if o == nil || IsNil(o.AddressLine1.Get()) {
		var ret string
		return ret
	}
	return *o.AddressLine1.Get()
}

// GetAddressLine1Ok returns a tuple with the AddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetAddressLine1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressLine1.Get(), o.AddressLine1.IsSet()
}

// HasAddressLine1 returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasAddressLine1() bool {
	if o != nil && o.AddressLine1.IsSet() {
		return true
	}

	return false
}

// SetAddressLine1 gets a reference to the given NullableString and assigns it to the AddressLine1 field.
func (o *InvoiceCreateDto) SetAddressLine1(v string) {
	o.AddressLine1.Set(&v)
}
// SetAddressLine1Nil sets the value for AddressLine1 to be an explicit nil
func (o *InvoiceCreateDto) SetAddressLine1Nil() {
	o.AddressLine1.Set(nil)
}

// UnsetAddressLine1 ensures that no value is present for AddressLine1, not even an explicit nil
func (o *InvoiceCreateDto) UnsetAddressLine1() {
	o.AddressLine1.Unset()
}

// GetAddressLine2 returns the AddressLine2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetAddressLine2() string {
	if o == nil || IsNil(o.AddressLine2.Get()) {
		var ret string
		return ret
	}
	return *o.AddressLine2.Get()
}

// GetAddressLine2Ok returns a tuple with the AddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetAddressLine2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressLine2.Get(), o.AddressLine2.IsSet()
}

// HasAddressLine2 returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasAddressLine2() bool {
	if o != nil && o.AddressLine2.IsSet() {
		return true
	}

	return false
}

// SetAddressLine2 gets a reference to the given NullableString and assigns it to the AddressLine2 field.
func (o *InvoiceCreateDto) SetAddressLine2(v string) {
	o.AddressLine2.Set(&v)
}
// SetAddressLine2Nil sets the value for AddressLine2 to be an explicit nil
func (o *InvoiceCreateDto) SetAddressLine2Nil() {
	o.AddressLine2.Set(nil)
}

// UnsetAddressLine2 ensures that no value is present for AddressLine2, not even an explicit nil
func (o *InvoiceCreateDto) UnsetAddressLine2() {
	o.AddressLine2.Unset()
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode.Get()) {
		var ret string
		return ret
	}
	return *o.PostalCode.Get()
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PostalCode.Get(), o.PostalCode.IsSet()
}

// HasPostalCode returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasPostalCode() bool {
	if o != nil && o.PostalCode.IsSet() {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given NullableString and assigns it to the PostalCode field.
func (o *InvoiceCreateDto) SetPostalCode(v string) {
	o.PostalCode.Set(&v)
}
// SetPostalCodeNil sets the value for PostalCode to be an explicit nil
func (o *InvoiceCreateDto) SetPostalCodeNil() {
	o.PostalCode.Set(nil)
}

// UnsetPostalCode ensures that no value is present for PostalCode, not even an explicit nil
func (o *InvoiceCreateDto) UnsetPostalCode() {
	o.PostalCode.Unset()
}

// GetCountryId returns the CountryId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetCountryId() string {
	if o == nil || IsNil(o.CountryId.Get()) {
		var ret string
		return ret
	}
	return *o.CountryId.Get()
}

// GetCountryIdOk returns a tuple with the CountryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetCountryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryId.Get(), o.CountryId.IsSet()
}

// HasCountryId returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasCountryId() bool {
	if o != nil && o.CountryId.IsSet() {
		return true
	}

	return false
}

// SetCountryId gets a reference to the given NullableString and assigns it to the CountryId field.
func (o *InvoiceCreateDto) SetCountryId(v string) {
	o.CountryId.Set(&v)
}
// SetCountryIdNil sets the value for CountryId to be an explicit nil
func (o *InvoiceCreateDto) SetCountryIdNil() {
	o.CountryId.Set(nil)
}

// UnsetCountryId ensures that no value is present for CountryId, not even an explicit nil
func (o *InvoiceCreateDto) UnsetCountryId() {
	o.CountryId.Unset()
}

// GetStateId returns the StateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetStateId() string {
	if o == nil || IsNil(o.StateId.Get()) {
		var ret string
		return ret
	}
	return *o.StateId.Get()
}

// GetStateIdOk returns a tuple with the StateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetStateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StateId.Get(), o.StateId.IsSet()
}

// HasStateId returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasStateId() bool {
	if o != nil && o.StateId.IsSet() {
		return true
	}

	return false
}

// SetStateId gets a reference to the given NullableString and assigns it to the StateId field.
func (o *InvoiceCreateDto) SetStateId(v string) {
	o.StateId.Set(&v)
}
// SetStateIdNil sets the value for StateId to be an explicit nil
func (o *InvoiceCreateDto) SetStateIdNil() {
	o.StateId.Set(nil)
}

// UnsetStateId ensures that no value is present for StateId, not even an explicit nil
func (o *InvoiceCreateDto) UnsetStateId() {
	o.StateId.Unset()
}

// GetCityId returns the CityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetCityId() string {
	if o == nil || IsNil(o.CityId.Get()) {
		var ret string
		return ret
	}
	return *o.CityId.Get()
}

// GetCityIdOk returns a tuple with the CityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetCityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CityId.Get(), o.CityId.IsSet()
}

// HasCityId returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasCityId() bool {
	if o != nil && o.CityId.IsSet() {
		return true
	}

	return false
}

// SetCityId gets a reference to the given NullableString and assigns it to the CityId field.
func (o *InvoiceCreateDto) SetCityId(v string) {
	o.CityId.Set(&v)
}
// SetCityIdNil sets the value for CityId to be an explicit nil
func (o *InvoiceCreateDto) SetCityIdNil() {
	o.CityId.Set(nil)
}

// UnsetCityId ensures that no value is present for CityId, not even an explicit nil
func (o *InvoiceCreateDto) UnsetCityId() {
	o.CityId.Unset()
}

// GetPaid returns the Paid field value if set, zero value otherwise.
func (o *InvoiceCreateDto) GetPaid() bool {
	if o == nil || IsNil(o.Paid) {
		var ret bool
		return ret
	}
	return *o.Paid
}

// GetPaidOk returns a tuple with the Paid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceCreateDto) GetPaidOk() (*bool, bool) {
	if o == nil || IsNil(o.Paid) {
		return nil, false
	}
	return o.Paid, true
}

// HasPaid returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasPaid() bool {
	if o != nil && !IsNil(o.Paid) {
		return true
	}

	return false
}

// SetPaid gets a reference to the given bool and assigns it to the Paid field.
func (o *InvoiceCreateDto) SetPaid(v bool) {
	o.Paid = &v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *InvoiceCreateDto) GetNumber() int32 {
	if o == nil || IsNil(o.Number) {
		var ret int32
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceCreateDto) GetNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given int32 and assigns it to the Number field.
func (o *InvoiceCreateDto) SetNumber(v int32) {
	o.Number = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetNotes() string {
	if o == nil || IsNil(o.Notes.Get()) {
		var ret string
		return ret
	}
	return *o.Notes.Get()
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetNotesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Notes.Get(), o.Notes.IsSet()
}

// HasNotes returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasNotes() bool {
	if o != nil && o.Notes.IsSet() {
		return true
	}

	return false
}

// SetNotes gets a reference to the given NullableString and assigns it to the Notes field.
func (o *InvoiceCreateDto) SetNotes(v string) {
	o.Notes.Set(&v)
}
// SetNotesNil sets the value for Notes to be an explicit nil
func (o *InvoiceCreateDto) SetNotesNil() {
	o.Notes.Set(nil)
}

// UnsetNotes ensures that no value is present for Notes, not even an explicit nil
func (o *InvoiceCreateDto) UnsetNotes() {
	o.Notes.Unset()
}

// GetCustomerNotes returns the CustomerNotes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetCustomerNotes() string {
	if o == nil || IsNil(o.CustomerNotes.Get()) {
		var ret string
		return ret
	}
	return *o.CustomerNotes.Get()
}

// GetCustomerNotesOk returns a tuple with the CustomerNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetCustomerNotesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomerNotes.Get(), o.CustomerNotes.IsSet()
}

// HasCustomerNotes returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasCustomerNotes() bool {
	if o != nil && o.CustomerNotes.IsSet() {
		return true
	}

	return false
}

// SetCustomerNotes gets a reference to the given NullableString and assigns it to the CustomerNotes field.
func (o *InvoiceCreateDto) SetCustomerNotes(v string) {
	o.CustomerNotes.Set(&v)
}
// SetCustomerNotesNil sets the value for CustomerNotes to be an explicit nil
func (o *InvoiceCreateDto) SetCustomerNotesNil() {
	o.CustomerNotes.Set(nil)
}

// UnsetCustomerNotes ensures that no value is present for CustomerNotes, not even an explicit nil
func (o *InvoiceCreateDto) UnsetCustomerNotes() {
	o.CustomerNotes.Unset()
}

// GetOrderId returns the OrderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetOrderId() string {
	if o == nil || IsNil(o.OrderId.Get()) {
		var ret string
		return ret
	}
	return *o.OrderId.Get()
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetOrderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderId.Get(), o.OrderId.IsSet()
}

// HasOrderId returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasOrderId() bool {
	if o != nil && o.OrderId.IsSet() {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given NullableString and assigns it to the OrderId field.
func (o *InvoiceCreateDto) SetOrderId(v string) {
	o.OrderId.Set(&v)
}
// SetOrderIdNil sets the value for OrderId to be an explicit nil
func (o *InvoiceCreateDto) SetOrderIdNil() {
	o.OrderId.Set(nil)
}

// UnsetOrderId ensures that no value is present for OrderId, not even an explicit nil
func (o *InvoiceCreateDto) UnsetOrderId() {
	o.OrderId.Unset()
}

// GetEnumeration returns the Enumeration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetEnumeration() string {
	if o == nil || IsNil(o.Enumeration.Get()) {
		var ret string
		return ret
	}
	return *o.Enumeration.Get()
}

// GetEnumerationOk returns a tuple with the Enumeration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetEnumerationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Enumeration.Get(), o.Enumeration.IsSet()
}

// HasEnumeration returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasEnumeration() bool {
	if o != nil && o.Enumeration.IsSet() {
		return true
	}

	return false
}

// SetEnumeration gets a reference to the given NullableString and assigns it to the Enumeration field.
func (o *InvoiceCreateDto) SetEnumeration(v string) {
	o.Enumeration.Set(&v)
}
// SetEnumerationNil sets the value for Enumeration to be an explicit nil
func (o *InvoiceCreateDto) SetEnumerationNil() {
	o.Enumeration.Set(nil)
}

// UnsetEnumeration ensures that no value is present for Enumeration, not even an explicit nil
func (o *InvoiceCreateDto) UnsetEnumeration() {
	o.Enumeration.Unset()
}

// GetPaymentModeId returns the PaymentModeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetPaymentModeId() string {
	if o == nil || IsNil(o.PaymentModeId.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentModeId.Get()
}

// GetPaymentModeIdOk returns a tuple with the PaymentModeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetPaymentModeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentModeId.Get(), o.PaymentModeId.IsSet()
}

// HasPaymentModeId returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasPaymentModeId() bool {
	if o != nil && o.PaymentModeId.IsSet() {
		return true
	}

	return false
}

// SetPaymentModeId gets a reference to the given NullableString and assigns it to the PaymentModeId field.
func (o *InvoiceCreateDto) SetPaymentModeId(v string) {
	o.PaymentModeId.Set(&v)
}
// SetPaymentModeIdNil sets the value for PaymentModeId to be an explicit nil
func (o *InvoiceCreateDto) SetPaymentModeIdNil() {
	o.PaymentModeId.Set(nil)
}

// UnsetPaymentModeId ensures that no value is present for PaymentModeId, not even an explicit nil
func (o *InvoiceCreateDto) UnsetPaymentModeId() {
	o.PaymentModeId.Unset()
}

// GetReceiverTenantId returns the ReceiverTenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetReceiverTenantId() string {
	if o == nil || IsNil(o.ReceiverTenantId.Get()) {
		var ret string
		return ret
	}
	return *o.ReceiverTenantId.Get()
}

// GetReceiverTenantIdOk returns a tuple with the ReceiverTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetReceiverTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiverTenantId.Get(), o.ReceiverTenantId.IsSet()
}

// HasReceiverTenantId returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasReceiverTenantId() bool {
	if o != nil && o.ReceiverTenantId.IsSet() {
		return true
	}

	return false
}

// SetReceiverTenantId gets a reference to the given NullableString and assigns it to the ReceiverTenantId field.
func (o *InvoiceCreateDto) SetReceiverTenantId(v string) {
	o.ReceiverTenantId.Set(&v)
}
// SetReceiverTenantIdNil sets the value for ReceiverTenantId to be an explicit nil
func (o *InvoiceCreateDto) SetReceiverTenantIdNil() {
	o.ReceiverTenantId.Set(nil)
}

// UnsetReceiverTenantId ensures that no value is present for ReceiverTenantId, not even an explicit nil
func (o *InvoiceCreateDto) UnsetReceiverTenantId() {
	o.ReceiverTenantId.Unset()
}

// GetEnumerationRangeId returns the EnumerationRangeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetEnumerationRangeId() string {
	if o == nil || IsNil(o.EnumerationRangeId.Get()) {
		var ret string
		return ret
	}
	return *o.EnumerationRangeId.Get()
}

// GetEnumerationRangeIdOk returns a tuple with the EnumerationRangeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetEnumerationRangeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnumerationRangeId.Get(), o.EnumerationRangeId.IsSet()
}

// HasEnumerationRangeId returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasEnumerationRangeId() bool {
	if o != nil && o.EnumerationRangeId.IsSet() {
		return true
	}

	return false
}

// SetEnumerationRangeId gets a reference to the given NullableString and assigns it to the EnumerationRangeId field.
func (o *InvoiceCreateDto) SetEnumerationRangeId(v string) {
	o.EnumerationRangeId.Set(&v)
}
// SetEnumerationRangeIdNil sets the value for EnumerationRangeId to be an explicit nil
func (o *InvoiceCreateDto) SetEnumerationRangeIdNil() {
	o.EnumerationRangeId.Set(nil)
}

// UnsetEnumerationRangeId ensures that no value is present for EnumerationRangeId, not even an explicit nil
func (o *InvoiceCreateDto) UnsetEnumerationRangeId() {
	o.EnumerationRangeId.Unset()
}

// GetEmisorBillingProfileId returns the EmisorBillingProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetEmisorBillingProfileId() string {
	if o == nil || IsNil(o.EmisorBillingProfileId.Get()) {
		var ret string
		return ret
	}
	return *o.EmisorBillingProfileId.Get()
}

// GetEmisorBillingProfileIdOk returns a tuple with the EmisorBillingProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetEmisorBillingProfileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EmisorBillingProfileId.Get(), o.EmisorBillingProfileId.IsSet()
}

// HasEmisorBillingProfileId returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasEmisorBillingProfileId() bool {
	if o != nil && o.EmisorBillingProfileId.IsSet() {
		return true
	}

	return false
}

// SetEmisorBillingProfileId gets a reference to the given NullableString and assigns it to the EmisorBillingProfileId field.
func (o *InvoiceCreateDto) SetEmisorBillingProfileId(v string) {
	o.EmisorBillingProfileId.Set(&v)
}
// SetEmisorBillingProfileIdNil sets the value for EmisorBillingProfileId to be an explicit nil
func (o *InvoiceCreateDto) SetEmisorBillingProfileIdNil() {
	o.EmisorBillingProfileId.Set(nil)
}

// UnsetEmisorBillingProfileId ensures that no value is present for EmisorBillingProfileId, not even an explicit nil
func (o *InvoiceCreateDto) UnsetEmisorBillingProfileId() {
	o.EmisorBillingProfileId.Unset()
}

// GetReceiverBillingProfileId returns the ReceiverBillingProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetReceiverBillingProfileId() string {
	if o == nil || IsNil(o.ReceiverBillingProfileId.Get()) {
		var ret string
		return ret
	}
	return *o.ReceiverBillingProfileId.Get()
}

// GetReceiverBillingProfileIdOk returns a tuple with the ReceiverBillingProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetReceiverBillingProfileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiverBillingProfileId.Get(), o.ReceiverBillingProfileId.IsSet()
}

// HasReceiverBillingProfileId returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasReceiverBillingProfileId() bool {
	if o != nil && o.ReceiverBillingProfileId.IsSet() {
		return true
	}

	return false
}

// SetReceiverBillingProfileId gets a reference to the given NullableString and assigns it to the ReceiverBillingProfileId field.
func (o *InvoiceCreateDto) SetReceiverBillingProfileId(v string) {
	o.ReceiverBillingProfileId.Set(&v)
}
// SetReceiverBillingProfileIdNil sets the value for ReceiverBillingProfileId to be an explicit nil
func (o *InvoiceCreateDto) SetReceiverBillingProfileIdNil() {
	o.ReceiverBillingProfileId.Set(nil)
}

// UnsetReceiverBillingProfileId ensures that no value is present for ReceiverBillingProfileId, not even an explicit nil
func (o *InvoiceCreateDto) UnsetReceiverBillingProfileId() {
	o.ReceiverBillingProfileId.Unset()
}

// GetEmisorWalletAccountId returns the EmisorWalletAccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetEmisorWalletAccountId() string {
	if o == nil || IsNil(o.EmisorWalletAccountId.Get()) {
		var ret string
		return ret
	}
	return *o.EmisorWalletAccountId.Get()
}

// GetEmisorWalletAccountIdOk returns a tuple with the EmisorWalletAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetEmisorWalletAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EmisorWalletAccountId.Get(), o.EmisorWalletAccountId.IsSet()
}

// HasEmisorWalletAccountId returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasEmisorWalletAccountId() bool {
	if o != nil && o.EmisorWalletAccountId.IsSet() {
		return true
	}

	return false
}

// SetEmisorWalletAccountId gets a reference to the given NullableString and assigns it to the EmisorWalletAccountId field.
func (o *InvoiceCreateDto) SetEmisorWalletAccountId(v string) {
	o.EmisorWalletAccountId.Set(&v)
}
// SetEmisorWalletAccountIdNil sets the value for EmisorWalletAccountId to be an explicit nil
func (o *InvoiceCreateDto) SetEmisorWalletAccountIdNil() {
	o.EmisorWalletAccountId.Set(nil)
}

// UnsetEmisorWalletAccountId ensures that no value is present for EmisorWalletAccountId, not even an explicit nil
func (o *InvoiceCreateDto) UnsetEmisorWalletAccountId() {
	o.EmisorWalletAccountId.Unset()
}

// GetReceiverWalletAccountId returns the ReceiverWalletAccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetReceiverWalletAccountId() string {
	if o == nil || IsNil(o.ReceiverWalletAccountId.Get()) {
		var ret string
		return ret
	}
	return *o.ReceiverWalletAccountId.Get()
}

// GetReceiverWalletAccountIdOk returns a tuple with the ReceiverWalletAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetReceiverWalletAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiverWalletAccountId.Get(), o.ReceiverWalletAccountId.IsSet()
}

// HasReceiverWalletAccountId returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasReceiverWalletAccountId() bool {
	if o != nil && o.ReceiverWalletAccountId.IsSet() {
		return true
	}

	return false
}

// SetReceiverWalletAccountId gets a reference to the given NullableString and assigns it to the ReceiverWalletAccountId field.
func (o *InvoiceCreateDto) SetReceiverWalletAccountId(v string) {
	o.ReceiverWalletAccountId.Set(&v)
}
// SetReceiverWalletAccountIdNil sets the value for ReceiverWalletAccountId to be an explicit nil
func (o *InvoiceCreateDto) SetReceiverWalletAccountIdNil() {
	o.ReceiverWalletAccountId.Set(nil)
}

// UnsetReceiverWalletAccountId ensures that no value is present for ReceiverWalletAccountId, not even an explicit nil
func (o *InvoiceCreateDto) UnsetReceiverWalletAccountId() {
	o.ReceiverWalletAccountId.Unset()
}

// GetPaymentDue returns the PaymentDue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetPaymentDue() time.Time {
	if o == nil || IsNil(o.PaymentDue.Get()) {
		var ret time.Time
		return ret
	}
	return *o.PaymentDue.Get()
}

// GetPaymentDueOk returns a tuple with the PaymentDue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetPaymentDueOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentDue.Get(), o.PaymentDue.IsSet()
}

// HasPaymentDue returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasPaymentDue() bool {
	if o != nil && o.PaymentDue.IsSet() {
		return true
	}

	return false
}

// SetPaymentDue gets a reference to the given NullableTime and assigns it to the PaymentDue field.
func (o *InvoiceCreateDto) SetPaymentDue(v time.Time) {
	o.PaymentDue.Set(&v)
}
// SetPaymentDueNil sets the value for PaymentDue to be an explicit nil
func (o *InvoiceCreateDto) SetPaymentDueNil() {
	o.PaymentDue.Set(nil)
}

// UnsetPaymentDue ensures that no value is present for PaymentDue, not even an explicit nil
func (o *InvoiceCreateDto) UnsetPaymentDue() {
	o.PaymentDue.Unset()
}

// GetInvoiceType returns the InvoiceType field value if set, zero value otherwise.
func (o *InvoiceCreateDto) GetInvoiceType() int32 {
	if o == nil || IsNil(o.InvoiceType) {
		var ret int32
		return ret
	}
	return *o.InvoiceType
}

// GetInvoiceTypeOk returns a tuple with the InvoiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceCreateDto) GetInvoiceTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.InvoiceType) {
		return nil, false
	}
	return o.InvoiceType, true
}

// HasInvoiceType returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasInvoiceType() bool {
	if o != nil && !IsNil(o.InvoiceType) {
		return true
	}

	return false
}

// SetInvoiceType gets a reference to the given int32 and assigns it to the InvoiceType field.
func (o *InvoiceCreateDto) SetInvoiceType(v int32) {
	o.InvoiceType = &v
}

// GetDocumentType returns the DocumentType field value if set, zero value otherwise.
func (o *InvoiceCreateDto) GetDocumentType() int32 {
	if o == nil || IsNil(o.DocumentType) {
		var ret int32
		return ret
	}
	return *o.DocumentType
}

// GetDocumentTypeOk returns a tuple with the DocumentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceCreateDto) GetDocumentTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.DocumentType) {
		return nil, false
	}
	return o.DocumentType, true
}

// HasDocumentType returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasDocumentType() bool {
	if o != nil && !IsNil(o.DocumentType) {
		return true
	}

	return false
}

// SetDocumentType gets a reference to the given int32 and assigns it to the DocumentType field.
func (o *InvoiceCreateDto) SetDocumentType(v int32) {
	o.DocumentType = &v
}

// GetInvoiceStatus returns the InvoiceStatus field value if set, zero value otherwise.
func (o *InvoiceCreateDto) GetInvoiceStatus() int32 {
	if o == nil || IsNil(o.InvoiceStatus) {
		var ret int32
		return ret
	}
	return *o.InvoiceStatus
}

// GetInvoiceStatusOk returns a tuple with the InvoiceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceCreateDto) GetInvoiceStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.InvoiceStatus) {
		return nil, false
	}
	return o.InvoiceStatus, true
}

// HasInvoiceStatus returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasInvoiceStatus() bool {
	if o != nil && !IsNil(o.InvoiceStatus) {
		return true
	}

	return false
}

// SetInvoiceStatus gets a reference to the given int32 and assigns it to the InvoiceStatus field.
func (o *InvoiceCreateDto) SetInvoiceStatus(v int32) {
	o.InvoiceStatus = &v
}

// GetValidFrom returns the ValidFrom field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetValidFrom() time.Time {
	if o == nil || IsNil(o.ValidFrom.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ValidFrom.Get()
}

// GetValidFromOk returns a tuple with the ValidFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetValidFromOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ValidFrom.Get(), o.ValidFrom.IsSet()
}

// HasValidFrom returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasValidFrom() bool {
	if o != nil && o.ValidFrom.IsSet() {
		return true
	}

	return false
}

// SetValidFrom gets a reference to the given NullableTime and assigns it to the ValidFrom field.
func (o *InvoiceCreateDto) SetValidFrom(v time.Time) {
	o.ValidFrom.Set(&v)
}
// SetValidFromNil sets the value for ValidFrom to be an explicit nil
func (o *InvoiceCreateDto) SetValidFromNil() {
	o.ValidFrom.Set(nil)
}

// UnsetValidFrom ensures that no value is present for ValidFrom, not even an explicit nil
func (o *InvoiceCreateDto) UnsetValidFrom() {
	o.ValidFrom.Unset()
}

// GetValidTo returns the ValidTo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetValidTo() time.Time {
	if o == nil || IsNil(o.ValidTo.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ValidTo.Get()
}

// GetValidToOk returns a tuple with the ValidTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetValidToOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ValidTo.Get(), o.ValidTo.IsSet()
}

// HasValidTo returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasValidTo() bool {
	if o != nil && o.ValidTo.IsSet() {
		return true
	}

	return false
}

// SetValidTo gets a reference to the given NullableTime and assigns it to the ValidTo field.
func (o *InvoiceCreateDto) SetValidTo(v time.Time) {
	o.ValidTo.Set(&v)
}
// SetValidToNil sets the value for ValidTo to be an explicit nil
func (o *InvoiceCreateDto) SetValidToNil() {
	o.ValidTo.Set(nil)
}

// UnsetValidTo ensures that no value is present for ValidTo, not even an explicit nil
func (o *InvoiceCreateDto) UnsetValidTo() {
	o.ValidTo.Unset()
}

// GetInvoiceReferences returns the InvoiceReferences field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetInvoiceReferences() []InvoiceReferenceDto {
	if o == nil {
		var ret []InvoiceReferenceDto
		return ret
	}
	return o.InvoiceReferences
}

// GetInvoiceReferencesOk returns a tuple with the InvoiceReferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetInvoiceReferencesOk() ([]InvoiceReferenceDto, bool) {
	if o == nil || IsNil(o.InvoiceReferences) {
		return nil, false
	}
	return o.InvoiceReferences, true
}

// HasInvoiceReferences returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasInvoiceReferences() bool {
	if o != nil && !IsNil(o.InvoiceReferences) {
		return true
	}

	return false
}

// SetInvoiceReferences gets a reference to the given []InvoiceReferenceDto and assigns it to the InvoiceReferences field.
func (o *InvoiceCreateDto) SetInvoiceReferences(v []InvoiceReferenceDto) {
	o.InvoiceReferences = v
}

// GetInvoiceItemRecords returns the InvoiceItemRecords field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetInvoiceItemRecords() []InvoiceItemRecordDto {
	if o == nil {
		var ret []InvoiceItemRecordDto
		return ret
	}
	return o.InvoiceItemRecords
}

// GetInvoiceItemRecordsOk returns a tuple with the InvoiceItemRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetInvoiceItemRecordsOk() ([]InvoiceItemRecordDto, bool) {
	if o == nil || IsNil(o.InvoiceItemRecords) {
		return nil, false
	}
	return o.InvoiceItemRecords, true
}

// HasInvoiceItemRecords returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasInvoiceItemRecords() bool {
	if o != nil && !IsNil(o.InvoiceItemRecords) {
		return true
	}

	return false
}

// SetInvoiceItemRecords gets a reference to the given []InvoiceItemRecordDto and assigns it to the InvoiceItemRecords field.
func (o *InvoiceCreateDto) SetInvoiceItemRecords(v []InvoiceItemRecordDto) {
	o.InvoiceItemRecords = v
}

// GetInvoiceAdjustments returns the InvoiceAdjustments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceCreateDto) GetInvoiceAdjustments() []InvoiceAdjustmentDto {
	if o == nil {
		var ret []InvoiceAdjustmentDto
		return ret
	}
	return o.InvoiceAdjustments
}

// GetInvoiceAdjustmentsOk returns a tuple with the InvoiceAdjustments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceCreateDto) GetInvoiceAdjustmentsOk() ([]InvoiceAdjustmentDto, bool) {
	if o == nil || IsNil(o.InvoiceAdjustments) {
		return nil, false
	}
	return o.InvoiceAdjustments, true
}

// HasInvoiceAdjustments returns a boolean if a field has been set.
func (o *InvoiceCreateDto) HasInvoiceAdjustments() bool {
	if o != nil && !IsNil(o.InvoiceAdjustments) {
		return true
	}

	return false
}

// SetInvoiceAdjustments gets a reference to the given []InvoiceAdjustmentDto and assigns it to the InvoiceAdjustments field.
func (o *InvoiceCreateDto) SetInvoiceAdjustments(v []InvoiceAdjustmentDto) {
	o.InvoiceAdjustments = v
}

func (o InvoiceCreateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceCreateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Closed) {
		toSerialize["closed"] = o.Closed
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.UserId.IsSet() {
		toSerialize["userId"] = o.UserId.Get()
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.PriceListId.IsSet() {
		toSerialize["priceListId"] = o.PriceListId.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.EnrollmentId.IsSet() {
		toSerialize["enrollmentId"] = o.EnrollmentId.Get()
	}
	if o.IndividualId.IsSet() {
		toSerialize["individualId"] = o.IndividualId.Get()
	}
	if o.PaymentTermId.IsSet() {
		toSerialize["paymentTermId"] = o.PaymentTermId.Get()
	}
	if o.OrganizationId.IsSet() {
		toSerialize["organizationId"] = o.OrganizationId.Get()
	}
	if o.CurrencyId.IsSet() {
		toSerialize["currencyId"] = o.CurrencyId.Get()
	}
	if !IsNil(o.ForexRate) {
		toSerialize["forexRate"] = o.ForexRate
	}
	if o.FirstName.IsSet() {
		toSerialize["firstName"] = o.FirstName.Get()
	}
	if o.LastName.IsSet() {
		toSerialize["lastName"] = o.LastName.Get()
	}
	if o.CompanyName.IsSet() {
		toSerialize["companyName"] = o.CompanyName.Get()
	}
	if o.BillingEmail.IsSet() {
		toSerialize["billingEmail"] = o.BillingEmail.Get()
	}
	if o.AddressLine1.IsSet() {
		toSerialize["addressLine1"] = o.AddressLine1.Get()
	}
	if o.AddressLine2.IsSet() {
		toSerialize["addressLine2"] = o.AddressLine2.Get()
	}
	if o.PostalCode.IsSet() {
		toSerialize["postalCode"] = o.PostalCode.Get()
	}
	if o.CountryId.IsSet() {
		toSerialize["countryId"] = o.CountryId.Get()
	}
	if o.StateId.IsSet() {
		toSerialize["stateId"] = o.StateId.Get()
	}
	if o.CityId.IsSet() {
		toSerialize["cityId"] = o.CityId.Get()
	}
	if !IsNil(o.Paid) {
		toSerialize["paid"] = o.Paid
	}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	if o.Notes.IsSet() {
		toSerialize["notes"] = o.Notes.Get()
	}
	if o.CustomerNotes.IsSet() {
		toSerialize["customerNotes"] = o.CustomerNotes.Get()
	}
	if o.OrderId.IsSet() {
		toSerialize["orderId"] = o.OrderId.Get()
	}
	if o.Enumeration.IsSet() {
		toSerialize["enumeration"] = o.Enumeration.Get()
	}
	if o.PaymentModeId.IsSet() {
		toSerialize["paymentModeId"] = o.PaymentModeId.Get()
	}
	if o.ReceiverTenantId.IsSet() {
		toSerialize["receiverTenantId"] = o.ReceiverTenantId.Get()
	}
	if o.EnumerationRangeId.IsSet() {
		toSerialize["enumerationRangeId"] = o.EnumerationRangeId.Get()
	}
	if o.EmisorBillingProfileId.IsSet() {
		toSerialize["emisorBillingProfileId"] = o.EmisorBillingProfileId.Get()
	}
	if o.ReceiverBillingProfileId.IsSet() {
		toSerialize["receiverBillingProfileId"] = o.ReceiverBillingProfileId.Get()
	}
	if o.EmisorWalletAccountId.IsSet() {
		toSerialize["emisorWalletAccountId"] = o.EmisorWalletAccountId.Get()
	}
	if o.ReceiverWalletAccountId.IsSet() {
		toSerialize["receiverWalletAccountId"] = o.ReceiverWalletAccountId.Get()
	}
	if o.PaymentDue.IsSet() {
		toSerialize["paymentDue"] = o.PaymentDue.Get()
	}
	if !IsNil(o.InvoiceType) {
		toSerialize["invoiceType"] = o.InvoiceType
	}
	if !IsNil(o.DocumentType) {
		toSerialize["documentType"] = o.DocumentType
	}
	if !IsNil(o.InvoiceStatus) {
		toSerialize["invoiceStatus"] = o.InvoiceStatus
	}
	if o.ValidFrom.IsSet() {
		toSerialize["validFrom"] = o.ValidFrom.Get()
	}
	if o.ValidTo.IsSet() {
		toSerialize["validTo"] = o.ValidTo.Get()
	}
	if o.InvoiceReferences != nil {
		toSerialize["invoiceReferences"] = o.InvoiceReferences
	}
	if o.InvoiceItemRecords != nil {
		toSerialize["invoiceItemRecords"] = o.InvoiceItemRecords
	}
	if o.InvoiceAdjustments != nil {
		toSerialize["invoiceAdjustments"] = o.InvoiceAdjustments
	}
	return toSerialize, nil
}

type NullableInvoiceCreateDto struct {
	value *InvoiceCreateDto
	isSet bool
}

func (v NullableInvoiceCreateDto) Get() *InvoiceCreateDto {
	return v.value
}

func (v *NullableInvoiceCreateDto) Set(val *InvoiceCreateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceCreateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceCreateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceCreateDto(val *InvoiceCreateDto) *NullableInvoiceCreateDto {
	return &NullableInvoiceCreateDto{value: val, isSet: true}
}

func (v NullableInvoiceCreateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceCreateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


