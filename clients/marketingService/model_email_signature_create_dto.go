/*
MarketingService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the EmailSignatureCreateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmailSignatureCreateDto{}

// EmailSignatureCreateDto struct for EmailSignatureCreateDto
type EmailSignatureCreateDto struct {
	Id *string `json:"id,omitempty"`
	Timestamp *time.Time `json:"timestamp,omitempty"`
	TenantId NullableString `json:"tenantId,omitempty"`
	EnrolmentId NullableString `json:"enrolmentId,omitempty"`
	Title NullableString `json:"title,omitempty"`
	AuthorId NullableString `json:"authorId,omitempty"`
	Description NullableString `json:"description,omitempty"`
	HtmlContent NullableString `json:"htmlContent,omitempty"`
	FeaturedImageUrl NullableString `json:"featuredImageUrl,omitempty"`
}

// NewEmailSignatureCreateDto instantiates a new EmailSignatureCreateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailSignatureCreateDto() *EmailSignatureCreateDto {
	this := EmailSignatureCreateDto{}
	return &this
}

// NewEmailSignatureCreateDtoWithDefaults instantiates a new EmailSignatureCreateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailSignatureCreateDtoWithDefaults() *EmailSignatureCreateDto {
	this := EmailSignatureCreateDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EmailSignatureCreateDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailSignatureCreateDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EmailSignatureCreateDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *EmailSignatureCreateDto) SetId(v string) {
	o.Id = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *EmailSignatureCreateDto) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailSignatureCreateDto) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *EmailSignatureCreateDto) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *EmailSignatureCreateDto) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailSignatureCreateDto) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailSignatureCreateDto) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *EmailSignatureCreateDto) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *EmailSignatureCreateDto) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *EmailSignatureCreateDto) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *EmailSignatureCreateDto) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetEnrolmentId returns the EnrolmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailSignatureCreateDto) GetEnrolmentId() string {
	if o == nil || IsNil(o.EnrolmentId.Get()) {
		var ret string
		return ret
	}
	return *o.EnrolmentId.Get()
}

// GetEnrolmentIdOk returns a tuple with the EnrolmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailSignatureCreateDto) GetEnrolmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnrolmentId.Get(), o.EnrolmentId.IsSet()
}

// HasEnrolmentId returns a boolean if a field has been set.
func (o *EmailSignatureCreateDto) HasEnrolmentId() bool {
	if o != nil && o.EnrolmentId.IsSet() {
		return true
	}

	return false
}

// SetEnrolmentId gets a reference to the given NullableString and assigns it to the EnrolmentId field.
func (o *EmailSignatureCreateDto) SetEnrolmentId(v string) {
	o.EnrolmentId.Set(&v)
}
// SetEnrolmentIdNil sets the value for EnrolmentId to be an explicit nil
func (o *EmailSignatureCreateDto) SetEnrolmentIdNil() {
	o.EnrolmentId.Set(nil)
}

// UnsetEnrolmentId ensures that no value is present for EnrolmentId, not even an explicit nil
func (o *EmailSignatureCreateDto) UnsetEnrolmentId() {
	o.EnrolmentId.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailSignatureCreateDto) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailSignatureCreateDto) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *EmailSignatureCreateDto) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *EmailSignatureCreateDto) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *EmailSignatureCreateDto) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *EmailSignatureCreateDto) UnsetTitle() {
	o.Title.Unset()
}

// GetAuthorId returns the AuthorId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailSignatureCreateDto) GetAuthorId() string {
	if o == nil || IsNil(o.AuthorId.Get()) {
		var ret string
		return ret
	}
	return *o.AuthorId.Get()
}

// GetAuthorIdOk returns a tuple with the AuthorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailSignatureCreateDto) GetAuthorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthorId.Get(), o.AuthorId.IsSet()
}

// HasAuthorId returns a boolean if a field has been set.
func (o *EmailSignatureCreateDto) HasAuthorId() bool {
	if o != nil && o.AuthorId.IsSet() {
		return true
	}

	return false
}

// SetAuthorId gets a reference to the given NullableString and assigns it to the AuthorId field.
func (o *EmailSignatureCreateDto) SetAuthorId(v string) {
	o.AuthorId.Set(&v)
}
// SetAuthorIdNil sets the value for AuthorId to be an explicit nil
func (o *EmailSignatureCreateDto) SetAuthorIdNil() {
	o.AuthorId.Set(nil)
}

// UnsetAuthorId ensures that no value is present for AuthorId, not even an explicit nil
func (o *EmailSignatureCreateDto) UnsetAuthorId() {
	o.AuthorId.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailSignatureCreateDto) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailSignatureCreateDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *EmailSignatureCreateDto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *EmailSignatureCreateDto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *EmailSignatureCreateDto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *EmailSignatureCreateDto) UnsetDescription() {
	o.Description.Unset()
}

// GetHtmlContent returns the HtmlContent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailSignatureCreateDto) GetHtmlContent() string {
	if o == nil || IsNil(o.HtmlContent.Get()) {
		var ret string
		return ret
	}
	return *o.HtmlContent.Get()
}

// GetHtmlContentOk returns a tuple with the HtmlContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailSignatureCreateDto) GetHtmlContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HtmlContent.Get(), o.HtmlContent.IsSet()
}

// HasHtmlContent returns a boolean if a field has been set.
func (o *EmailSignatureCreateDto) HasHtmlContent() bool {
	if o != nil && o.HtmlContent.IsSet() {
		return true
	}

	return false
}

// SetHtmlContent gets a reference to the given NullableString and assigns it to the HtmlContent field.
func (o *EmailSignatureCreateDto) SetHtmlContent(v string) {
	o.HtmlContent.Set(&v)
}
// SetHtmlContentNil sets the value for HtmlContent to be an explicit nil
func (o *EmailSignatureCreateDto) SetHtmlContentNil() {
	o.HtmlContent.Set(nil)
}

// UnsetHtmlContent ensures that no value is present for HtmlContent, not even an explicit nil
func (o *EmailSignatureCreateDto) UnsetHtmlContent() {
	o.HtmlContent.Unset()
}

// GetFeaturedImageUrl returns the FeaturedImageUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailSignatureCreateDto) GetFeaturedImageUrl() string {
	if o == nil || IsNil(o.FeaturedImageUrl.Get()) {
		var ret string
		return ret
	}
	return *o.FeaturedImageUrl.Get()
}

// GetFeaturedImageUrlOk returns a tuple with the FeaturedImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailSignatureCreateDto) GetFeaturedImageUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FeaturedImageUrl.Get(), o.FeaturedImageUrl.IsSet()
}

// HasFeaturedImageUrl returns a boolean if a field has been set.
func (o *EmailSignatureCreateDto) HasFeaturedImageUrl() bool {
	if o != nil && o.FeaturedImageUrl.IsSet() {
		return true
	}

	return false
}

// SetFeaturedImageUrl gets a reference to the given NullableString and assigns it to the FeaturedImageUrl field.
func (o *EmailSignatureCreateDto) SetFeaturedImageUrl(v string) {
	o.FeaturedImageUrl.Set(&v)
}
// SetFeaturedImageUrlNil sets the value for FeaturedImageUrl to be an explicit nil
func (o *EmailSignatureCreateDto) SetFeaturedImageUrlNil() {
	o.FeaturedImageUrl.Set(nil)
}

// UnsetFeaturedImageUrl ensures that no value is present for FeaturedImageUrl, not even an explicit nil
func (o *EmailSignatureCreateDto) UnsetFeaturedImageUrl() {
	o.FeaturedImageUrl.Unset()
}

func (o EmailSignatureCreateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailSignatureCreateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.EnrolmentId.IsSet() {
		toSerialize["enrolmentId"] = o.EnrolmentId.Get()
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.AuthorId.IsSet() {
		toSerialize["authorId"] = o.AuthorId.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.HtmlContent.IsSet() {
		toSerialize["htmlContent"] = o.HtmlContent.Get()
	}
	if o.FeaturedImageUrl.IsSet() {
		toSerialize["featuredImageUrl"] = o.FeaturedImageUrl.Get()
	}
	return toSerialize, nil
}

type NullableEmailSignatureCreateDto struct {
	value *EmailSignatureCreateDto
	isSet bool
}

func (v NullableEmailSignatureCreateDto) Get() *EmailSignatureCreateDto {
	return v.value
}

func (v *NullableEmailSignatureCreateDto) Set(val *EmailSignatureCreateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailSignatureCreateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailSignatureCreateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailSignatureCreateDto(val *EmailSignatureCreateDto) *NullableEmailSignatureCreateDto {
	return &NullableEmailSignatureCreateDto{value: val, isSet: true}
}

func (v NullableEmailSignatureCreateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailSignatureCreateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


