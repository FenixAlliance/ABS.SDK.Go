/*
MarketingService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the MarketingCampaignCreateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MarketingCampaignCreateDto{}

// MarketingCampaignCreateDto struct for MarketingCampaignCreateDto
type MarketingCampaignCreateDto struct {
	Id *string `json:"id,omitempty"`
	Timestamp *time.Time `json:"timestamp,omitempty"`
	Name NullableString `json:"name,omitempty"`
	Offer NullableString `json:"offer,omitempty"`
	Active *bool `json:"active,omitempty"`
	ProposedStart *time.Time `json:"proposedStart,omitempty"`
	ProposedEnd *time.Time `json:"proposedEnd,omitempty"`
	ActualStart *time.Time `json:"actualStart,omitempty"`
	ActualEnd *time.Time `json:"actualEnd,omitempty"`
	Code NullableString `json:"code,omitempty"`
	AllocatedBudget *float64 `json:"allocatedBudget,omitempty"`
	ActivityCost *float64 `json:"activityCost,omitempty"`
	MiscCost *float64 `json:"miscCost,omitempty"`
	ExpectedResponsePercent *float64 `json:"expectedResponsePercent,omitempty"`
	MarketingAreaId NullableString `json:"marketingAreaId,omitempty"`
	CurrencyId NullableString `json:"currencyId,omitempty"`
	TenantId NullableString `json:"tenantId,omitempty"`
	EnrolmentId NullableString `json:"enrolmentId,omitempty"`
}

// NewMarketingCampaignCreateDto instantiates a new MarketingCampaignCreateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketingCampaignCreateDto() *MarketingCampaignCreateDto {
	this := MarketingCampaignCreateDto{}
	return &this
}

// NewMarketingCampaignCreateDtoWithDefaults instantiates a new MarketingCampaignCreateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketingCampaignCreateDtoWithDefaults() *MarketingCampaignCreateDto {
	this := MarketingCampaignCreateDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MarketingCampaignCreateDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingCampaignCreateDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MarketingCampaignCreateDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MarketingCampaignCreateDto) SetId(v string) {
	o.Id = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *MarketingCampaignCreateDto) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingCampaignCreateDto) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *MarketingCampaignCreateDto) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *MarketingCampaignCreateDto) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MarketingCampaignCreateDto) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MarketingCampaignCreateDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *MarketingCampaignCreateDto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *MarketingCampaignCreateDto) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *MarketingCampaignCreateDto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *MarketingCampaignCreateDto) UnsetName() {
	o.Name.Unset()
}

// GetOffer returns the Offer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MarketingCampaignCreateDto) GetOffer() string {
	if o == nil || IsNil(o.Offer.Get()) {
		var ret string
		return ret
	}
	return *o.Offer.Get()
}

// GetOfferOk returns a tuple with the Offer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MarketingCampaignCreateDto) GetOfferOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Offer.Get(), o.Offer.IsSet()
}

// HasOffer returns a boolean if a field has been set.
func (o *MarketingCampaignCreateDto) HasOffer() bool {
	if o != nil && o.Offer.IsSet() {
		return true
	}

	return false
}

// SetOffer gets a reference to the given NullableString and assigns it to the Offer field.
func (o *MarketingCampaignCreateDto) SetOffer(v string) {
	o.Offer.Set(&v)
}
// SetOfferNil sets the value for Offer to be an explicit nil
func (o *MarketingCampaignCreateDto) SetOfferNil() {
	o.Offer.Set(nil)
}

// UnsetOffer ensures that no value is present for Offer, not even an explicit nil
func (o *MarketingCampaignCreateDto) UnsetOffer() {
	o.Offer.Unset()
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *MarketingCampaignCreateDto) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingCampaignCreateDto) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *MarketingCampaignCreateDto) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *MarketingCampaignCreateDto) SetActive(v bool) {
	o.Active = &v
}

// GetProposedStart returns the ProposedStart field value if set, zero value otherwise.
func (o *MarketingCampaignCreateDto) GetProposedStart() time.Time {
	if o == nil || IsNil(o.ProposedStart) {
		var ret time.Time
		return ret
	}
	return *o.ProposedStart
}

// GetProposedStartOk returns a tuple with the ProposedStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingCampaignCreateDto) GetProposedStartOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ProposedStart) {
		return nil, false
	}
	return o.ProposedStart, true
}

// HasProposedStart returns a boolean if a field has been set.
func (o *MarketingCampaignCreateDto) HasProposedStart() bool {
	if o != nil && !IsNil(o.ProposedStart) {
		return true
	}

	return false
}

// SetProposedStart gets a reference to the given time.Time and assigns it to the ProposedStart field.
func (o *MarketingCampaignCreateDto) SetProposedStart(v time.Time) {
	o.ProposedStart = &v
}

// GetProposedEnd returns the ProposedEnd field value if set, zero value otherwise.
func (o *MarketingCampaignCreateDto) GetProposedEnd() time.Time {
	if o == nil || IsNil(o.ProposedEnd) {
		var ret time.Time
		return ret
	}
	return *o.ProposedEnd
}

// GetProposedEndOk returns a tuple with the ProposedEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingCampaignCreateDto) GetProposedEndOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ProposedEnd) {
		return nil, false
	}
	return o.ProposedEnd, true
}

// HasProposedEnd returns a boolean if a field has been set.
func (o *MarketingCampaignCreateDto) HasProposedEnd() bool {
	if o != nil && !IsNil(o.ProposedEnd) {
		return true
	}

	return false
}

// SetProposedEnd gets a reference to the given time.Time and assigns it to the ProposedEnd field.
func (o *MarketingCampaignCreateDto) SetProposedEnd(v time.Time) {
	o.ProposedEnd = &v
}

// GetActualStart returns the ActualStart field value if set, zero value otherwise.
func (o *MarketingCampaignCreateDto) GetActualStart() time.Time {
	if o == nil || IsNil(o.ActualStart) {
		var ret time.Time
		return ret
	}
	return *o.ActualStart
}

// GetActualStartOk returns a tuple with the ActualStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingCampaignCreateDto) GetActualStartOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ActualStart) {
		return nil, false
	}
	return o.ActualStart, true
}

// HasActualStart returns a boolean if a field has been set.
func (o *MarketingCampaignCreateDto) HasActualStart() bool {
	if o != nil && !IsNil(o.ActualStart) {
		return true
	}

	return false
}

// SetActualStart gets a reference to the given time.Time and assigns it to the ActualStart field.
func (o *MarketingCampaignCreateDto) SetActualStart(v time.Time) {
	o.ActualStart = &v
}

// GetActualEnd returns the ActualEnd field value if set, zero value otherwise.
func (o *MarketingCampaignCreateDto) GetActualEnd() time.Time {
	if o == nil || IsNil(o.ActualEnd) {
		var ret time.Time
		return ret
	}
	return *o.ActualEnd
}

// GetActualEndOk returns a tuple with the ActualEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingCampaignCreateDto) GetActualEndOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ActualEnd) {
		return nil, false
	}
	return o.ActualEnd, true
}

// HasActualEnd returns a boolean if a field has been set.
func (o *MarketingCampaignCreateDto) HasActualEnd() bool {
	if o != nil && !IsNil(o.ActualEnd) {
		return true
	}

	return false
}

// SetActualEnd gets a reference to the given time.Time and assigns it to the ActualEnd field.
func (o *MarketingCampaignCreateDto) SetActualEnd(v time.Time) {
	o.ActualEnd = &v
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MarketingCampaignCreateDto) GetCode() string {
	if o == nil || IsNil(o.Code.Get()) {
		var ret string
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MarketingCampaignCreateDto) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *MarketingCampaignCreateDto) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableString and assigns it to the Code field.
func (o *MarketingCampaignCreateDto) SetCode(v string) {
	o.Code.Set(&v)
}
// SetCodeNil sets the value for Code to be an explicit nil
func (o *MarketingCampaignCreateDto) SetCodeNil() {
	o.Code.Set(nil)
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *MarketingCampaignCreateDto) UnsetCode() {
	o.Code.Unset()
}

// GetAllocatedBudget returns the AllocatedBudget field value if set, zero value otherwise.
func (o *MarketingCampaignCreateDto) GetAllocatedBudget() float64 {
	if o == nil || IsNil(o.AllocatedBudget) {
		var ret float64
		return ret
	}
	return *o.AllocatedBudget
}

// GetAllocatedBudgetOk returns a tuple with the AllocatedBudget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingCampaignCreateDto) GetAllocatedBudgetOk() (*float64, bool) {
	if o == nil || IsNil(o.AllocatedBudget) {
		return nil, false
	}
	return o.AllocatedBudget, true
}

// HasAllocatedBudget returns a boolean if a field has been set.
func (o *MarketingCampaignCreateDto) HasAllocatedBudget() bool {
	if o != nil && !IsNil(o.AllocatedBudget) {
		return true
	}

	return false
}

// SetAllocatedBudget gets a reference to the given float64 and assigns it to the AllocatedBudget field.
func (o *MarketingCampaignCreateDto) SetAllocatedBudget(v float64) {
	o.AllocatedBudget = &v
}

// GetActivityCost returns the ActivityCost field value if set, zero value otherwise.
func (o *MarketingCampaignCreateDto) GetActivityCost() float64 {
	if o == nil || IsNil(o.ActivityCost) {
		var ret float64
		return ret
	}
	return *o.ActivityCost
}

// GetActivityCostOk returns a tuple with the ActivityCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingCampaignCreateDto) GetActivityCostOk() (*float64, bool) {
	if o == nil || IsNil(o.ActivityCost) {
		return nil, false
	}
	return o.ActivityCost, true
}

// HasActivityCost returns a boolean if a field has been set.
func (o *MarketingCampaignCreateDto) HasActivityCost() bool {
	if o != nil && !IsNil(o.ActivityCost) {
		return true
	}

	return false
}

// SetActivityCost gets a reference to the given float64 and assigns it to the ActivityCost field.
func (o *MarketingCampaignCreateDto) SetActivityCost(v float64) {
	o.ActivityCost = &v
}

// GetMiscCost returns the MiscCost field value if set, zero value otherwise.
func (o *MarketingCampaignCreateDto) GetMiscCost() float64 {
	if o == nil || IsNil(o.MiscCost) {
		var ret float64
		return ret
	}
	return *o.MiscCost
}

// GetMiscCostOk returns a tuple with the MiscCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingCampaignCreateDto) GetMiscCostOk() (*float64, bool) {
	if o == nil || IsNil(o.MiscCost) {
		return nil, false
	}
	return o.MiscCost, true
}

// HasMiscCost returns a boolean if a field has been set.
func (o *MarketingCampaignCreateDto) HasMiscCost() bool {
	if o != nil && !IsNil(o.MiscCost) {
		return true
	}

	return false
}

// SetMiscCost gets a reference to the given float64 and assigns it to the MiscCost field.
func (o *MarketingCampaignCreateDto) SetMiscCost(v float64) {
	o.MiscCost = &v
}

// GetExpectedResponsePercent returns the ExpectedResponsePercent field value if set, zero value otherwise.
func (o *MarketingCampaignCreateDto) GetExpectedResponsePercent() float64 {
	if o == nil || IsNil(o.ExpectedResponsePercent) {
		var ret float64
		return ret
	}
	return *o.ExpectedResponsePercent
}

// GetExpectedResponsePercentOk returns a tuple with the ExpectedResponsePercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingCampaignCreateDto) GetExpectedResponsePercentOk() (*float64, bool) {
	if o == nil || IsNil(o.ExpectedResponsePercent) {
		return nil, false
	}
	return o.ExpectedResponsePercent, true
}

// HasExpectedResponsePercent returns a boolean if a field has been set.
func (o *MarketingCampaignCreateDto) HasExpectedResponsePercent() bool {
	if o != nil && !IsNil(o.ExpectedResponsePercent) {
		return true
	}

	return false
}

// SetExpectedResponsePercent gets a reference to the given float64 and assigns it to the ExpectedResponsePercent field.
func (o *MarketingCampaignCreateDto) SetExpectedResponsePercent(v float64) {
	o.ExpectedResponsePercent = &v
}

// GetMarketingAreaId returns the MarketingAreaId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MarketingCampaignCreateDto) GetMarketingAreaId() string {
	if o == nil || IsNil(o.MarketingAreaId.Get()) {
		var ret string
		return ret
	}
	return *o.MarketingAreaId.Get()
}

// GetMarketingAreaIdOk returns a tuple with the MarketingAreaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MarketingCampaignCreateDto) GetMarketingAreaIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MarketingAreaId.Get(), o.MarketingAreaId.IsSet()
}

// HasMarketingAreaId returns a boolean if a field has been set.
func (o *MarketingCampaignCreateDto) HasMarketingAreaId() bool {
	if o != nil && o.MarketingAreaId.IsSet() {
		return true
	}

	return false
}

// SetMarketingAreaId gets a reference to the given NullableString and assigns it to the MarketingAreaId field.
func (o *MarketingCampaignCreateDto) SetMarketingAreaId(v string) {
	o.MarketingAreaId.Set(&v)
}
// SetMarketingAreaIdNil sets the value for MarketingAreaId to be an explicit nil
func (o *MarketingCampaignCreateDto) SetMarketingAreaIdNil() {
	o.MarketingAreaId.Set(nil)
}

// UnsetMarketingAreaId ensures that no value is present for MarketingAreaId, not even an explicit nil
func (o *MarketingCampaignCreateDto) UnsetMarketingAreaId() {
	o.MarketingAreaId.Unset()
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MarketingCampaignCreateDto) GetCurrencyId() string {
	if o == nil || IsNil(o.CurrencyId.Get()) {
		var ret string
		return ret
	}
	return *o.CurrencyId.Get()
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MarketingCampaignCreateDto) GetCurrencyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrencyId.Get(), o.CurrencyId.IsSet()
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *MarketingCampaignCreateDto) HasCurrencyId() bool {
	if o != nil && o.CurrencyId.IsSet() {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given NullableString and assigns it to the CurrencyId field.
func (o *MarketingCampaignCreateDto) SetCurrencyId(v string) {
	o.CurrencyId.Set(&v)
}
// SetCurrencyIdNil sets the value for CurrencyId to be an explicit nil
func (o *MarketingCampaignCreateDto) SetCurrencyIdNil() {
	o.CurrencyId.Set(nil)
}

// UnsetCurrencyId ensures that no value is present for CurrencyId, not even an explicit nil
func (o *MarketingCampaignCreateDto) UnsetCurrencyId() {
	o.CurrencyId.Unset()
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MarketingCampaignCreateDto) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MarketingCampaignCreateDto) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *MarketingCampaignCreateDto) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *MarketingCampaignCreateDto) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *MarketingCampaignCreateDto) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *MarketingCampaignCreateDto) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetEnrolmentId returns the EnrolmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MarketingCampaignCreateDto) GetEnrolmentId() string {
	if o == nil || IsNil(o.EnrolmentId.Get()) {
		var ret string
		return ret
	}
	return *o.EnrolmentId.Get()
}

// GetEnrolmentIdOk returns a tuple with the EnrolmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MarketingCampaignCreateDto) GetEnrolmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnrolmentId.Get(), o.EnrolmentId.IsSet()
}

// HasEnrolmentId returns a boolean if a field has been set.
func (o *MarketingCampaignCreateDto) HasEnrolmentId() bool {
	if o != nil && o.EnrolmentId.IsSet() {
		return true
	}

	return false
}

// SetEnrolmentId gets a reference to the given NullableString and assigns it to the EnrolmentId field.
func (o *MarketingCampaignCreateDto) SetEnrolmentId(v string) {
	o.EnrolmentId.Set(&v)
}
// SetEnrolmentIdNil sets the value for EnrolmentId to be an explicit nil
func (o *MarketingCampaignCreateDto) SetEnrolmentIdNil() {
	o.EnrolmentId.Set(nil)
}

// UnsetEnrolmentId ensures that no value is present for EnrolmentId, not even an explicit nil
func (o *MarketingCampaignCreateDto) UnsetEnrolmentId() {
	o.EnrolmentId.Unset()
}

func (o MarketingCampaignCreateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MarketingCampaignCreateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Offer.IsSet() {
		toSerialize["offer"] = o.Offer.Get()
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.ProposedStart) {
		toSerialize["proposedStart"] = o.ProposedStart
	}
	if !IsNil(o.ProposedEnd) {
		toSerialize["proposedEnd"] = o.ProposedEnd
	}
	if !IsNil(o.ActualStart) {
		toSerialize["actualStart"] = o.ActualStart
	}
	if !IsNil(o.ActualEnd) {
		toSerialize["actualEnd"] = o.ActualEnd
	}
	if o.Code.IsSet() {
		toSerialize["code"] = o.Code.Get()
	}
	if !IsNil(o.AllocatedBudget) {
		toSerialize["allocatedBudget"] = o.AllocatedBudget
	}
	if !IsNil(o.ActivityCost) {
		toSerialize["activityCost"] = o.ActivityCost
	}
	if !IsNil(o.MiscCost) {
		toSerialize["miscCost"] = o.MiscCost
	}
	if !IsNil(o.ExpectedResponsePercent) {
		toSerialize["expectedResponsePercent"] = o.ExpectedResponsePercent
	}
	if o.MarketingAreaId.IsSet() {
		toSerialize["marketingAreaId"] = o.MarketingAreaId.Get()
	}
	if o.CurrencyId.IsSet() {
		toSerialize["currencyId"] = o.CurrencyId.Get()
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.EnrolmentId.IsSet() {
		toSerialize["enrolmentId"] = o.EnrolmentId.Get()
	}
	return toSerialize, nil
}

type NullableMarketingCampaignCreateDto struct {
	value *MarketingCampaignCreateDto
	isSet bool
}

func (v NullableMarketingCampaignCreateDto) Get() *MarketingCampaignCreateDto {
	return v.value
}

func (v *NullableMarketingCampaignCreateDto) Set(val *MarketingCampaignCreateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketingCampaignCreateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketingCampaignCreateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketingCampaignCreateDto(val *MarketingCampaignCreateDto) *NullableMarketingCampaignCreateDto {
	return &NullableMarketingCampaignCreateDto{value: val, isSet: true}
}

func (v NullableMarketingCampaignCreateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketingCampaignCreateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


