/*
MarketingService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the EmailTemplateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmailTemplateDto{}

// EmailTemplateDto struct for EmailTemplateDto
type EmailTemplateDto struct {
	Id NullableString `json:"id,omitempty"`
	Timestamp NullableTime `json:"timestamp,omitempty"`
	Order *int32 `json:"order,omitempty"`
	Slug NullableString `json:"slug,omitempty"`
	Name NullableString `json:"name,omitempty"`
	Title NullableString `json:"title,omitempty"`
	Excerpt NullableString `json:"excerpt,omitempty"`
	Password NullableString `json:"password,omitempty"`
	Description NullableString `json:"description,omitempty"`
	HighlightImage NullableString `json:"highlightImage,omitempty"`
	CanonicalUrl NullableString `json:"canonicalUrl,omitempty"`
	SeoTitle NullableString `json:"seoTitle,omitempty"`
	SeoKeyWords NullableString `json:"seoKeyWords,omitempty"`
	SeoKeyPhrases NullableString `json:"seoKeyPhrases,omitempty"`
	MetaDescription NullableString `json:"metaDescription,omitempty"`
	TwitterImage NullableString `json:"twitterImage,omitempty"`
	TwitterTitle NullableString `json:"twitterTitle,omitempty"`
	TwitterDescription NullableString `json:"twitterDescription,omitempty"`
	FacebookImage NullableString `json:"facebookImage,omitempty"`
	FacebookTitle NullableString `json:"facebookTitle,omitempty"`
	FacebookDescription NullableString `json:"facebookDescription,omitempty"`
	FeaturedImageUrl NullableString `json:"featuredImageUrl,omitempty"`
	Content NullableString `json:"content,omitempty"`
	Code NullableString `json:"code,omitempty"`
	Namespace NullableString `json:"namespace,omitempty"`
	TypeName NullableString `json:"typeName,omitempty"`
	GeneratedCode NullableString `json:"generatedCode,omitempty"`
	CompilationPath NullableString `json:"compilationPath,omitempty"`
	HtmlContent NullableString `json:"htmlContent,omitempty"`
	CSharpContent NullableString `json:"cSharpContent,omitempty"`
	RazorContent NullableString `json:"razorContent,omitempty"`
	CssContent NullableString `json:"cssContent,omitempty"`
	JsContent NullableString `json:"jsContent,omitempty"`
	CssFiles NullableString `json:"cssFiles,omitempty"`
	JsFiles NullableString `json:"jsFiles,omitempty"`
	RazorGeneratedCode NullableString `json:"razorGeneratedCode,omitempty"`
	CSharpGeneratedCode NullableString `json:"cSharpGeneratedCode,omitempty"`
	Template *bool `json:"template,omitempty"`
	Default *bool `json:"default,omitempty"`
	Enable *bool `json:"enable,omitempty"`
	EnableComments *bool `json:"enableComments,omitempty"`
	DisplaySocialBox *bool `json:"displaySocialBox,omitempty"`
	Published *bool `json:"published,omitempty"`
	InTrashCan *bool `json:"inTrashCan,omitempty"`
	SystemLocked *bool `json:"systemLocked,omitempty"`
	AllowPingBacks *bool `json:"allowPingBacks,omitempty"`
	AllowTrackbacks *bool `json:"allowTrackbacks,omitempty"`
	CornerstoneContent *bool `json:"cornerstoneContent,omitempty"`
	IsEssentialContent *bool `json:"isEssentialContent,omitempty"`
	AllowSearchEngineIndexing *bool `json:"allowSearchEngineIndexing,omitempty"`
	TenantId NullableString `json:"tenantId,omitempty"`
	WebPortalId NullableString `json:"webPortalId,omitempty"`
	WebsiteThemeId NullableString `json:"websiteThemeId,omitempty"`
	EnrollmentId NullableString `json:"enrollmentId,omitempty"`
	SocialProfileId NullableString `json:"socialProfileId,omitempty"`
	ParentWebContentId NullableString `json:"parentWebContentId,omitempty"`
	ParentWebContentVersionId NullableString `json:"parentWebContentVersionId,omitempty"`
	MarketingCampaignId NullableString `json:"marketingCampaignId,omitempty"`
	MarketingCampaignName NullableString `json:"marketingCampaignName,omitempty"`
}

// NewEmailTemplateDto instantiates a new EmailTemplateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailTemplateDto() *EmailTemplateDto {
	this := EmailTemplateDto{}
	return &this
}

// NewEmailTemplateDtoWithDefaults instantiates a new EmailTemplateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailTemplateDtoWithDefaults() *EmailTemplateDto {
	this := EmailTemplateDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *EmailTemplateDto) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *EmailTemplateDto) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *EmailTemplateDto) UnsetId() {
	o.Id.Unset()
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp.Get()
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timestamp.Get(), o.Timestamp.IsSet()
}

// HasTimestamp returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasTimestamp() bool {
	if o != nil && o.Timestamp.IsSet() {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given NullableTime and assigns it to the Timestamp field.
func (o *EmailTemplateDto) SetTimestamp(v time.Time) {
	o.Timestamp.Set(&v)
}
// SetTimestampNil sets the value for Timestamp to be an explicit nil
func (o *EmailTemplateDto) SetTimestampNil() {
	o.Timestamp.Set(nil)
}

// UnsetTimestamp ensures that no value is present for Timestamp, not even an explicit nil
func (o *EmailTemplateDto) UnsetTimestamp() {
	o.Timestamp.Unset()
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *EmailTemplateDto) GetOrder() int32 {
	if o == nil || IsNil(o.Order) {
		var ret int32
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailTemplateDto) GetOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int32 and assigns it to the Order field.
func (o *EmailTemplateDto) SetOrder(v int32) {
	o.Order = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetSlug() string {
	if o == nil || IsNil(o.Slug.Get()) {
		var ret string
		return ret
	}
	return *o.Slug.Get()
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Slug.Get(), o.Slug.IsSet()
}

// HasSlug returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasSlug() bool {
	if o != nil && o.Slug.IsSet() {
		return true
	}

	return false
}

// SetSlug gets a reference to the given NullableString and assigns it to the Slug field.
func (o *EmailTemplateDto) SetSlug(v string) {
	o.Slug.Set(&v)
}
// SetSlugNil sets the value for Slug to be an explicit nil
func (o *EmailTemplateDto) SetSlugNil() {
	o.Slug.Set(nil)
}

// UnsetSlug ensures that no value is present for Slug, not even an explicit nil
func (o *EmailTemplateDto) UnsetSlug() {
	o.Slug.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *EmailTemplateDto) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *EmailTemplateDto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *EmailTemplateDto) UnsetName() {
	o.Name.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *EmailTemplateDto) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *EmailTemplateDto) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *EmailTemplateDto) UnsetTitle() {
	o.Title.Unset()
}

// GetExcerpt returns the Excerpt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetExcerpt() string {
	if o == nil || IsNil(o.Excerpt.Get()) {
		var ret string
		return ret
	}
	return *o.Excerpt.Get()
}

// GetExcerptOk returns a tuple with the Excerpt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetExcerptOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Excerpt.Get(), o.Excerpt.IsSet()
}

// HasExcerpt returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasExcerpt() bool {
	if o != nil && o.Excerpt.IsSet() {
		return true
	}

	return false
}

// SetExcerpt gets a reference to the given NullableString and assigns it to the Excerpt field.
func (o *EmailTemplateDto) SetExcerpt(v string) {
	o.Excerpt.Set(&v)
}
// SetExcerptNil sets the value for Excerpt to be an explicit nil
func (o *EmailTemplateDto) SetExcerptNil() {
	o.Excerpt.Set(nil)
}

// UnsetExcerpt ensures that no value is present for Excerpt, not even an explicit nil
func (o *EmailTemplateDto) UnsetExcerpt() {
	o.Excerpt.Unset()
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetPassword() string {
	if o == nil || IsNil(o.Password.Get()) {
		var ret string
		return ret
	}
	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// HasPassword returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasPassword() bool {
	if o != nil && o.Password.IsSet() {
		return true
	}

	return false
}

// SetPassword gets a reference to the given NullableString and assigns it to the Password field.
func (o *EmailTemplateDto) SetPassword(v string) {
	o.Password.Set(&v)
}
// SetPasswordNil sets the value for Password to be an explicit nil
func (o *EmailTemplateDto) SetPasswordNil() {
	o.Password.Set(nil)
}

// UnsetPassword ensures that no value is present for Password, not even an explicit nil
func (o *EmailTemplateDto) UnsetPassword() {
	o.Password.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *EmailTemplateDto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *EmailTemplateDto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *EmailTemplateDto) UnsetDescription() {
	o.Description.Unset()
}

// GetHighlightImage returns the HighlightImage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetHighlightImage() string {
	if o == nil || IsNil(o.HighlightImage.Get()) {
		var ret string
		return ret
	}
	return *o.HighlightImage.Get()
}

// GetHighlightImageOk returns a tuple with the HighlightImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetHighlightImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HighlightImage.Get(), o.HighlightImage.IsSet()
}

// HasHighlightImage returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasHighlightImage() bool {
	if o != nil && o.HighlightImage.IsSet() {
		return true
	}

	return false
}

// SetHighlightImage gets a reference to the given NullableString and assigns it to the HighlightImage field.
func (o *EmailTemplateDto) SetHighlightImage(v string) {
	o.HighlightImage.Set(&v)
}
// SetHighlightImageNil sets the value for HighlightImage to be an explicit nil
func (o *EmailTemplateDto) SetHighlightImageNil() {
	o.HighlightImage.Set(nil)
}

// UnsetHighlightImage ensures that no value is present for HighlightImage, not even an explicit nil
func (o *EmailTemplateDto) UnsetHighlightImage() {
	o.HighlightImage.Unset()
}

// GetCanonicalUrl returns the CanonicalUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetCanonicalUrl() string {
	if o == nil || IsNil(o.CanonicalUrl.Get()) {
		var ret string
		return ret
	}
	return *o.CanonicalUrl.Get()
}

// GetCanonicalUrlOk returns a tuple with the CanonicalUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetCanonicalUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CanonicalUrl.Get(), o.CanonicalUrl.IsSet()
}

// HasCanonicalUrl returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasCanonicalUrl() bool {
	if o != nil && o.CanonicalUrl.IsSet() {
		return true
	}

	return false
}

// SetCanonicalUrl gets a reference to the given NullableString and assigns it to the CanonicalUrl field.
func (o *EmailTemplateDto) SetCanonicalUrl(v string) {
	o.CanonicalUrl.Set(&v)
}
// SetCanonicalUrlNil sets the value for CanonicalUrl to be an explicit nil
func (o *EmailTemplateDto) SetCanonicalUrlNil() {
	o.CanonicalUrl.Set(nil)
}

// UnsetCanonicalUrl ensures that no value is present for CanonicalUrl, not even an explicit nil
func (o *EmailTemplateDto) UnsetCanonicalUrl() {
	o.CanonicalUrl.Unset()
}

// GetSeoTitle returns the SeoTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetSeoTitle() string {
	if o == nil || IsNil(o.SeoTitle.Get()) {
		var ret string
		return ret
	}
	return *o.SeoTitle.Get()
}

// GetSeoTitleOk returns a tuple with the SeoTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetSeoTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeoTitle.Get(), o.SeoTitle.IsSet()
}

// HasSeoTitle returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasSeoTitle() bool {
	if o != nil && o.SeoTitle.IsSet() {
		return true
	}

	return false
}

// SetSeoTitle gets a reference to the given NullableString and assigns it to the SeoTitle field.
func (o *EmailTemplateDto) SetSeoTitle(v string) {
	o.SeoTitle.Set(&v)
}
// SetSeoTitleNil sets the value for SeoTitle to be an explicit nil
func (o *EmailTemplateDto) SetSeoTitleNil() {
	o.SeoTitle.Set(nil)
}

// UnsetSeoTitle ensures that no value is present for SeoTitle, not even an explicit nil
func (o *EmailTemplateDto) UnsetSeoTitle() {
	o.SeoTitle.Unset()
}

// GetSeoKeyWords returns the SeoKeyWords field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetSeoKeyWords() string {
	if o == nil || IsNil(o.SeoKeyWords.Get()) {
		var ret string
		return ret
	}
	return *o.SeoKeyWords.Get()
}

// GetSeoKeyWordsOk returns a tuple with the SeoKeyWords field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetSeoKeyWordsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeoKeyWords.Get(), o.SeoKeyWords.IsSet()
}

// HasSeoKeyWords returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasSeoKeyWords() bool {
	if o != nil && o.SeoKeyWords.IsSet() {
		return true
	}

	return false
}

// SetSeoKeyWords gets a reference to the given NullableString and assigns it to the SeoKeyWords field.
func (o *EmailTemplateDto) SetSeoKeyWords(v string) {
	o.SeoKeyWords.Set(&v)
}
// SetSeoKeyWordsNil sets the value for SeoKeyWords to be an explicit nil
func (o *EmailTemplateDto) SetSeoKeyWordsNil() {
	o.SeoKeyWords.Set(nil)
}

// UnsetSeoKeyWords ensures that no value is present for SeoKeyWords, not even an explicit nil
func (o *EmailTemplateDto) UnsetSeoKeyWords() {
	o.SeoKeyWords.Unset()
}

// GetSeoKeyPhrases returns the SeoKeyPhrases field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetSeoKeyPhrases() string {
	if o == nil || IsNil(o.SeoKeyPhrases.Get()) {
		var ret string
		return ret
	}
	return *o.SeoKeyPhrases.Get()
}

// GetSeoKeyPhrasesOk returns a tuple with the SeoKeyPhrases field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetSeoKeyPhrasesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeoKeyPhrases.Get(), o.SeoKeyPhrases.IsSet()
}

// HasSeoKeyPhrases returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasSeoKeyPhrases() bool {
	if o != nil && o.SeoKeyPhrases.IsSet() {
		return true
	}

	return false
}

// SetSeoKeyPhrases gets a reference to the given NullableString and assigns it to the SeoKeyPhrases field.
func (o *EmailTemplateDto) SetSeoKeyPhrases(v string) {
	o.SeoKeyPhrases.Set(&v)
}
// SetSeoKeyPhrasesNil sets the value for SeoKeyPhrases to be an explicit nil
func (o *EmailTemplateDto) SetSeoKeyPhrasesNil() {
	o.SeoKeyPhrases.Set(nil)
}

// UnsetSeoKeyPhrases ensures that no value is present for SeoKeyPhrases, not even an explicit nil
func (o *EmailTemplateDto) UnsetSeoKeyPhrases() {
	o.SeoKeyPhrases.Unset()
}

// GetMetaDescription returns the MetaDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetMetaDescription() string {
	if o == nil || IsNil(o.MetaDescription.Get()) {
		var ret string
		return ret
	}
	return *o.MetaDescription.Get()
}

// GetMetaDescriptionOk returns a tuple with the MetaDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetMetaDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetaDescription.Get(), o.MetaDescription.IsSet()
}

// HasMetaDescription returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasMetaDescription() bool {
	if o != nil && o.MetaDescription.IsSet() {
		return true
	}

	return false
}

// SetMetaDescription gets a reference to the given NullableString and assigns it to the MetaDescription field.
func (o *EmailTemplateDto) SetMetaDescription(v string) {
	o.MetaDescription.Set(&v)
}
// SetMetaDescriptionNil sets the value for MetaDescription to be an explicit nil
func (o *EmailTemplateDto) SetMetaDescriptionNil() {
	o.MetaDescription.Set(nil)
}

// UnsetMetaDescription ensures that no value is present for MetaDescription, not even an explicit nil
func (o *EmailTemplateDto) UnsetMetaDescription() {
	o.MetaDescription.Unset()
}

// GetTwitterImage returns the TwitterImage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetTwitterImage() string {
	if o == nil || IsNil(o.TwitterImage.Get()) {
		var ret string
		return ret
	}
	return *o.TwitterImage.Get()
}

// GetTwitterImageOk returns a tuple with the TwitterImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetTwitterImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TwitterImage.Get(), o.TwitterImage.IsSet()
}

// HasTwitterImage returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasTwitterImage() bool {
	if o != nil && o.TwitterImage.IsSet() {
		return true
	}

	return false
}

// SetTwitterImage gets a reference to the given NullableString and assigns it to the TwitterImage field.
func (o *EmailTemplateDto) SetTwitterImage(v string) {
	o.TwitterImage.Set(&v)
}
// SetTwitterImageNil sets the value for TwitterImage to be an explicit nil
func (o *EmailTemplateDto) SetTwitterImageNil() {
	o.TwitterImage.Set(nil)
}

// UnsetTwitterImage ensures that no value is present for TwitterImage, not even an explicit nil
func (o *EmailTemplateDto) UnsetTwitterImage() {
	o.TwitterImage.Unset()
}

// GetTwitterTitle returns the TwitterTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetTwitterTitle() string {
	if o == nil || IsNil(o.TwitterTitle.Get()) {
		var ret string
		return ret
	}
	return *o.TwitterTitle.Get()
}

// GetTwitterTitleOk returns a tuple with the TwitterTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetTwitterTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TwitterTitle.Get(), o.TwitterTitle.IsSet()
}

// HasTwitterTitle returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasTwitterTitle() bool {
	if o != nil && o.TwitterTitle.IsSet() {
		return true
	}

	return false
}

// SetTwitterTitle gets a reference to the given NullableString and assigns it to the TwitterTitle field.
func (o *EmailTemplateDto) SetTwitterTitle(v string) {
	o.TwitterTitle.Set(&v)
}
// SetTwitterTitleNil sets the value for TwitterTitle to be an explicit nil
func (o *EmailTemplateDto) SetTwitterTitleNil() {
	o.TwitterTitle.Set(nil)
}

// UnsetTwitterTitle ensures that no value is present for TwitterTitle, not even an explicit nil
func (o *EmailTemplateDto) UnsetTwitterTitle() {
	o.TwitterTitle.Unset()
}

// GetTwitterDescription returns the TwitterDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetTwitterDescription() string {
	if o == nil || IsNil(o.TwitterDescription.Get()) {
		var ret string
		return ret
	}
	return *o.TwitterDescription.Get()
}

// GetTwitterDescriptionOk returns a tuple with the TwitterDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetTwitterDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TwitterDescription.Get(), o.TwitterDescription.IsSet()
}

// HasTwitterDescription returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasTwitterDescription() bool {
	if o != nil && o.TwitterDescription.IsSet() {
		return true
	}

	return false
}

// SetTwitterDescription gets a reference to the given NullableString and assigns it to the TwitterDescription field.
func (o *EmailTemplateDto) SetTwitterDescription(v string) {
	o.TwitterDescription.Set(&v)
}
// SetTwitterDescriptionNil sets the value for TwitterDescription to be an explicit nil
func (o *EmailTemplateDto) SetTwitterDescriptionNil() {
	o.TwitterDescription.Set(nil)
}

// UnsetTwitterDescription ensures that no value is present for TwitterDescription, not even an explicit nil
func (o *EmailTemplateDto) UnsetTwitterDescription() {
	o.TwitterDescription.Unset()
}

// GetFacebookImage returns the FacebookImage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetFacebookImage() string {
	if o == nil || IsNil(o.FacebookImage.Get()) {
		var ret string
		return ret
	}
	return *o.FacebookImage.Get()
}

// GetFacebookImageOk returns a tuple with the FacebookImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetFacebookImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FacebookImage.Get(), o.FacebookImage.IsSet()
}

// HasFacebookImage returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasFacebookImage() bool {
	if o != nil && o.FacebookImage.IsSet() {
		return true
	}

	return false
}

// SetFacebookImage gets a reference to the given NullableString and assigns it to the FacebookImage field.
func (o *EmailTemplateDto) SetFacebookImage(v string) {
	o.FacebookImage.Set(&v)
}
// SetFacebookImageNil sets the value for FacebookImage to be an explicit nil
func (o *EmailTemplateDto) SetFacebookImageNil() {
	o.FacebookImage.Set(nil)
}

// UnsetFacebookImage ensures that no value is present for FacebookImage, not even an explicit nil
func (o *EmailTemplateDto) UnsetFacebookImage() {
	o.FacebookImage.Unset()
}

// GetFacebookTitle returns the FacebookTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetFacebookTitle() string {
	if o == nil || IsNil(o.FacebookTitle.Get()) {
		var ret string
		return ret
	}
	return *o.FacebookTitle.Get()
}

// GetFacebookTitleOk returns a tuple with the FacebookTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetFacebookTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FacebookTitle.Get(), o.FacebookTitle.IsSet()
}

// HasFacebookTitle returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasFacebookTitle() bool {
	if o != nil && o.FacebookTitle.IsSet() {
		return true
	}

	return false
}

// SetFacebookTitle gets a reference to the given NullableString and assigns it to the FacebookTitle field.
func (o *EmailTemplateDto) SetFacebookTitle(v string) {
	o.FacebookTitle.Set(&v)
}
// SetFacebookTitleNil sets the value for FacebookTitle to be an explicit nil
func (o *EmailTemplateDto) SetFacebookTitleNil() {
	o.FacebookTitle.Set(nil)
}

// UnsetFacebookTitle ensures that no value is present for FacebookTitle, not even an explicit nil
func (o *EmailTemplateDto) UnsetFacebookTitle() {
	o.FacebookTitle.Unset()
}

// GetFacebookDescription returns the FacebookDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetFacebookDescription() string {
	if o == nil || IsNil(o.FacebookDescription.Get()) {
		var ret string
		return ret
	}
	return *o.FacebookDescription.Get()
}

// GetFacebookDescriptionOk returns a tuple with the FacebookDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetFacebookDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FacebookDescription.Get(), o.FacebookDescription.IsSet()
}

// HasFacebookDescription returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasFacebookDescription() bool {
	if o != nil && o.FacebookDescription.IsSet() {
		return true
	}

	return false
}

// SetFacebookDescription gets a reference to the given NullableString and assigns it to the FacebookDescription field.
func (o *EmailTemplateDto) SetFacebookDescription(v string) {
	o.FacebookDescription.Set(&v)
}
// SetFacebookDescriptionNil sets the value for FacebookDescription to be an explicit nil
func (o *EmailTemplateDto) SetFacebookDescriptionNil() {
	o.FacebookDescription.Set(nil)
}

// UnsetFacebookDescription ensures that no value is present for FacebookDescription, not even an explicit nil
func (o *EmailTemplateDto) UnsetFacebookDescription() {
	o.FacebookDescription.Unset()
}

// GetFeaturedImageUrl returns the FeaturedImageUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetFeaturedImageUrl() string {
	if o == nil || IsNil(o.FeaturedImageUrl.Get()) {
		var ret string
		return ret
	}
	return *o.FeaturedImageUrl.Get()
}

// GetFeaturedImageUrlOk returns a tuple with the FeaturedImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetFeaturedImageUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FeaturedImageUrl.Get(), o.FeaturedImageUrl.IsSet()
}

// HasFeaturedImageUrl returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasFeaturedImageUrl() bool {
	if o != nil && o.FeaturedImageUrl.IsSet() {
		return true
	}

	return false
}

// SetFeaturedImageUrl gets a reference to the given NullableString and assigns it to the FeaturedImageUrl field.
func (o *EmailTemplateDto) SetFeaturedImageUrl(v string) {
	o.FeaturedImageUrl.Set(&v)
}
// SetFeaturedImageUrlNil sets the value for FeaturedImageUrl to be an explicit nil
func (o *EmailTemplateDto) SetFeaturedImageUrlNil() {
	o.FeaturedImageUrl.Set(nil)
}

// UnsetFeaturedImageUrl ensures that no value is present for FeaturedImageUrl, not even an explicit nil
func (o *EmailTemplateDto) UnsetFeaturedImageUrl() {
	o.FeaturedImageUrl.Unset()
}

// GetContent returns the Content field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetContent() string {
	if o == nil || IsNil(o.Content.Get()) {
		var ret string
		return ret
	}
	return *o.Content.Get()
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Content.Get(), o.Content.IsSet()
}

// HasContent returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasContent() bool {
	if o != nil && o.Content.IsSet() {
		return true
	}

	return false
}

// SetContent gets a reference to the given NullableString and assigns it to the Content field.
func (o *EmailTemplateDto) SetContent(v string) {
	o.Content.Set(&v)
}
// SetContentNil sets the value for Content to be an explicit nil
func (o *EmailTemplateDto) SetContentNil() {
	o.Content.Set(nil)
}

// UnsetContent ensures that no value is present for Content, not even an explicit nil
func (o *EmailTemplateDto) UnsetContent() {
	o.Content.Unset()
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetCode() string {
	if o == nil || IsNil(o.Code.Get()) {
		var ret string
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableString and assigns it to the Code field.
func (o *EmailTemplateDto) SetCode(v string) {
	o.Code.Set(&v)
}
// SetCodeNil sets the value for Code to be an explicit nil
func (o *EmailTemplateDto) SetCodeNil() {
	o.Code.Set(nil)
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *EmailTemplateDto) UnsetCode() {
	o.Code.Unset()
}

// GetNamespace returns the Namespace field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetNamespace() string {
	if o == nil || IsNil(o.Namespace.Get()) {
		var ret string
		return ret
	}
	return *o.Namespace.Get()
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Namespace.Get(), o.Namespace.IsSet()
}

// HasNamespace returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasNamespace() bool {
	if o != nil && o.Namespace.IsSet() {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given NullableString and assigns it to the Namespace field.
func (o *EmailTemplateDto) SetNamespace(v string) {
	o.Namespace.Set(&v)
}
// SetNamespaceNil sets the value for Namespace to be an explicit nil
func (o *EmailTemplateDto) SetNamespaceNil() {
	o.Namespace.Set(nil)
}

// UnsetNamespace ensures that no value is present for Namespace, not even an explicit nil
func (o *EmailTemplateDto) UnsetNamespace() {
	o.Namespace.Unset()
}

// GetTypeName returns the TypeName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetTypeName() string {
	if o == nil || IsNil(o.TypeName.Get()) {
		var ret string
		return ret
	}
	return *o.TypeName.Get()
}

// GetTypeNameOk returns a tuple with the TypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetTypeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TypeName.Get(), o.TypeName.IsSet()
}

// HasTypeName returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasTypeName() bool {
	if o != nil && o.TypeName.IsSet() {
		return true
	}

	return false
}

// SetTypeName gets a reference to the given NullableString and assigns it to the TypeName field.
func (o *EmailTemplateDto) SetTypeName(v string) {
	o.TypeName.Set(&v)
}
// SetTypeNameNil sets the value for TypeName to be an explicit nil
func (o *EmailTemplateDto) SetTypeNameNil() {
	o.TypeName.Set(nil)
}

// UnsetTypeName ensures that no value is present for TypeName, not even an explicit nil
func (o *EmailTemplateDto) UnsetTypeName() {
	o.TypeName.Unset()
}

// GetGeneratedCode returns the GeneratedCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetGeneratedCode() string {
	if o == nil || IsNil(o.GeneratedCode.Get()) {
		var ret string
		return ret
	}
	return *o.GeneratedCode.Get()
}

// GetGeneratedCodeOk returns a tuple with the GeneratedCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetGeneratedCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GeneratedCode.Get(), o.GeneratedCode.IsSet()
}

// HasGeneratedCode returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasGeneratedCode() bool {
	if o != nil && o.GeneratedCode.IsSet() {
		return true
	}

	return false
}

// SetGeneratedCode gets a reference to the given NullableString and assigns it to the GeneratedCode field.
func (o *EmailTemplateDto) SetGeneratedCode(v string) {
	o.GeneratedCode.Set(&v)
}
// SetGeneratedCodeNil sets the value for GeneratedCode to be an explicit nil
func (o *EmailTemplateDto) SetGeneratedCodeNil() {
	o.GeneratedCode.Set(nil)
}

// UnsetGeneratedCode ensures that no value is present for GeneratedCode, not even an explicit nil
func (o *EmailTemplateDto) UnsetGeneratedCode() {
	o.GeneratedCode.Unset()
}

// GetCompilationPath returns the CompilationPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetCompilationPath() string {
	if o == nil || IsNil(o.CompilationPath.Get()) {
		var ret string
		return ret
	}
	return *o.CompilationPath.Get()
}

// GetCompilationPathOk returns a tuple with the CompilationPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetCompilationPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompilationPath.Get(), o.CompilationPath.IsSet()
}

// HasCompilationPath returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasCompilationPath() bool {
	if o != nil && o.CompilationPath.IsSet() {
		return true
	}

	return false
}

// SetCompilationPath gets a reference to the given NullableString and assigns it to the CompilationPath field.
func (o *EmailTemplateDto) SetCompilationPath(v string) {
	o.CompilationPath.Set(&v)
}
// SetCompilationPathNil sets the value for CompilationPath to be an explicit nil
func (o *EmailTemplateDto) SetCompilationPathNil() {
	o.CompilationPath.Set(nil)
}

// UnsetCompilationPath ensures that no value is present for CompilationPath, not even an explicit nil
func (o *EmailTemplateDto) UnsetCompilationPath() {
	o.CompilationPath.Unset()
}

// GetHtmlContent returns the HtmlContent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetHtmlContent() string {
	if o == nil || IsNil(o.HtmlContent.Get()) {
		var ret string
		return ret
	}
	return *o.HtmlContent.Get()
}

// GetHtmlContentOk returns a tuple with the HtmlContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetHtmlContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HtmlContent.Get(), o.HtmlContent.IsSet()
}

// HasHtmlContent returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasHtmlContent() bool {
	if o != nil && o.HtmlContent.IsSet() {
		return true
	}

	return false
}

// SetHtmlContent gets a reference to the given NullableString and assigns it to the HtmlContent field.
func (o *EmailTemplateDto) SetHtmlContent(v string) {
	o.HtmlContent.Set(&v)
}
// SetHtmlContentNil sets the value for HtmlContent to be an explicit nil
func (o *EmailTemplateDto) SetHtmlContentNil() {
	o.HtmlContent.Set(nil)
}

// UnsetHtmlContent ensures that no value is present for HtmlContent, not even an explicit nil
func (o *EmailTemplateDto) UnsetHtmlContent() {
	o.HtmlContent.Unset()
}

// GetCSharpContent returns the CSharpContent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetCSharpContent() string {
	if o == nil || IsNil(o.CSharpContent.Get()) {
		var ret string
		return ret
	}
	return *o.CSharpContent.Get()
}

// GetCSharpContentOk returns a tuple with the CSharpContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetCSharpContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CSharpContent.Get(), o.CSharpContent.IsSet()
}

// HasCSharpContent returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasCSharpContent() bool {
	if o != nil && o.CSharpContent.IsSet() {
		return true
	}

	return false
}

// SetCSharpContent gets a reference to the given NullableString and assigns it to the CSharpContent field.
func (o *EmailTemplateDto) SetCSharpContent(v string) {
	o.CSharpContent.Set(&v)
}
// SetCSharpContentNil sets the value for CSharpContent to be an explicit nil
func (o *EmailTemplateDto) SetCSharpContentNil() {
	o.CSharpContent.Set(nil)
}

// UnsetCSharpContent ensures that no value is present for CSharpContent, not even an explicit nil
func (o *EmailTemplateDto) UnsetCSharpContent() {
	o.CSharpContent.Unset()
}

// GetRazorContent returns the RazorContent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetRazorContent() string {
	if o == nil || IsNil(o.RazorContent.Get()) {
		var ret string
		return ret
	}
	return *o.RazorContent.Get()
}

// GetRazorContentOk returns a tuple with the RazorContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetRazorContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RazorContent.Get(), o.RazorContent.IsSet()
}

// HasRazorContent returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasRazorContent() bool {
	if o != nil && o.RazorContent.IsSet() {
		return true
	}

	return false
}

// SetRazorContent gets a reference to the given NullableString and assigns it to the RazorContent field.
func (o *EmailTemplateDto) SetRazorContent(v string) {
	o.RazorContent.Set(&v)
}
// SetRazorContentNil sets the value for RazorContent to be an explicit nil
func (o *EmailTemplateDto) SetRazorContentNil() {
	o.RazorContent.Set(nil)
}

// UnsetRazorContent ensures that no value is present for RazorContent, not even an explicit nil
func (o *EmailTemplateDto) UnsetRazorContent() {
	o.RazorContent.Unset()
}

// GetCssContent returns the CssContent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetCssContent() string {
	if o == nil || IsNil(o.CssContent.Get()) {
		var ret string
		return ret
	}
	return *o.CssContent.Get()
}

// GetCssContentOk returns a tuple with the CssContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetCssContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CssContent.Get(), o.CssContent.IsSet()
}

// HasCssContent returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasCssContent() bool {
	if o != nil && o.CssContent.IsSet() {
		return true
	}

	return false
}

// SetCssContent gets a reference to the given NullableString and assigns it to the CssContent field.
func (o *EmailTemplateDto) SetCssContent(v string) {
	o.CssContent.Set(&v)
}
// SetCssContentNil sets the value for CssContent to be an explicit nil
func (o *EmailTemplateDto) SetCssContentNil() {
	o.CssContent.Set(nil)
}

// UnsetCssContent ensures that no value is present for CssContent, not even an explicit nil
func (o *EmailTemplateDto) UnsetCssContent() {
	o.CssContent.Unset()
}

// GetJsContent returns the JsContent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetJsContent() string {
	if o == nil || IsNil(o.JsContent.Get()) {
		var ret string
		return ret
	}
	return *o.JsContent.Get()
}

// GetJsContentOk returns a tuple with the JsContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetJsContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.JsContent.Get(), o.JsContent.IsSet()
}

// HasJsContent returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasJsContent() bool {
	if o != nil && o.JsContent.IsSet() {
		return true
	}

	return false
}

// SetJsContent gets a reference to the given NullableString and assigns it to the JsContent field.
func (o *EmailTemplateDto) SetJsContent(v string) {
	o.JsContent.Set(&v)
}
// SetJsContentNil sets the value for JsContent to be an explicit nil
func (o *EmailTemplateDto) SetJsContentNil() {
	o.JsContent.Set(nil)
}

// UnsetJsContent ensures that no value is present for JsContent, not even an explicit nil
func (o *EmailTemplateDto) UnsetJsContent() {
	o.JsContent.Unset()
}

// GetCssFiles returns the CssFiles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetCssFiles() string {
	if o == nil || IsNil(o.CssFiles.Get()) {
		var ret string
		return ret
	}
	return *o.CssFiles.Get()
}

// GetCssFilesOk returns a tuple with the CssFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetCssFilesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CssFiles.Get(), o.CssFiles.IsSet()
}

// HasCssFiles returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasCssFiles() bool {
	if o != nil && o.CssFiles.IsSet() {
		return true
	}

	return false
}

// SetCssFiles gets a reference to the given NullableString and assigns it to the CssFiles field.
func (o *EmailTemplateDto) SetCssFiles(v string) {
	o.CssFiles.Set(&v)
}
// SetCssFilesNil sets the value for CssFiles to be an explicit nil
func (o *EmailTemplateDto) SetCssFilesNil() {
	o.CssFiles.Set(nil)
}

// UnsetCssFiles ensures that no value is present for CssFiles, not even an explicit nil
func (o *EmailTemplateDto) UnsetCssFiles() {
	o.CssFiles.Unset()
}

// GetJsFiles returns the JsFiles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetJsFiles() string {
	if o == nil || IsNil(o.JsFiles.Get()) {
		var ret string
		return ret
	}
	return *o.JsFiles.Get()
}

// GetJsFilesOk returns a tuple with the JsFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetJsFilesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.JsFiles.Get(), o.JsFiles.IsSet()
}

// HasJsFiles returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasJsFiles() bool {
	if o != nil && o.JsFiles.IsSet() {
		return true
	}

	return false
}

// SetJsFiles gets a reference to the given NullableString and assigns it to the JsFiles field.
func (o *EmailTemplateDto) SetJsFiles(v string) {
	o.JsFiles.Set(&v)
}
// SetJsFilesNil sets the value for JsFiles to be an explicit nil
func (o *EmailTemplateDto) SetJsFilesNil() {
	o.JsFiles.Set(nil)
}

// UnsetJsFiles ensures that no value is present for JsFiles, not even an explicit nil
func (o *EmailTemplateDto) UnsetJsFiles() {
	o.JsFiles.Unset()
}

// GetRazorGeneratedCode returns the RazorGeneratedCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetRazorGeneratedCode() string {
	if o == nil || IsNil(o.RazorGeneratedCode.Get()) {
		var ret string
		return ret
	}
	return *o.RazorGeneratedCode.Get()
}

// GetRazorGeneratedCodeOk returns a tuple with the RazorGeneratedCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetRazorGeneratedCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RazorGeneratedCode.Get(), o.RazorGeneratedCode.IsSet()
}

// HasRazorGeneratedCode returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasRazorGeneratedCode() bool {
	if o != nil && o.RazorGeneratedCode.IsSet() {
		return true
	}

	return false
}

// SetRazorGeneratedCode gets a reference to the given NullableString and assigns it to the RazorGeneratedCode field.
func (o *EmailTemplateDto) SetRazorGeneratedCode(v string) {
	o.RazorGeneratedCode.Set(&v)
}
// SetRazorGeneratedCodeNil sets the value for RazorGeneratedCode to be an explicit nil
func (o *EmailTemplateDto) SetRazorGeneratedCodeNil() {
	o.RazorGeneratedCode.Set(nil)
}

// UnsetRazorGeneratedCode ensures that no value is present for RazorGeneratedCode, not even an explicit nil
func (o *EmailTemplateDto) UnsetRazorGeneratedCode() {
	o.RazorGeneratedCode.Unset()
}

// GetCSharpGeneratedCode returns the CSharpGeneratedCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetCSharpGeneratedCode() string {
	if o == nil || IsNil(o.CSharpGeneratedCode.Get()) {
		var ret string
		return ret
	}
	return *o.CSharpGeneratedCode.Get()
}

// GetCSharpGeneratedCodeOk returns a tuple with the CSharpGeneratedCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetCSharpGeneratedCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CSharpGeneratedCode.Get(), o.CSharpGeneratedCode.IsSet()
}

// HasCSharpGeneratedCode returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasCSharpGeneratedCode() bool {
	if o != nil && o.CSharpGeneratedCode.IsSet() {
		return true
	}

	return false
}

// SetCSharpGeneratedCode gets a reference to the given NullableString and assigns it to the CSharpGeneratedCode field.
func (o *EmailTemplateDto) SetCSharpGeneratedCode(v string) {
	o.CSharpGeneratedCode.Set(&v)
}
// SetCSharpGeneratedCodeNil sets the value for CSharpGeneratedCode to be an explicit nil
func (o *EmailTemplateDto) SetCSharpGeneratedCodeNil() {
	o.CSharpGeneratedCode.Set(nil)
}

// UnsetCSharpGeneratedCode ensures that no value is present for CSharpGeneratedCode, not even an explicit nil
func (o *EmailTemplateDto) UnsetCSharpGeneratedCode() {
	o.CSharpGeneratedCode.Unset()
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *EmailTemplateDto) GetTemplate() bool {
	if o == nil || IsNil(o.Template) {
		var ret bool
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailTemplateDto) GetTemplateOk() (*bool, bool) {
	if o == nil || IsNil(o.Template) {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasTemplate() bool {
	if o != nil && !IsNil(o.Template) {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given bool and assigns it to the Template field.
func (o *EmailTemplateDto) SetTemplate(v bool) {
	o.Template = &v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *EmailTemplateDto) GetDefault() bool {
	if o == nil || IsNil(o.Default) {
		var ret bool
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailTemplateDto) GetDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.Default) {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasDefault() bool {
	if o != nil && !IsNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *EmailTemplateDto) SetDefault(v bool) {
	o.Default = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *EmailTemplateDto) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailTemplateDto) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *EmailTemplateDto) SetEnable(v bool) {
	o.Enable = &v
}

// GetEnableComments returns the EnableComments field value if set, zero value otherwise.
func (o *EmailTemplateDto) GetEnableComments() bool {
	if o == nil || IsNil(o.EnableComments) {
		var ret bool
		return ret
	}
	return *o.EnableComments
}

// GetEnableCommentsOk returns a tuple with the EnableComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailTemplateDto) GetEnableCommentsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableComments) {
		return nil, false
	}
	return o.EnableComments, true
}

// HasEnableComments returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasEnableComments() bool {
	if o != nil && !IsNil(o.EnableComments) {
		return true
	}

	return false
}

// SetEnableComments gets a reference to the given bool and assigns it to the EnableComments field.
func (o *EmailTemplateDto) SetEnableComments(v bool) {
	o.EnableComments = &v
}

// GetDisplaySocialBox returns the DisplaySocialBox field value if set, zero value otherwise.
func (o *EmailTemplateDto) GetDisplaySocialBox() bool {
	if o == nil || IsNil(o.DisplaySocialBox) {
		var ret bool
		return ret
	}
	return *o.DisplaySocialBox
}

// GetDisplaySocialBoxOk returns a tuple with the DisplaySocialBox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailTemplateDto) GetDisplaySocialBoxOk() (*bool, bool) {
	if o == nil || IsNil(o.DisplaySocialBox) {
		return nil, false
	}
	return o.DisplaySocialBox, true
}

// HasDisplaySocialBox returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasDisplaySocialBox() bool {
	if o != nil && !IsNil(o.DisplaySocialBox) {
		return true
	}

	return false
}

// SetDisplaySocialBox gets a reference to the given bool and assigns it to the DisplaySocialBox field.
func (o *EmailTemplateDto) SetDisplaySocialBox(v bool) {
	o.DisplaySocialBox = &v
}

// GetPublished returns the Published field value if set, zero value otherwise.
func (o *EmailTemplateDto) GetPublished() bool {
	if o == nil || IsNil(o.Published) {
		var ret bool
		return ret
	}
	return *o.Published
}

// GetPublishedOk returns a tuple with the Published field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailTemplateDto) GetPublishedOk() (*bool, bool) {
	if o == nil || IsNil(o.Published) {
		return nil, false
	}
	return o.Published, true
}

// HasPublished returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasPublished() bool {
	if o != nil && !IsNil(o.Published) {
		return true
	}

	return false
}

// SetPublished gets a reference to the given bool and assigns it to the Published field.
func (o *EmailTemplateDto) SetPublished(v bool) {
	o.Published = &v
}

// GetInTrashCan returns the InTrashCan field value if set, zero value otherwise.
func (o *EmailTemplateDto) GetInTrashCan() bool {
	if o == nil || IsNil(o.InTrashCan) {
		var ret bool
		return ret
	}
	return *o.InTrashCan
}

// GetInTrashCanOk returns a tuple with the InTrashCan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailTemplateDto) GetInTrashCanOk() (*bool, bool) {
	if o == nil || IsNil(o.InTrashCan) {
		return nil, false
	}
	return o.InTrashCan, true
}

// HasInTrashCan returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasInTrashCan() bool {
	if o != nil && !IsNil(o.InTrashCan) {
		return true
	}

	return false
}

// SetInTrashCan gets a reference to the given bool and assigns it to the InTrashCan field.
func (o *EmailTemplateDto) SetInTrashCan(v bool) {
	o.InTrashCan = &v
}

// GetSystemLocked returns the SystemLocked field value if set, zero value otherwise.
func (o *EmailTemplateDto) GetSystemLocked() bool {
	if o == nil || IsNil(o.SystemLocked) {
		var ret bool
		return ret
	}
	return *o.SystemLocked
}

// GetSystemLockedOk returns a tuple with the SystemLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailTemplateDto) GetSystemLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.SystemLocked) {
		return nil, false
	}
	return o.SystemLocked, true
}

// HasSystemLocked returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasSystemLocked() bool {
	if o != nil && !IsNil(o.SystemLocked) {
		return true
	}

	return false
}

// SetSystemLocked gets a reference to the given bool and assigns it to the SystemLocked field.
func (o *EmailTemplateDto) SetSystemLocked(v bool) {
	o.SystemLocked = &v
}

// GetAllowPingBacks returns the AllowPingBacks field value if set, zero value otherwise.
func (o *EmailTemplateDto) GetAllowPingBacks() bool {
	if o == nil || IsNil(o.AllowPingBacks) {
		var ret bool
		return ret
	}
	return *o.AllowPingBacks
}

// GetAllowPingBacksOk returns a tuple with the AllowPingBacks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailTemplateDto) GetAllowPingBacksOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowPingBacks) {
		return nil, false
	}
	return o.AllowPingBacks, true
}

// HasAllowPingBacks returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasAllowPingBacks() bool {
	if o != nil && !IsNil(o.AllowPingBacks) {
		return true
	}

	return false
}

// SetAllowPingBacks gets a reference to the given bool and assigns it to the AllowPingBacks field.
func (o *EmailTemplateDto) SetAllowPingBacks(v bool) {
	o.AllowPingBacks = &v
}

// GetAllowTrackbacks returns the AllowTrackbacks field value if set, zero value otherwise.
func (o *EmailTemplateDto) GetAllowTrackbacks() bool {
	if o == nil || IsNil(o.AllowTrackbacks) {
		var ret bool
		return ret
	}
	return *o.AllowTrackbacks
}

// GetAllowTrackbacksOk returns a tuple with the AllowTrackbacks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailTemplateDto) GetAllowTrackbacksOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowTrackbacks) {
		return nil, false
	}
	return o.AllowTrackbacks, true
}

// HasAllowTrackbacks returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasAllowTrackbacks() bool {
	if o != nil && !IsNil(o.AllowTrackbacks) {
		return true
	}

	return false
}

// SetAllowTrackbacks gets a reference to the given bool and assigns it to the AllowTrackbacks field.
func (o *EmailTemplateDto) SetAllowTrackbacks(v bool) {
	o.AllowTrackbacks = &v
}

// GetCornerstoneContent returns the CornerstoneContent field value if set, zero value otherwise.
func (o *EmailTemplateDto) GetCornerstoneContent() bool {
	if o == nil || IsNil(o.CornerstoneContent) {
		var ret bool
		return ret
	}
	return *o.CornerstoneContent
}

// GetCornerstoneContentOk returns a tuple with the CornerstoneContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailTemplateDto) GetCornerstoneContentOk() (*bool, bool) {
	if o == nil || IsNil(o.CornerstoneContent) {
		return nil, false
	}
	return o.CornerstoneContent, true
}

// HasCornerstoneContent returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasCornerstoneContent() bool {
	if o != nil && !IsNil(o.CornerstoneContent) {
		return true
	}

	return false
}

// SetCornerstoneContent gets a reference to the given bool and assigns it to the CornerstoneContent field.
func (o *EmailTemplateDto) SetCornerstoneContent(v bool) {
	o.CornerstoneContent = &v
}

// GetIsEssentialContent returns the IsEssentialContent field value if set, zero value otherwise.
func (o *EmailTemplateDto) GetIsEssentialContent() bool {
	if o == nil || IsNil(o.IsEssentialContent) {
		var ret bool
		return ret
	}
	return *o.IsEssentialContent
}

// GetIsEssentialContentOk returns a tuple with the IsEssentialContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailTemplateDto) GetIsEssentialContentOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEssentialContent) {
		return nil, false
	}
	return o.IsEssentialContent, true
}

// HasIsEssentialContent returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasIsEssentialContent() bool {
	if o != nil && !IsNil(o.IsEssentialContent) {
		return true
	}

	return false
}

// SetIsEssentialContent gets a reference to the given bool and assigns it to the IsEssentialContent field.
func (o *EmailTemplateDto) SetIsEssentialContent(v bool) {
	o.IsEssentialContent = &v
}

// GetAllowSearchEngineIndexing returns the AllowSearchEngineIndexing field value if set, zero value otherwise.
func (o *EmailTemplateDto) GetAllowSearchEngineIndexing() bool {
	if o == nil || IsNil(o.AllowSearchEngineIndexing) {
		var ret bool
		return ret
	}
	return *o.AllowSearchEngineIndexing
}

// GetAllowSearchEngineIndexingOk returns a tuple with the AllowSearchEngineIndexing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailTemplateDto) GetAllowSearchEngineIndexingOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSearchEngineIndexing) {
		return nil, false
	}
	return o.AllowSearchEngineIndexing, true
}

// HasAllowSearchEngineIndexing returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasAllowSearchEngineIndexing() bool {
	if o != nil && !IsNil(o.AllowSearchEngineIndexing) {
		return true
	}

	return false
}

// SetAllowSearchEngineIndexing gets a reference to the given bool and assigns it to the AllowSearchEngineIndexing field.
func (o *EmailTemplateDto) SetAllowSearchEngineIndexing(v bool) {
	o.AllowSearchEngineIndexing = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *EmailTemplateDto) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *EmailTemplateDto) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *EmailTemplateDto) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetWebPortalId returns the WebPortalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetWebPortalId() string {
	if o == nil || IsNil(o.WebPortalId.Get()) {
		var ret string
		return ret
	}
	return *o.WebPortalId.Get()
}

// GetWebPortalIdOk returns a tuple with the WebPortalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetWebPortalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WebPortalId.Get(), o.WebPortalId.IsSet()
}

// HasWebPortalId returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasWebPortalId() bool {
	if o != nil && o.WebPortalId.IsSet() {
		return true
	}

	return false
}

// SetWebPortalId gets a reference to the given NullableString and assigns it to the WebPortalId field.
func (o *EmailTemplateDto) SetWebPortalId(v string) {
	o.WebPortalId.Set(&v)
}
// SetWebPortalIdNil sets the value for WebPortalId to be an explicit nil
func (o *EmailTemplateDto) SetWebPortalIdNil() {
	o.WebPortalId.Set(nil)
}

// UnsetWebPortalId ensures that no value is present for WebPortalId, not even an explicit nil
func (o *EmailTemplateDto) UnsetWebPortalId() {
	o.WebPortalId.Unset()
}

// GetWebsiteThemeId returns the WebsiteThemeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetWebsiteThemeId() string {
	if o == nil || IsNil(o.WebsiteThemeId.Get()) {
		var ret string
		return ret
	}
	return *o.WebsiteThemeId.Get()
}

// GetWebsiteThemeIdOk returns a tuple with the WebsiteThemeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetWebsiteThemeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WebsiteThemeId.Get(), o.WebsiteThemeId.IsSet()
}

// HasWebsiteThemeId returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasWebsiteThemeId() bool {
	if o != nil && o.WebsiteThemeId.IsSet() {
		return true
	}

	return false
}

// SetWebsiteThemeId gets a reference to the given NullableString and assigns it to the WebsiteThemeId field.
func (o *EmailTemplateDto) SetWebsiteThemeId(v string) {
	o.WebsiteThemeId.Set(&v)
}
// SetWebsiteThemeIdNil sets the value for WebsiteThemeId to be an explicit nil
func (o *EmailTemplateDto) SetWebsiteThemeIdNil() {
	o.WebsiteThemeId.Set(nil)
}

// UnsetWebsiteThemeId ensures that no value is present for WebsiteThemeId, not even an explicit nil
func (o *EmailTemplateDto) UnsetWebsiteThemeId() {
	o.WebsiteThemeId.Unset()
}

// GetEnrollmentId returns the EnrollmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetEnrollmentId() string {
	if o == nil || IsNil(o.EnrollmentId.Get()) {
		var ret string
		return ret
	}
	return *o.EnrollmentId.Get()
}

// GetEnrollmentIdOk returns a tuple with the EnrollmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetEnrollmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnrollmentId.Get(), o.EnrollmentId.IsSet()
}

// HasEnrollmentId returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasEnrollmentId() bool {
	if o != nil && o.EnrollmentId.IsSet() {
		return true
	}

	return false
}

// SetEnrollmentId gets a reference to the given NullableString and assigns it to the EnrollmentId field.
func (o *EmailTemplateDto) SetEnrollmentId(v string) {
	o.EnrollmentId.Set(&v)
}
// SetEnrollmentIdNil sets the value for EnrollmentId to be an explicit nil
func (o *EmailTemplateDto) SetEnrollmentIdNil() {
	o.EnrollmentId.Set(nil)
}

// UnsetEnrollmentId ensures that no value is present for EnrollmentId, not even an explicit nil
func (o *EmailTemplateDto) UnsetEnrollmentId() {
	o.EnrollmentId.Unset()
}

// GetSocialProfileId returns the SocialProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetSocialProfileId() string {
	if o == nil || IsNil(o.SocialProfileId.Get()) {
		var ret string
		return ret
	}
	return *o.SocialProfileId.Get()
}

// GetSocialProfileIdOk returns a tuple with the SocialProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetSocialProfileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SocialProfileId.Get(), o.SocialProfileId.IsSet()
}

// HasSocialProfileId returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasSocialProfileId() bool {
	if o != nil && o.SocialProfileId.IsSet() {
		return true
	}

	return false
}

// SetSocialProfileId gets a reference to the given NullableString and assigns it to the SocialProfileId field.
func (o *EmailTemplateDto) SetSocialProfileId(v string) {
	o.SocialProfileId.Set(&v)
}
// SetSocialProfileIdNil sets the value for SocialProfileId to be an explicit nil
func (o *EmailTemplateDto) SetSocialProfileIdNil() {
	o.SocialProfileId.Set(nil)
}

// UnsetSocialProfileId ensures that no value is present for SocialProfileId, not even an explicit nil
func (o *EmailTemplateDto) UnsetSocialProfileId() {
	o.SocialProfileId.Unset()
}

// GetParentWebContentId returns the ParentWebContentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetParentWebContentId() string {
	if o == nil || IsNil(o.ParentWebContentId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentWebContentId.Get()
}

// GetParentWebContentIdOk returns a tuple with the ParentWebContentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetParentWebContentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentWebContentId.Get(), o.ParentWebContentId.IsSet()
}

// HasParentWebContentId returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasParentWebContentId() bool {
	if o != nil && o.ParentWebContentId.IsSet() {
		return true
	}

	return false
}

// SetParentWebContentId gets a reference to the given NullableString and assigns it to the ParentWebContentId field.
func (o *EmailTemplateDto) SetParentWebContentId(v string) {
	o.ParentWebContentId.Set(&v)
}
// SetParentWebContentIdNil sets the value for ParentWebContentId to be an explicit nil
func (o *EmailTemplateDto) SetParentWebContentIdNil() {
	o.ParentWebContentId.Set(nil)
}

// UnsetParentWebContentId ensures that no value is present for ParentWebContentId, not even an explicit nil
func (o *EmailTemplateDto) UnsetParentWebContentId() {
	o.ParentWebContentId.Unset()
}

// GetParentWebContentVersionId returns the ParentWebContentVersionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetParentWebContentVersionId() string {
	if o == nil || IsNil(o.ParentWebContentVersionId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentWebContentVersionId.Get()
}

// GetParentWebContentVersionIdOk returns a tuple with the ParentWebContentVersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetParentWebContentVersionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentWebContentVersionId.Get(), o.ParentWebContentVersionId.IsSet()
}

// HasParentWebContentVersionId returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasParentWebContentVersionId() bool {
	if o != nil && o.ParentWebContentVersionId.IsSet() {
		return true
	}

	return false
}

// SetParentWebContentVersionId gets a reference to the given NullableString and assigns it to the ParentWebContentVersionId field.
func (o *EmailTemplateDto) SetParentWebContentVersionId(v string) {
	o.ParentWebContentVersionId.Set(&v)
}
// SetParentWebContentVersionIdNil sets the value for ParentWebContentVersionId to be an explicit nil
func (o *EmailTemplateDto) SetParentWebContentVersionIdNil() {
	o.ParentWebContentVersionId.Set(nil)
}

// UnsetParentWebContentVersionId ensures that no value is present for ParentWebContentVersionId, not even an explicit nil
func (o *EmailTemplateDto) UnsetParentWebContentVersionId() {
	o.ParentWebContentVersionId.Unset()
}

// GetMarketingCampaignId returns the MarketingCampaignId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetMarketingCampaignId() string {
	if o == nil || IsNil(o.MarketingCampaignId.Get()) {
		var ret string
		return ret
	}
	return *o.MarketingCampaignId.Get()
}

// GetMarketingCampaignIdOk returns a tuple with the MarketingCampaignId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetMarketingCampaignIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MarketingCampaignId.Get(), o.MarketingCampaignId.IsSet()
}

// HasMarketingCampaignId returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasMarketingCampaignId() bool {
	if o != nil && o.MarketingCampaignId.IsSet() {
		return true
	}

	return false
}

// SetMarketingCampaignId gets a reference to the given NullableString and assigns it to the MarketingCampaignId field.
func (o *EmailTemplateDto) SetMarketingCampaignId(v string) {
	o.MarketingCampaignId.Set(&v)
}
// SetMarketingCampaignIdNil sets the value for MarketingCampaignId to be an explicit nil
func (o *EmailTemplateDto) SetMarketingCampaignIdNil() {
	o.MarketingCampaignId.Set(nil)
}

// UnsetMarketingCampaignId ensures that no value is present for MarketingCampaignId, not even an explicit nil
func (o *EmailTemplateDto) UnsetMarketingCampaignId() {
	o.MarketingCampaignId.Unset()
}

// GetMarketingCampaignName returns the MarketingCampaignName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateDto) GetMarketingCampaignName() string {
	if o == nil || IsNil(o.MarketingCampaignName.Get()) {
		var ret string
		return ret
	}
	return *o.MarketingCampaignName.Get()
}

// GetMarketingCampaignNameOk returns a tuple with the MarketingCampaignName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateDto) GetMarketingCampaignNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MarketingCampaignName.Get(), o.MarketingCampaignName.IsSet()
}

// HasMarketingCampaignName returns a boolean if a field has been set.
func (o *EmailTemplateDto) HasMarketingCampaignName() bool {
	if o != nil && o.MarketingCampaignName.IsSet() {
		return true
	}

	return false
}

// SetMarketingCampaignName gets a reference to the given NullableString and assigns it to the MarketingCampaignName field.
func (o *EmailTemplateDto) SetMarketingCampaignName(v string) {
	o.MarketingCampaignName.Set(&v)
}
// SetMarketingCampaignNameNil sets the value for MarketingCampaignName to be an explicit nil
func (o *EmailTemplateDto) SetMarketingCampaignNameNil() {
	o.MarketingCampaignName.Set(nil)
}

// UnsetMarketingCampaignName ensures that no value is present for MarketingCampaignName, not even an explicit nil
func (o *EmailTemplateDto) UnsetMarketingCampaignName() {
	o.MarketingCampaignName.Unset()
}

func (o EmailTemplateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailTemplateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Timestamp.IsSet() {
		toSerialize["timestamp"] = o.Timestamp.Get()
	}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if o.Slug.IsSet() {
		toSerialize["slug"] = o.Slug.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.Excerpt.IsSet() {
		toSerialize["excerpt"] = o.Excerpt.Get()
	}
	if o.Password.IsSet() {
		toSerialize["password"] = o.Password.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.HighlightImage.IsSet() {
		toSerialize["highlightImage"] = o.HighlightImage.Get()
	}
	if o.CanonicalUrl.IsSet() {
		toSerialize["canonicalUrl"] = o.CanonicalUrl.Get()
	}
	if o.SeoTitle.IsSet() {
		toSerialize["seoTitle"] = o.SeoTitle.Get()
	}
	if o.SeoKeyWords.IsSet() {
		toSerialize["seoKeyWords"] = o.SeoKeyWords.Get()
	}
	if o.SeoKeyPhrases.IsSet() {
		toSerialize["seoKeyPhrases"] = o.SeoKeyPhrases.Get()
	}
	if o.MetaDescription.IsSet() {
		toSerialize["metaDescription"] = o.MetaDescription.Get()
	}
	if o.TwitterImage.IsSet() {
		toSerialize["twitterImage"] = o.TwitterImage.Get()
	}
	if o.TwitterTitle.IsSet() {
		toSerialize["twitterTitle"] = o.TwitterTitle.Get()
	}
	if o.TwitterDescription.IsSet() {
		toSerialize["twitterDescription"] = o.TwitterDescription.Get()
	}
	if o.FacebookImage.IsSet() {
		toSerialize["facebookImage"] = o.FacebookImage.Get()
	}
	if o.FacebookTitle.IsSet() {
		toSerialize["facebookTitle"] = o.FacebookTitle.Get()
	}
	if o.FacebookDescription.IsSet() {
		toSerialize["facebookDescription"] = o.FacebookDescription.Get()
	}
	if o.FeaturedImageUrl.IsSet() {
		toSerialize["featuredImageUrl"] = o.FeaturedImageUrl.Get()
	}
	if o.Content.IsSet() {
		toSerialize["content"] = o.Content.Get()
	}
	if o.Code.IsSet() {
		toSerialize["code"] = o.Code.Get()
	}
	if o.Namespace.IsSet() {
		toSerialize["namespace"] = o.Namespace.Get()
	}
	if o.TypeName.IsSet() {
		toSerialize["typeName"] = o.TypeName.Get()
	}
	if o.GeneratedCode.IsSet() {
		toSerialize["generatedCode"] = o.GeneratedCode.Get()
	}
	if o.CompilationPath.IsSet() {
		toSerialize["compilationPath"] = o.CompilationPath.Get()
	}
	if o.HtmlContent.IsSet() {
		toSerialize["htmlContent"] = o.HtmlContent.Get()
	}
	if o.CSharpContent.IsSet() {
		toSerialize["cSharpContent"] = o.CSharpContent.Get()
	}
	if o.RazorContent.IsSet() {
		toSerialize["razorContent"] = o.RazorContent.Get()
	}
	if o.CssContent.IsSet() {
		toSerialize["cssContent"] = o.CssContent.Get()
	}
	if o.JsContent.IsSet() {
		toSerialize["jsContent"] = o.JsContent.Get()
	}
	if o.CssFiles.IsSet() {
		toSerialize["cssFiles"] = o.CssFiles.Get()
	}
	if o.JsFiles.IsSet() {
		toSerialize["jsFiles"] = o.JsFiles.Get()
	}
	if o.RazorGeneratedCode.IsSet() {
		toSerialize["razorGeneratedCode"] = o.RazorGeneratedCode.Get()
	}
	if o.CSharpGeneratedCode.IsSet() {
		toSerialize["cSharpGeneratedCode"] = o.CSharpGeneratedCode.Get()
	}
	if !IsNil(o.Template) {
		toSerialize["template"] = o.Template
	}
	if !IsNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.EnableComments) {
		toSerialize["enableComments"] = o.EnableComments
	}
	if !IsNil(o.DisplaySocialBox) {
		toSerialize["displaySocialBox"] = o.DisplaySocialBox
	}
	if !IsNil(o.Published) {
		toSerialize["published"] = o.Published
	}
	if !IsNil(o.InTrashCan) {
		toSerialize["inTrashCan"] = o.InTrashCan
	}
	if !IsNil(o.SystemLocked) {
		toSerialize["systemLocked"] = o.SystemLocked
	}
	if !IsNil(o.AllowPingBacks) {
		toSerialize["allowPingBacks"] = o.AllowPingBacks
	}
	if !IsNil(o.AllowTrackbacks) {
		toSerialize["allowTrackbacks"] = o.AllowTrackbacks
	}
	if !IsNil(o.CornerstoneContent) {
		toSerialize["cornerstoneContent"] = o.CornerstoneContent
	}
	if !IsNil(o.IsEssentialContent) {
		toSerialize["isEssentialContent"] = o.IsEssentialContent
	}
	if !IsNil(o.AllowSearchEngineIndexing) {
		toSerialize["allowSearchEngineIndexing"] = o.AllowSearchEngineIndexing
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.WebPortalId.IsSet() {
		toSerialize["webPortalId"] = o.WebPortalId.Get()
	}
	if o.WebsiteThemeId.IsSet() {
		toSerialize["websiteThemeId"] = o.WebsiteThemeId.Get()
	}
	if o.EnrollmentId.IsSet() {
		toSerialize["enrollmentId"] = o.EnrollmentId.Get()
	}
	if o.SocialProfileId.IsSet() {
		toSerialize["socialProfileId"] = o.SocialProfileId.Get()
	}
	if o.ParentWebContentId.IsSet() {
		toSerialize["parentWebContentId"] = o.ParentWebContentId.Get()
	}
	if o.ParentWebContentVersionId.IsSet() {
		toSerialize["parentWebContentVersionId"] = o.ParentWebContentVersionId.Get()
	}
	if o.MarketingCampaignId.IsSet() {
		toSerialize["marketingCampaignId"] = o.MarketingCampaignId.Get()
	}
	if o.MarketingCampaignName.IsSet() {
		toSerialize["marketingCampaignName"] = o.MarketingCampaignName.Get()
	}
	return toSerialize, nil
}

type NullableEmailTemplateDto struct {
	value *EmailTemplateDto
	isSet bool
}

func (v NullableEmailTemplateDto) Get() *EmailTemplateDto {
	return v.value
}

func (v *NullableEmailTemplateDto) Set(val *EmailTemplateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailTemplateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailTemplateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailTemplateDto(val *EmailTemplateDto) *NullableEmailTemplateDto {
	return &NullableEmailTemplateDto{value: val, isSet: true}
}

func (v NullableEmailTemplateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailTemplateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


