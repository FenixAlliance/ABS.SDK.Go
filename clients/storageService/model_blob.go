/*
StorageService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the Blob type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Blob{}

// Blob struct for Blob
type Blob struct {
	Kind *int32 `json:"kind,omitempty"`
	IsFolder *bool `json:"isFolder,omitempty"`
	IsFile *bool `json:"isFile,omitempty"`
	FolderPath NullableString `json:"folderPath,omitempty"`
	Name NullableString `json:"name,omitempty"`
	Size NullableInt64 `json:"size,omitempty"`
	Md5 NullableString `json:"md5,omitempty"`
	CreatedTime NullableTime `json:"createdTime,omitempty"`
	LastModificationTime NullableTime `json:"lastModificationTime,omitempty"`
	FullPath NullableString `json:"fullPath,omitempty"`
	Properties map[string]interface{} `json:"properties,omitempty"`
	Metadata map[string]string `json:"metadata,omitempty"`
	IsRootFolder *bool `json:"isRootFolder,omitempty"`
}

// NewBlob instantiates a new Blob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlob() *Blob {
	this := Blob{}
	return &this
}

// NewBlobWithDefaults instantiates a new Blob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlobWithDefaults() *Blob {
	this := Blob{}
	return &this
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *Blob) GetKind() int32 {
	if o == nil || IsNil(o.Kind) {
		var ret int32
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Blob) GetKindOk() (*int32, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *Blob) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given int32 and assigns it to the Kind field.
func (o *Blob) SetKind(v int32) {
	o.Kind = &v
}

// GetIsFolder returns the IsFolder field value if set, zero value otherwise.
func (o *Blob) GetIsFolder() bool {
	if o == nil || IsNil(o.IsFolder) {
		var ret bool
		return ret
	}
	return *o.IsFolder
}

// GetIsFolderOk returns a tuple with the IsFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Blob) GetIsFolderOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFolder) {
		return nil, false
	}
	return o.IsFolder, true
}

// HasIsFolder returns a boolean if a field has been set.
func (o *Blob) HasIsFolder() bool {
	if o != nil && !IsNil(o.IsFolder) {
		return true
	}

	return false
}

// SetIsFolder gets a reference to the given bool and assigns it to the IsFolder field.
func (o *Blob) SetIsFolder(v bool) {
	o.IsFolder = &v
}

// GetIsFile returns the IsFile field value if set, zero value otherwise.
func (o *Blob) GetIsFile() bool {
	if o == nil || IsNil(o.IsFile) {
		var ret bool
		return ret
	}
	return *o.IsFile
}

// GetIsFileOk returns a tuple with the IsFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Blob) GetIsFileOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFile) {
		return nil, false
	}
	return o.IsFile, true
}

// HasIsFile returns a boolean if a field has been set.
func (o *Blob) HasIsFile() bool {
	if o != nil && !IsNil(o.IsFile) {
		return true
	}

	return false
}

// SetIsFile gets a reference to the given bool and assigns it to the IsFile field.
func (o *Blob) SetIsFile(v bool) {
	o.IsFile = &v
}

// GetFolderPath returns the FolderPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Blob) GetFolderPath() string {
	if o == nil || IsNil(o.FolderPath.Get()) {
		var ret string
		return ret
	}
	return *o.FolderPath.Get()
}

// GetFolderPathOk returns a tuple with the FolderPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Blob) GetFolderPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FolderPath.Get(), o.FolderPath.IsSet()
}

// HasFolderPath returns a boolean if a field has been set.
func (o *Blob) HasFolderPath() bool {
	if o != nil && o.FolderPath.IsSet() {
		return true
	}

	return false
}

// SetFolderPath gets a reference to the given NullableString and assigns it to the FolderPath field.
func (o *Blob) SetFolderPath(v string) {
	o.FolderPath.Set(&v)
}
// SetFolderPathNil sets the value for FolderPath to be an explicit nil
func (o *Blob) SetFolderPathNil() {
	o.FolderPath.Set(nil)
}

// UnsetFolderPath ensures that no value is present for FolderPath, not even an explicit nil
func (o *Blob) UnsetFolderPath() {
	o.FolderPath.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Blob) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Blob) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *Blob) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *Blob) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *Blob) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *Blob) UnsetName() {
	o.Name.Unset()
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Blob) GetSize() int64 {
	if o == nil || IsNil(o.Size.Get()) {
		var ret int64
		return ret
	}
	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Blob) GetSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// HasSize returns a boolean if a field has been set.
func (o *Blob) HasSize() bool {
	if o != nil && o.Size.IsSet() {
		return true
	}

	return false
}

// SetSize gets a reference to the given NullableInt64 and assigns it to the Size field.
func (o *Blob) SetSize(v int64) {
	o.Size.Set(&v)
}
// SetSizeNil sets the value for Size to be an explicit nil
func (o *Blob) SetSizeNil() {
	o.Size.Set(nil)
}

// UnsetSize ensures that no value is present for Size, not even an explicit nil
func (o *Blob) UnsetSize() {
	o.Size.Unset()
}

// GetMd5 returns the Md5 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Blob) GetMd5() string {
	if o == nil || IsNil(o.Md5.Get()) {
		var ret string
		return ret
	}
	return *o.Md5.Get()
}

// GetMd5Ok returns a tuple with the Md5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Blob) GetMd5Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Md5.Get(), o.Md5.IsSet()
}

// HasMd5 returns a boolean if a field has been set.
func (o *Blob) HasMd5() bool {
	if o != nil && o.Md5.IsSet() {
		return true
	}

	return false
}

// SetMd5 gets a reference to the given NullableString and assigns it to the Md5 field.
func (o *Blob) SetMd5(v string) {
	o.Md5.Set(&v)
}
// SetMd5Nil sets the value for Md5 to be an explicit nil
func (o *Blob) SetMd5Nil() {
	o.Md5.Set(nil)
}

// UnsetMd5 ensures that no value is present for Md5, not even an explicit nil
func (o *Blob) UnsetMd5() {
	o.Md5.Unset()
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Blob) GetCreatedTime() time.Time {
	if o == nil || IsNil(o.CreatedTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.CreatedTime.Get()
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Blob) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedTime.Get(), o.CreatedTime.IsSet()
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *Blob) HasCreatedTime() bool {
	if o != nil && o.CreatedTime.IsSet() {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given NullableTime and assigns it to the CreatedTime field.
func (o *Blob) SetCreatedTime(v time.Time) {
	o.CreatedTime.Set(&v)
}
// SetCreatedTimeNil sets the value for CreatedTime to be an explicit nil
func (o *Blob) SetCreatedTimeNil() {
	o.CreatedTime.Set(nil)
}

// UnsetCreatedTime ensures that no value is present for CreatedTime, not even an explicit nil
func (o *Blob) UnsetCreatedTime() {
	o.CreatedTime.Unset()
}

// GetLastModificationTime returns the LastModificationTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Blob) GetLastModificationTime() time.Time {
	if o == nil || IsNil(o.LastModificationTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.LastModificationTime.Get()
}

// GetLastModificationTimeOk returns a tuple with the LastModificationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Blob) GetLastModificationTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastModificationTime.Get(), o.LastModificationTime.IsSet()
}

// HasLastModificationTime returns a boolean if a field has been set.
func (o *Blob) HasLastModificationTime() bool {
	if o != nil && o.LastModificationTime.IsSet() {
		return true
	}

	return false
}

// SetLastModificationTime gets a reference to the given NullableTime and assigns it to the LastModificationTime field.
func (o *Blob) SetLastModificationTime(v time.Time) {
	o.LastModificationTime.Set(&v)
}
// SetLastModificationTimeNil sets the value for LastModificationTime to be an explicit nil
func (o *Blob) SetLastModificationTimeNil() {
	o.LastModificationTime.Set(nil)
}

// UnsetLastModificationTime ensures that no value is present for LastModificationTime, not even an explicit nil
func (o *Blob) UnsetLastModificationTime() {
	o.LastModificationTime.Unset()
}

// GetFullPath returns the FullPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Blob) GetFullPath() string {
	if o == nil || IsNil(o.FullPath.Get()) {
		var ret string
		return ret
	}
	return *o.FullPath.Get()
}

// GetFullPathOk returns a tuple with the FullPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Blob) GetFullPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FullPath.Get(), o.FullPath.IsSet()
}

// HasFullPath returns a boolean if a field has been set.
func (o *Blob) HasFullPath() bool {
	if o != nil && o.FullPath.IsSet() {
		return true
	}

	return false
}

// SetFullPath gets a reference to the given NullableString and assigns it to the FullPath field.
func (o *Blob) SetFullPath(v string) {
	o.FullPath.Set(&v)
}
// SetFullPathNil sets the value for FullPath to be an explicit nil
func (o *Blob) SetFullPathNil() {
	o.FullPath.Set(nil)
}

// UnsetFullPath ensures that no value is present for FullPath, not even an explicit nil
func (o *Blob) UnsetFullPath() {
	o.FullPath.Unset()
}

// GetProperties returns the Properties field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Blob) GetProperties() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Blob) GetPropertiesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Properties) {
		return map[string]interface{}{}, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *Blob) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]interface{} and assigns it to the Properties field.
func (o *Blob) SetProperties(v map[string]interface{}) {
	o.Properties = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Blob) GetMetadata() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Blob) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *Blob) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *Blob) SetMetadata(v map[string]string) {
	o.Metadata = v
}

// GetIsRootFolder returns the IsRootFolder field value if set, zero value otherwise.
func (o *Blob) GetIsRootFolder() bool {
	if o == nil || IsNil(o.IsRootFolder) {
		var ret bool
		return ret
	}
	return *o.IsRootFolder
}

// GetIsRootFolderOk returns a tuple with the IsRootFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Blob) GetIsRootFolderOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRootFolder) {
		return nil, false
	}
	return o.IsRootFolder, true
}

// HasIsRootFolder returns a boolean if a field has been set.
func (o *Blob) HasIsRootFolder() bool {
	if o != nil && !IsNil(o.IsRootFolder) {
		return true
	}

	return false
}

// SetIsRootFolder gets a reference to the given bool and assigns it to the IsRootFolder field.
func (o *Blob) SetIsRootFolder(v bool) {
	o.IsRootFolder = &v
}

func (o Blob) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Blob) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.IsFolder) {
		toSerialize["isFolder"] = o.IsFolder
	}
	if !IsNil(o.IsFile) {
		toSerialize["isFile"] = o.IsFile
	}
	if o.FolderPath.IsSet() {
		toSerialize["folderPath"] = o.FolderPath.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Size.IsSet() {
		toSerialize["size"] = o.Size.Get()
	}
	if o.Md5.IsSet() {
		toSerialize["md5"] = o.Md5.Get()
	}
	if o.CreatedTime.IsSet() {
		toSerialize["createdTime"] = o.CreatedTime.Get()
	}
	if o.LastModificationTime.IsSet() {
		toSerialize["lastModificationTime"] = o.LastModificationTime.Get()
	}
	if o.FullPath.IsSet() {
		toSerialize["fullPath"] = o.FullPath.Get()
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.IsRootFolder) {
		toSerialize["isRootFolder"] = o.IsRootFolder
	}
	return toSerialize, nil
}

type NullableBlob struct {
	value *Blob
	isSet bool
}

func (v NullableBlob) Get() *Blob {
	return v.value
}

func (v *NullableBlob) Set(val *Blob) {
	v.value = val
	v.isSet = true
}

func (v NullableBlob) IsSet() bool {
	return v.isSet
}

func (v *NullableBlob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlob(val *Blob) *NullableBlob {
	return &NullableBlob{value: val, isSet: true}
}

func (v NullableBlob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


