/*
DealsService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DealUnitCreateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DealUnitCreateDto{}

// DealUnitCreateDto struct for DealUnitCreateDto
type DealUnitCreateDto struct {
	Id *string `json:"id,omitempty"`
	Timestamp *time.Time `json:"timestamp,omitempty"`
	Closed *bool `json:"closed,omitempty"`
	Title NullableString `json:"title,omitempty"`
	UserId NullableString `json:"userId,omitempty"`
	TenantId NullableString `json:"tenantId,omitempty"`
	PriceListId NullableString `json:"priceListId,omitempty"`
	Description NullableString `json:"description,omitempty"`
	EnrollmentId NullableString `json:"enrollmentId,omitempty"`
	IndividualId NullableString `json:"individualId,omitempty"`
	PaymentTermId NullableString `json:"paymentTermId,omitempty"`
	OrganizationId NullableString `json:"organizationId,omitempty"`
	ReceiverTenantId NullableString `json:"receiverTenantId,omitempty"`
	CurrencyId NullableString `json:"currencyId,omitempty"`
	ForexRate *float64 `json:"forexRate,omitempty"`
	FirstName NullableString `json:"firstName,omitempty"`
	LastName NullableString `json:"lastName,omitempty"`
	CompanyName NullableString `json:"companyName,omitempty"`
	BillingEmail NullableString `json:"billingEmail,omitempty"`
	AddressLine1 NullableString `json:"addressLine1,omitempty"`
	AddressLine2 NullableString `json:"addressLine2,omitempty"`
	PostalCode NullableString `json:"postalCode,omitempty"`
	CountryId NullableString `json:"countryId,omitempty"`
	StateId NullableString `json:"stateId,omitempty"`
	CityId NullableString `json:"cityId,omitempty"`
	DealUnitFlowId NullableString `json:"dealUnitFlowId,omitempty"`
	DealUnitFlowStageId NullableString `json:"dealUnitFlowStageId,omitempty"`
	PartnerCreated *bool `json:"partnerCreated,omitempty"`
	PartnerCollaboration *bool `json:"partnerCollaboration,omitempty"`
	ProposedSolution NullableString `json:"proposedSolution,omitempty"`
	CurrentSituation NullableString `json:"currentSituation,omitempty"`
	CustomerNeed NullableString `json:"customerNeed,omitempty"`
	WonDate *time.Time `json:"wonDate,omitempty"`
	LostDate *time.Time `json:"lostDate,omitempty"`
	ExpiryDate *time.Time `json:"expiryDate,omitempty"`
	DeliveredDate *time.Time `json:"deliveredDate,omitempty"`
	ClosedTimestamp *time.Time `json:"closedTimestamp,omitempty"`
	ExpectedCloseDate *time.Time `json:"expectedCloseDate,omitempty"`
	DealUnitStatus *int32 `json:"dealUnitStatus,omitempty"`
	DealUnitPurchaseProcess *int32 `json:"dealUnitPurchaseProcess,omitempty"`
	DealUnitForecastCategory *int32 `json:"dealUnitForecastCategory,omitempty"`
	DealUnitAmountsCalculation *int32 `json:"dealUnitAmountsCalculation,omitempty"`
}

// NewDealUnitCreateDto instantiates a new DealUnitCreateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDealUnitCreateDto() *DealUnitCreateDto {
	this := DealUnitCreateDto{}
	return &this
}

// NewDealUnitCreateDtoWithDefaults instantiates a new DealUnitCreateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDealUnitCreateDtoWithDefaults() *DealUnitCreateDto {
	this := DealUnitCreateDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DealUnitCreateDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealUnitCreateDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DealUnitCreateDto) SetId(v string) {
	o.Id = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *DealUnitCreateDto) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealUnitCreateDto) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *DealUnitCreateDto) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetClosed returns the Closed field value if set, zero value otherwise.
func (o *DealUnitCreateDto) GetClosed() bool {
	if o == nil || IsNil(o.Closed) {
		var ret bool
		return ret
	}
	return *o.Closed
}

// GetClosedOk returns a tuple with the Closed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealUnitCreateDto) GetClosedOk() (*bool, bool) {
	if o == nil || IsNil(o.Closed) {
		return nil, false
	}
	return o.Closed, true
}

// HasClosed returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasClosed() bool {
	if o != nil && !IsNil(o.Closed) {
		return true
	}

	return false
}

// SetClosed gets a reference to the given bool and assigns it to the Closed field.
func (o *DealUnitCreateDto) SetClosed(v bool) {
	o.Closed = &v
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *DealUnitCreateDto) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *DealUnitCreateDto) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *DealUnitCreateDto) UnsetTitle() {
	o.Title.Unset()
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetUserId() string {
	if o == nil || IsNil(o.UserId.Get()) {
		var ret string
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableString and assigns it to the UserId field.
func (o *DealUnitCreateDto) SetUserId(v string) {
	o.UserId.Set(&v)
}
// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *DealUnitCreateDto) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *DealUnitCreateDto) UnsetUserId() {
	o.UserId.Unset()
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *DealUnitCreateDto) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *DealUnitCreateDto) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *DealUnitCreateDto) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetPriceListId returns the PriceListId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetPriceListId() string {
	if o == nil || IsNil(o.PriceListId.Get()) {
		var ret string
		return ret
	}
	return *o.PriceListId.Get()
}

// GetPriceListIdOk returns a tuple with the PriceListId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetPriceListIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceListId.Get(), o.PriceListId.IsSet()
}

// HasPriceListId returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasPriceListId() bool {
	if o != nil && o.PriceListId.IsSet() {
		return true
	}

	return false
}

// SetPriceListId gets a reference to the given NullableString and assigns it to the PriceListId field.
func (o *DealUnitCreateDto) SetPriceListId(v string) {
	o.PriceListId.Set(&v)
}
// SetPriceListIdNil sets the value for PriceListId to be an explicit nil
func (o *DealUnitCreateDto) SetPriceListIdNil() {
	o.PriceListId.Set(nil)
}

// UnsetPriceListId ensures that no value is present for PriceListId, not even an explicit nil
func (o *DealUnitCreateDto) UnsetPriceListId() {
	o.PriceListId.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *DealUnitCreateDto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *DealUnitCreateDto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *DealUnitCreateDto) UnsetDescription() {
	o.Description.Unset()
}

// GetEnrollmentId returns the EnrollmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetEnrollmentId() string {
	if o == nil || IsNil(o.EnrollmentId.Get()) {
		var ret string
		return ret
	}
	return *o.EnrollmentId.Get()
}

// GetEnrollmentIdOk returns a tuple with the EnrollmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetEnrollmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnrollmentId.Get(), o.EnrollmentId.IsSet()
}

// HasEnrollmentId returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasEnrollmentId() bool {
	if o != nil && o.EnrollmentId.IsSet() {
		return true
	}

	return false
}

// SetEnrollmentId gets a reference to the given NullableString and assigns it to the EnrollmentId field.
func (o *DealUnitCreateDto) SetEnrollmentId(v string) {
	o.EnrollmentId.Set(&v)
}
// SetEnrollmentIdNil sets the value for EnrollmentId to be an explicit nil
func (o *DealUnitCreateDto) SetEnrollmentIdNil() {
	o.EnrollmentId.Set(nil)
}

// UnsetEnrollmentId ensures that no value is present for EnrollmentId, not even an explicit nil
func (o *DealUnitCreateDto) UnsetEnrollmentId() {
	o.EnrollmentId.Unset()
}

// GetIndividualId returns the IndividualId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetIndividualId() string {
	if o == nil || IsNil(o.IndividualId.Get()) {
		var ret string
		return ret
	}
	return *o.IndividualId.Get()
}

// GetIndividualIdOk returns a tuple with the IndividualId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetIndividualIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IndividualId.Get(), o.IndividualId.IsSet()
}

// HasIndividualId returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasIndividualId() bool {
	if o != nil && o.IndividualId.IsSet() {
		return true
	}

	return false
}

// SetIndividualId gets a reference to the given NullableString and assigns it to the IndividualId field.
func (o *DealUnitCreateDto) SetIndividualId(v string) {
	o.IndividualId.Set(&v)
}
// SetIndividualIdNil sets the value for IndividualId to be an explicit nil
func (o *DealUnitCreateDto) SetIndividualIdNil() {
	o.IndividualId.Set(nil)
}

// UnsetIndividualId ensures that no value is present for IndividualId, not even an explicit nil
func (o *DealUnitCreateDto) UnsetIndividualId() {
	o.IndividualId.Unset()
}

// GetPaymentTermId returns the PaymentTermId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetPaymentTermId() string {
	if o == nil || IsNil(o.PaymentTermId.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentTermId.Get()
}

// GetPaymentTermIdOk returns a tuple with the PaymentTermId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetPaymentTermIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentTermId.Get(), o.PaymentTermId.IsSet()
}

// HasPaymentTermId returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasPaymentTermId() bool {
	if o != nil && o.PaymentTermId.IsSet() {
		return true
	}

	return false
}

// SetPaymentTermId gets a reference to the given NullableString and assigns it to the PaymentTermId field.
func (o *DealUnitCreateDto) SetPaymentTermId(v string) {
	o.PaymentTermId.Set(&v)
}
// SetPaymentTermIdNil sets the value for PaymentTermId to be an explicit nil
func (o *DealUnitCreateDto) SetPaymentTermIdNil() {
	o.PaymentTermId.Set(nil)
}

// UnsetPaymentTermId ensures that no value is present for PaymentTermId, not even an explicit nil
func (o *DealUnitCreateDto) UnsetPaymentTermId() {
	o.PaymentTermId.Unset()
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId.Get()) {
		var ret string
		return ret
	}
	return *o.OrganizationId.Get()
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationId.Get(), o.OrganizationId.IsSet()
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasOrganizationId() bool {
	if o != nil && o.OrganizationId.IsSet() {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given NullableString and assigns it to the OrganizationId field.
func (o *DealUnitCreateDto) SetOrganizationId(v string) {
	o.OrganizationId.Set(&v)
}
// SetOrganizationIdNil sets the value for OrganizationId to be an explicit nil
func (o *DealUnitCreateDto) SetOrganizationIdNil() {
	o.OrganizationId.Set(nil)
}

// UnsetOrganizationId ensures that no value is present for OrganizationId, not even an explicit nil
func (o *DealUnitCreateDto) UnsetOrganizationId() {
	o.OrganizationId.Unset()
}

// GetReceiverTenantId returns the ReceiverTenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetReceiverTenantId() string {
	if o == nil || IsNil(o.ReceiverTenantId.Get()) {
		var ret string
		return ret
	}
	return *o.ReceiverTenantId.Get()
}

// GetReceiverTenantIdOk returns a tuple with the ReceiverTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetReceiverTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiverTenantId.Get(), o.ReceiverTenantId.IsSet()
}

// HasReceiverTenantId returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasReceiverTenantId() bool {
	if o != nil && o.ReceiverTenantId.IsSet() {
		return true
	}

	return false
}

// SetReceiverTenantId gets a reference to the given NullableString and assigns it to the ReceiverTenantId field.
func (o *DealUnitCreateDto) SetReceiverTenantId(v string) {
	o.ReceiverTenantId.Set(&v)
}
// SetReceiverTenantIdNil sets the value for ReceiverTenantId to be an explicit nil
func (o *DealUnitCreateDto) SetReceiverTenantIdNil() {
	o.ReceiverTenantId.Set(nil)
}

// UnsetReceiverTenantId ensures that no value is present for ReceiverTenantId, not even an explicit nil
func (o *DealUnitCreateDto) UnsetReceiverTenantId() {
	o.ReceiverTenantId.Unset()
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetCurrencyId() string {
	if o == nil || IsNil(o.CurrencyId.Get()) {
		var ret string
		return ret
	}
	return *o.CurrencyId.Get()
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetCurrencyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrencyId.Get(), o.CurrencyId.IsSet()
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasCurrencyId() bool {
	if o != nil && o.CurrencyId.IsSet() {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given NullableString and assigns it to the CurrencyId field.
func (o *DealUnitCreateDto) SetCurrencyId(v string) {
	o.CurrencyId.Set(&v)
}
// SetCurrencyIdNil sets the value for CurrencyId to be an explicit nil
func (o *DealUnitCreateDto) SetCurrencyIdNil() {
	o.CurrencyId.Set(nil)
}

// UnsetCurrencyId ensures that no value is present for CurrencyId, not even an explicit nil
func (o *DealUnitCreateDto) UnsetCurrencyId() {
	o.CurrencyId.Unset()
}

// GetForexRate returns the ForexRate field value if set, zero value otherwise.
func (o *DealUnitCreateDto) GetForexRate() float64 {
	if o == nil || IsNil(o.ForexRate) {
		var ret float64
		return ret
	}
	return *o.ForexRate
}

// GetForexRateOk returns a tuple with the ForexRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealUnitCreateDto) GetForexRateOk() (*float64, bool) {
	if o == nil || IsNil(o.ForexRate) {
		return nil, false
	}
	return o.ForexRate, true
}

// HasForexRate returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasForexRate() bool {
	if o != nil && !IsNil(o.ForexRate) {
		return true
	}

	return false
}

// SetForexRate gets a reference to the given float64 and assigns it to the ForexRate field.
func (o *DealUnitCreateDto) SetForexRate(v float64) {
	o.ForexRate = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetFirstName() string {
	if o == nil || IsNil(o.FirstName.Get()) {
		var ret string
		return ret
	}
	return *o.FirstName.Get()
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstName.Get(), o.FirstName.IsSet()
}

// HasFirstName returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasFirstName() bool {
	if o != nil && o.FirstName.IsSet() {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given NullableString and assigns it to the FirstName field.
func (o *DealUnitCreateDto) SetFirstName(v string) {
	o.FirstName.Set(&v)
}
// SetFirstNameNil sets the value for FirstName to be an explicit nil
func (o *DealUnitCreateDto) SetFirstNameNil() {
	o.FirstName.Set(nil)
}

// UnsetFirstName ensures that no value is present for FirstName, not even an explicit nil
func (o *DealUnitCreateDto) UnsetFirstName() {
	o.FirstName.Unset()
}

// GetLastName returns the LastName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetLastName() string {
	if o == nil || IsNil(o.LastName.Get()) {
		var ret string
		return ret
	}
	return *o.LastName.Get()
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastName.Get(), o.LastName.IsSet()
}

// HasLastName returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasLastName() bool {
	if o != nil && o.LastName.IsSet() {
		return true
	}

	return false
}

// SetLastName gets a reference to the given NullableString and assigns it to the LastName field.
func (o *DealUnitCreateDto) SetLastName(v string) {
	o.LastName.Set(&v)
}
// SetLastNameNil sets the value for LastName to be an explicit nil
func (o *DealUnitCreateDto) SetLastNameNil() {
	o.LastName.Set(nil)
}

// UnsetLastName ensures that no value is present for LastName, not even an explicit nil
func (o *DealUnitCreateDto) UnsetLastName() {
	o.LastName.Unset()
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName.Get()) {
		var ret string
		return ret
	}
	return *o.CompanyName.Get()
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetCompanyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyName.Get(), o.CompanyName.IsSet()
}

// HasCompanyName returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasCompanyName() bool {
	if o != nil && o.CompanyName.IsSet() {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given NullableString and assigns it to the CompanyName field.
func (o *DealUnitCreateDto) SetCompanyName(v string) {
	o.CompanyName.Set(&v)
}
// SetCompanyNameNil sets the value for CompanyName to be an explicit nil
func (o *DealUnitCreateDto) SetCompanyNameNil() {
	o.CompanyName.Set(nil)
}

// UnsetCompanyName ensures that no value is present for CompanyName, not even an explicit nil
func (o *DealUnitCreateDto) UnsetCompanyName() {
	o.CompanyName.Unset()
}

// GetBillingEmail returns the BillingEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetBillingEmail() string {
	if o == nil || IsNil(o.BillingEmail.Get()) {
		var ret string
		return ret
	}
	return *o.BillingEmail.Get()
}

// GetBillingEmailOk returns a tuple with the BillingEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetBillingEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingEmail.Get(), o.BillingEmail.IsSet()
}

// HasBillingEmail returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasBillingEmail() bool {
	if o != nil && o.BillingEmail.IsSet() {
		return true
	}

	return false
}

// SetBillingEmail gets a reference to the given NullableString and assigns it to the BillingEmail field.
func (o *DealUnitCreateDto) SetBillingEmail(v string) {
	o.BillingEmail.Set(&v)
}
// SetBillingEmailNil sets the value for BillingEmail to be an explicit nil
func (o *DealUnitCreateDto) SetBillingEmailNil() {
	o.BillingEmail.Set(nil)
}

// UnsetBillingEmail ensures that no value is present for BillingEmail, not even an explicit nil
func (o *DealUnitCreateDto) UnsetBillingEmail() {
	o.BillingEmail.Unset()
}

// GetAddressLine1 returns the AddressLine1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetAddressLine1() string {
	if o == nil || IsNil(o.AddressLine1.Get()) {
		var ret string
		return ret
	}
	return *o.AddressLine1.Get()
}

// GetAddressLine1Ok returns a tuple with the AddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetAddressLine1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressLine1.Get(), o.AddressLine1.IsSet()
}

// HasAddressLine1 returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasAddressLine1() bool {
	if o != nil && o.AddressLine1.IsSet() {
		return true
	}

	return false
}

// SetAddressLine1 gets a reference to the given NullableString and assigns it to the AddressLine1 field.
func (o *DealUnitCreateDto) SetAddressLine1(v string) {
	o.AddressLine1.Set(&v)
}
// SetAddressLine1Nil sets the value for AddressLine1 to be an explicit nil
func (o *DealUnitCreateDto) SetAddressLine1Nil() {
	o.AddressLine1.Set(nil)
}

// UnsetAddressLine1 ensures that no value is present for AddressLine1, not even an explicit nil
func (o *DealUnitCreateDto) UnsetAddressLine1() {
	o.AddressLine1.Unset()
}

// GetAddressLine2 returns the AddressLine2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetAddressLine2() string {
	if o == nil || IsNil(o.AddressLine2.Get()) {
		var ret string
		return ret
	}
	return *o.AddressLine2.Get()
}

// GetAddressLine2Ok returns a tuple with the AddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetAddressLine2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressLine2.Get(), o.AddressLine2.IsSet()
}

// HasAddressLine2 returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasAddressLine2() bool {
	if o != nil && o.AddressLine2.IsSet() {
		return true
	}

	return false
}

// SetAddressLine2 gets a reference to the given NullableString and assigns it to the AddressLine2 field.
func (o *DealUnitCreateDto) SetAddressLine2(v string) {
	o.AddressLine2.Set(&v)
}
// SetAddressLine2Nil sets the value for AddressLine2 to be an explicit nil
func (o *DealUnitCreateDto) SetAddressLine2Nil() {
	o.AddressLine2.Set(nil)
}

// UnsetAddressLine2 ensures that no value is present for AddressLine2, not even an explicit nil
func (o *DealUnitCreateDto) UnsetAddressLine2() {
	o.AddressLine2.Unset()
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode.Get()) {
		var ret string
		return ret
	}
	return *o.PostalCode.Get()
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PostalCode.Get(), o.PostalCode.IsSet()
}

// HasPostalCode returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasPostalCode() bool {
	if o != nil && o.PostalCode.IsSet() {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given NullableString and assigns it to the PostalCode field.
func (o *DealUnitCreateDto) SetPostalCode(v string) {
	o.PostalCode.Set(&v)
}
// SetPostalCodeNil sets the value for PostalCode to be an explicit nil
func (o *DealUnitCreateDto) SetPostalCodeNil() {
	o.PostalCode.Set(nil)
}

// UnsetPostalCode ensures that no value is present for PostalCode, not even an explicit nil
func (o *DealUnitCreateDto) UnsetPostalCode() {
	o.PostalCode.Unset()
}

// GetCountryId returns the CountryId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetCountryId() string {
	if o == nil || IsNil(o.CountryId.Get()) {
		var ret string
		return ret
	}
	return *o.CountryId.Get()
}

// GetCountryIdOk returns a tuple with the CountryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetCountryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryId.Get(), o.CountryId.IsSet()
}

// HasCountryId returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasCountryId() bool {
	if o != nil && o.CountryId.IsSet() {
		return true
	}

	return false
}

// SetCountryId gets a reference to the given NullableString and assigns it to the CountryId field.
func (o *DealUnitCreateDto) SetCountryId(v string) {
	o.CountryId.Set(&v)
}
// SetCountryIdNil sets the value for CountryId to be an explicit nil
func (o *DealUnitCreateDto) SetCountryIdNil() {
	o.CountryId.Set(nil)
}

// UnsetCountryId ensures that no value is present for CountryId, not even an explicit nil
func (o *DealUnitCreateDto) UnsetCountryId() {
	o.CountryId.Unset()
}

// GetStateId returns the StateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetStateId() string {
	if o == nil || IsNil(o.StateId.Get()) {
		var ret string
		return ret
	}
	return *o.StateId.Get()
}

// GetStateIdOk returns a tuple with the StateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetStateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StateId.Get(), o.StateId.IsSet()
}

// HasStateId returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasStateId() bool {
	if o != nil && o.StateId.IsSet() {
		return true
	}

	return false
}

// SetStateId gets a reference to the given NullableString and assigns it to the StateId field.
func (o *DealUnitCreateDto) SetStateId(v string) {
	o.StateId.Set(&v)
}
// SetStateIdNil sets the value for StateId to be an explicit nil
func (o *DealUnitCreateDto) SetStateIdNil() {
	o.StateId.Set(nil)
}

// UnsetStateId ensures that no value is present for StateId, not even an explicit nil
func (o *DealUnitCreateDto) UnsetStateId() {
	o.StateId.Unset()
}

// GetCityId returns the CityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetCityId() string {
	if o == nil || IsNil(o.CityId.Get()) {
		var ret string
		return ret
	}
	return *o.CityId.Get()
}

// GetCityIdOk returns a tuple with the CityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetCityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CityId.Get(), o.CityId.IsSet()
}

// HasCityId returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasCityId() bool {
	if o != nil && o.CityId.IsSet() {
		return true
	}

	return false
}

// SetCityId gets a reference to the given NullableString and assigns it to the CityId field.
func (o *DealUnitCreateDto) SetCityId(v string) {
	o.CityId.Set(&v)
}
// SetCityIdNil sets the value for CityId to be an explicit nil
func (o *DealUnitCreateDto) SetCityIdNil() {
	o.CityId.Set(nil)
}

// UnsetCityId ensures that no value is present for CityId, not even an explicit nil
func (o *DealUnitCreateDto) UnsetCityId() {
	o.CityId.Unset()
}

// GetDealUnitFlowId returns the DealUnitFlowId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetDealUnitFlowId() string {
	if o == nil || IsNil(o.DealUnitFlowId.Get()) {
		var ret string
		return ret
	}
	return *o.DealUnitFlowId.Get()
}

// GetDealUnitFlowIdOk returns a tuple with the DealUnitFlowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetDealUnitFlowIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DealUnitFlowId.Get(), o.DealUnitFlowId.IsSet()
}

// HasDealUnitFlowId returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasDealUnitFlowId() bool {
	if o != nil && o.DealUnitFlowId.IsSet() {
		return true
	}

	return false
}

// SetDealUnitFlowId gets a reference to the given NullableString and assigns it to the DealUnitFlowId field.
func (o *DealUnitCreateDto) SetDealUnitFlowId(v string) {
	o.DealUnitFlowId.Set(&v)
}
// SetDealUnitFlowIdNil sets the value for DealUnitFlowId to be an explicit nil
func (o *DealUnitCreateDto) SetDealUnitFlowIdNil() {
	o.DealUnitFlowId.Set(nil)
}

// UnsetDealUnitFlowId ensures that no value is present for DealUnitFlowId, not even an explicit nil
func (o *DealUnitCreateDto) UnsetDealUnitFlowId() {
	o.DealUnitFlowId.Unset()
}

// GetDealUnitFlowStageId returns the DealUnitFlowStageId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetDealUnitFlowStageId() string {
	if o == nil || IsNil(o.DealUnitFlowStageId.Get()) {
		var ret string
		return ret
	}
	return *o.DealUnitFlowStageId.Get()
}

// GetDealUnitFlowStageIdOk returns a tuple with the DealUnitFlowStageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetDealUnitFlowStageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DealUnitFlowStageId.Get(), o.DealUnitFlowStageId.IsSet()
}

// HasDealUnitFlowStageId returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasDealUnitFlowStageId() bool {
	if o != nil && o.DealUnitFlowStageId.IsSet() {
		return true
	}

	return false
}

// SetDealUnitFlowStageId gets a reference to the given NullableString and assigns it to the DealUnitFlowStageId field.
func (o *DealUnitCreateDto) SetDealUnitFlowStageId(v string) {
	o.DealUnitFlowStageId.Set(&v)
}
// SetDealUnitFlowStageIdNil sets the value for DealUnitFlowStageId to be an explicit nil
func (o *DealUnitCreateDto) SetDealUnitFlowStageIdNil() {
	o.DealUnitFlowStageId.Set(nil)
}

// UnsetDealUnitFlowStageId ensures that no value is present for DealUnitFlowStageId, not even an explicit nil
func (o *DealUnitCreateDto) UnsetDealUnitFlowStageId() {
	o.DealUnitFlowStageId.Unset()
}

// GetPartnerCreated returns the PartnerCreated field value if set, zero value otherwise.
func (o *DealUnitCreateDto) GetPartnerCreated() bool {
	if o == nil || IsNil(o.PartnerCreated) {
		var ret bool
		return ret
	}
	return *o.PartnerCreated
}

// GetPartnerCreatedOk returns a tuple with the PartnerCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealUnitCreateDto) GetPartnerCreatedOk() (*bool, bool) {
	if o == nil || IsNil(o.PartnerCreated) {
		return nil, false
	}
	return o.PartnerCreated, true
}

// HasPartnerCreated returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasPartnerCreated() bool {
	if o != nil && !IsNil(o.PartnerCreated) {
		return true
	}

	return false
}

// SetPartnerCreated gets a reference to the given bool and assigns it to the PartnerCreated field.
func (o *DealUnitCreateDto) SetPartnerCreated(v bool) {
	o.PartnerCreated = &v
}

// GetPartnerCollaboration returns the PartnerCollaboration field value if set, zero value otherwise.
func (o *DealUnitCreateDto) GetPartnerCollaboration() bool {
	if o == nil || IsNil(o.PartnerCollaboration) {
		var ret bool
		return ret
	}
	return *o.PartnerCollaboration
}

// GetPartnerCollaborationOk returns a tuple with the PartnerCollaboration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealUnitCreateDto) GetPartnerCollaborationOk() (*bool, bool) {
	if o == nil || IsNil(o.PartnerCollaboration) {
		return nil, false
	}
	return o.PartnerCollaboration, true
}

// HasPartnerCollaboration returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasPartnerCollaboration() bool {
	if o != nil && !IsNil(o.PartnerCollaboration) {
		return true
	}

	return false
}

// SetPartnerCollaboration gets a reference to the given bool and assigns it to the PartnerCollaboration field.
func (o *DealUnitCreateDto) SetPartnerCollaboration(v bool) {
	o.PartnerCollaboration = &v
}

// GetProposedSolution returns the ProposedSolution field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetProposedSolution() string {
	if o == nil || IsNil(o.ProposedSolution.Get()) {
		var ret string
		return ret
	}
	return *o.ProposedSolution.Get()
}

// GetProposedSolutionOk returns a tuple with the ProposedSolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetProposedSolutionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProposedSolution.Get(), o.ProposedSolution.IsSet()
}

// HasProposedSolution returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasProposedSolution() bool {
	if o != nil && o.ProposedSolution.IsSet() {
		return true
	}

	return false
}

// SetProposedSolution gets a reference to the given NullableString and assigns it to the ProposedSolution field.
func (o *DealUnitCreateDto) SetProposedSolution(v string) {
	o.ProposedSolution.Set(&v)
}
// SetProposedSolutionNil sets the value for ProposedSolution to be an explicit nil
func (o *DealUnitCreateDto) SetProposedSolutionNil() {
	o.ProposedSolution.Set(nil)
}

// UnsetProposedSolution ensures that no value is present for ProposedSolution, not even an explicit nil
func (o *DealUnitCreateDto) UnsetProposedSolution() {
	o.ProposedSolution.Unset()
}

// GetCurrentSituation returns the CurrentSituation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetCurrentSituation() string {
	if o == nil || IsNil(o.CurrentSituation.Get()) {
		var ret string
		return ret
	}
	return *o.CurrentSituation.Get()
}

// GetCurrentSituationOk returns a tuple with the CurrentSituation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetCurrentSituationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrentSituation.Get(), o.CurrentSituation.IsSet()
}

// HasCurrentSituation returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasCurrentSituation() bool {
	if o != nil && o.CurrentSituation.IsSet() {
		return true
	}

	return false
}

// SetCurrentSituation gets a reference to the given NullableString and assigns it to the CurrentSituation field.
func (o *DealUnitCreateDto) SetCurrentSituation(v string) {
	o.CurrentSituation.Set(&v)
}
// SetCurrentSituationNil sets the value for CurrentSituation to be an explicit nil
func (o *DealUnitCreateDto) SetCurrentSituationNil() {
	o.CurrentSituation.Set(nil)
}

// UnsetCurrentSituation ensures that no value is present for CurrentSituation, not even an explicit nil
func (o *DealUnitCreateDto) UnsetCurrentSituation() {
	o.CurrentSituation.Unset()
}

// GetCustomerNeed returns the CustomerNeed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitCreateDto) GetCustomerNeed() string {
	if o == nil || IsNil(o.CustomerNeed.Get()) {
		var ret string
		return ret
	}
	return *o.CustomerNeed.Get()
}

// GetCustomerNeedOk returns a tuple with the CustomerNeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitCreateDto) GetCustomerNeedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomerNeed.Get(), o.CustomerNeed.IsSet()
}

// HasCustomerNeed returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasCustomerNeed() bool {
	if o != nil && o.CustomerNeed.IsSet() {
		return true
	}

	return false
}

// SetCustomerNeed gets a reference to the given NullableString and assigns it to the CustomerNeed field.
func (o *DealUnitCreateDto) SetCustomerNeed(v string) {
	o.CustomerNeed.Set(&v)
}
// SetCustomerNeedNil sets the value for CustomerNeed to be an explicit nil
func (o *DealUnitCreateDto) SetCustomerNeedNil() {
	o.CustomerNeed.Set(nil)
}

// UnsetCustomerNeed ensures that no value is present for CustomerNeed, not even an explicit nil
func (o *DealUnitCreateDto) UnsetCustomerNeed() {
	o.CustomerNeed.Unset()
}

// GetWonDate returns the WonDate field value if set, zero value otherwise.
func (o *DealUnitCreateDto) GetWonDate() time.Time {
	if o == nil || IsNil(o.WonDate) {
		var ret time.Time
		return ret
	}
	return *o.WonDate
}

// GetWonDateOk returns a tuple with the WonDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealUnitCreateDto) GetWonDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.WonDate) {
		return nil, false
	}
	return o.WonDate, true
}

// HasWonDate returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasWonDate() bool {
	if o != nil && !IsNil(o.WonDate) {
		return true
	}

	return false
}

// SetWonDate gets a reference to the given time.Time and assigns it to the WonDate field.
func (o *DealUnitCreateDto) SetWonDate(v time.Time) {
	o.WonDate = &v
}

// GetLostDate returns the LostDate field value if set, zero value otherwise.
func (o *DealUnitCreateDto) GetLostDate() time.Time {
	if o == nil || IsNil(o.LostDate) {
		var ret time.Time
		return ret
	}
	return *o.LostDate
}

// GetLostDateOk returns a tuple with the LostDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealUnitCreateDto) GetLostDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LostDate) {
		return nil, false
	}
	return o.LostDate, true
}

// HasLostDate returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasLostDate() bool {
	if o != nil && !IsNil(o.LostDate) {
		return true
	}

	return false
}

// SetLostDate gets a reference to the given time.Time and assigns it to the LostDate field.
func (o *DealUnitCreateDto) SetLostDate(v time.Time) {
	o.LostDate = &v
}

// GetExpiryDate returns the ExpiryDate field value if set, zero value otherwise.
func (o *DealUnitCreateDto) GetExpiryDate() time.Time {
	if o == nil || IsNil(o.ExpiryDate) {
		var ret time.Time
		return ret
	}
	return *o.ExpiryDate
}

// GetExpiryDateOk returns a tuple with the ExpiryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealUnitCreateDto) GetExpiryDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpiryDate) {
		return nil, false
	}
	return o.ExpiryDate, true
}

// HasExpiryDate returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasExpiryDate() bool {
	if o != nil && !IsNil(o.ExpiryDate) {
		return true
	}

	return false
}

// SetExpiryDate gets a reference to the given time.Time and assigns it to the ExpiryDate field.
func (o *DealUnitCreateDto) SetExpiryDate(v time.Time) {
	o.ExpiryDate = &v
}

// GetDeliveredDate returns the DeliveredDate field value if set, zero value otherwise.
func (o *DealUnitCreateDto) GetDeliveredDate() time.Time {
	if o == nil || IsNil(o.DeliveredDate) {
		var ret time.Time
		return ret
	}
	return *o.DeliveredDate
}

// GetDeliveredDateOk returns a tuple with the DeliveredDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealUnitCreateDto) GetDeliveredDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeliveredDate) {
		return nil, false
	}
	return o.DeliveredDate, true
}

// HasDeliveredDate returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasDeliveredDate() bool {
	if o != nil && !IsNil(o.DeliveredDate) {
		return true
	}

	return false
}

// SetDeliveredDate gets a reference to the given time.Time and assigns it to the DeliveredDate field.
func (o *DealUnitCreateDto) SetDeliveredDate(v time.Time) {
	o.DeliveredDate = &v
}

// GetClosedTimestamp returns the ClosedTimestamp field value if set, zero value otherwise.
func (o *DealUnitCreateDto) GetClosedTimestamp() time.Time {
	if o == nil || IsNil(o.ClosedTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.ClosedTimestamp
}

// GetClosedTimestampOk returns a tuple with the ClosedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealUnitCreateDto) GetClosedTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ClosedTimestamp) {
		return nil, false
	}
	return o.ClosedTimestamp, true
}

// HasClosedTimestamp returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasClosedTimestamp() bool {
	if o != nil && !IsNil(o.ClosedTimestamp) {
		return true
	}

	return false
}

// SetClosedTimestamp gets a reference to the given time.Time and assigns it to the ClosedTimestamp field.
func (o *DealUnitCreateDto) SetClosedTimestamp(v time.Time) {
	o.ClosedTimestamp = &v
}

// GetExpectedCloseDate returns the ExpectedCloseDate field value if set, zero value otherwise.
func (o *DealUnitCreateDto) GetExpectedCloseDate() time.Time {
	if o == nil || IsNil(o.ExpectedCloseDate) {
		var ret time.Time
		return ret
	}
	return *o.ExpectedCloseDate
}

// GetExpectedCloseDateOk returns a tuple with the ExpectedCloseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealUnitCreateDto) GetExpectedCloseDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpectedCloseDate) {
		return nil, false
	}
	return o.ExpectedCloseDate, true
}

// HasExpectedCloseDate returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasExpectedCloseDate() bool {
	if o != nil && !IsNil(o.ExpectedCloseDate) {
		return true
	}

	return false
}

// SetExpectedCloseDate gets a reference to the given time.Time and assigns it to the ExpectedCloseDate field.
func (o *DealUnitCreateDto) SetExpectedCloseDate(v time.Time) {
	o.ExpectedCloseDate = &v
}

// GetDealUnitStatus returns the DealUnitStatus field value if set, zero value otherwise.
func (o *DealUnitCreateDto) GetDealUnitStatus() int32 {
	if o == nil || IsNil(o.DealUnitStatus) {
		var ret int32
		return ret
	}
	return *o.DealUnitStatus
}

// GetDealUnitStatusOk returns a tuple with the DealUnitStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealUnitCreateDto) GetDealUnitStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.DealUnitStatus) {
		return nil, false
	}
	return o.DealUnitStatus, true
}

// HasDealUnitStatus returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasDealUnitStatus() bool {
	if o != nil && !IsNil(o.DealUnitStatus) {
		return true
	}

	return false
}

// SetDealUnitStatus gets a reference to the given int32 and assigns it to the DealUnitStatus field.
func (o *DealUnitCreateDto) SetDealUnitStatus(v int32) {
	o.DealUnitStatus = &v
}

// GetDealUnitPurchaseProcess returns the DealUnitPurchaseProcess field value if set, zero value otherwise.
func (o *DealUnitCreateDto) GetDealUnitPurchaseProcess() int32 {
	if o == nil || IsNil(o.DealUnitPurchaseProcess) {
		var ret int32
		return ret
	}
	return *o.DealUnitPurchaseProcess
}

// GetDealUnitPurchaseProcessOk returns a tuple with the DealUnitPurchaseProcess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealUnitCreateDto) GetDealUnitPurchaseProcessOk() (*int32, bool) {
	if o == nil || IsNil(o.DealUnitPurchaseProcess) {
		return nil, false
	}
	return o.DealUnitPurchaseProcess, true
}

// HasDealUnitPurchaseProcess returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasDealUnitPurchaseProcess() bool {
	if o != nil && !IsNil(o.DealUnitPurchaseProcess) {
		return true
	}

	return false
}

// SetDealUnitPurchaseProcess gets a reference to the given int32 and assigns it to the DealUnitPurchaseProcess field.
func (o *DealUnitCreateDto) SetDealUnitPurchaseProcess(v int32) {
	o.DealUnitPurchaseProcess = &v
}

// GetDealUnitForecastCategory returns the DealUnitForecastCategory field value if set, zero value otherwise.
func (o *DealUnitCreateDto) GetDealUnitForecastCategory() int32 {
	if o == nil || IsNil(o.DealUnitForecastCategory) {
		var ret int32
		return ret
	}
	return *o.DealUnitForecastCategory
}

// GetDealUnitForecastCategoryOk returns a tuple with the DealUnitForecastCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealUnitCreateDto) GetDealUnitForecastCategoryOk() (*int32, bool) {
	if o == nil || IsNil(o.DealUnitForecastCategory) {
		return nil, false
	}
	return o.DealUnitForecastCategory, true
}

// HasDealUnitForecastCategory returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasDealUnitForecastCategory() bool {
	if o != nil && !IsNil(o.DealUnitForecastCategory) {
		return true
	}

	return false
}

// SetDealUnitForecastCategory gets a reference to the given int32 and assigns it to the DealUnitForecastCategory field.
func (o *DealUnitCreateDto) SetDealUnitForecastCategory(v int32) {
	o.DealUnitForecastCategory = &v
}

// GetDealUnitAmountsCalculation returns the DealUnitAmountsCalculation field value if set, zero value otherwise.
func (o *DealUnitCreateDto) GetDealUnitAmountsCalculation() int32 {
	if o == nil || IsNil(o.DealUnitAmountsCalculation) {
		var ret int32
		return ret
	}
	return *o.DealUnitAmountsCalculation
}

// GetDealUnitAmountsCalculationOk returns a tuple with the DealUnitAmountsCalculation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealUnitCreateDto) GetDealUnitAmountsCalculationOk() (*int32, bool) {
	if o == nil || IsNil(o.DealUnitAmountsCalculation) {
		return nil, false
	}
	return o.DealUnitAmountsCalculation, true
}

// HasDealUnitAmountsCalculation returns a boolean if a field has been set.
func (o *DealUnitCreateDto) HasDealUnitAmountsCalculation() bool {
	if o != nil && !IsNil(o.DealUnitAmountsCalculation) {
		return true
	}

	return false
}

// SetDealUnitAmountsCalculation gets a reference to the given int32 and assigns it to the DealUnitAmountsCalculation field.
func (o *DealUnitCreateDto) SetDealUnitAmountsCalculation(v int32) {
	o.DealUnitAmountsCalculation = &v
}

func (o DealUnitCreateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DealUnitCreateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Closed) {
		toSerialize["closed"] = o.Closed
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.UserId.IsSet() {
		toSerialize["userId"] = o.UserId.Get()
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.PriceListId.IsSet() {
		toSerialize["priceListId"] = o.PriceListId.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.EnrollmentId.IsSet() {
		toSerialize["enrollmentId"] = o.EnrollmentId.Get()
	}
	if o.IndividualId.IsSet() {
		toSerialize["individualId"] = o.IndividualId.Get()
	}
	if o.PaymentTermId.IsSet() {
		toSerialize["paymentTermId"] = o.PaymentTermId.Get()
	}
	if o.OrganizationId.IsSet() {
		toSerialize["organizationId"] = o.OrganizationId.Get()
	}
	if o.ReceiverTenantId.IsSet() {
		toSerialize["receiverTenantId"] = o.ReceiverTenantId.Get()
	}
	if o.CurrencyId.IsSet() {
		toSerialize["currencyId"] = o.CurrencyId.Get()
	}
	if !IsNil(o.ForexRate) {
		toSerialize["forexRate"] = o.ForexRate
	}
	if o.FirstName.IsSet() {
		toSerialize["firstName"] = o.FirstName.Get()
	}
	if o.LastName.IsSet() {
		toSerialize["lastName"] = o.LastName.Get()
	}
	if o.CompanyName.IsSet() {
		toSerialize["companyName"] = o.CompanyName.Get()
	}
	if o.BillingEmail.IsSet() {
		toSerialize["billingEmail"] = o.BillingEmail.Get()
	}
	if o.AddressLine1.IsSet() {
		toSerialize["addressLine1"] = o.AddressLine1.Get()
	}
	if o.AddressLine2.IsSet() {
		toSerialize["addressLine2"] = o.AddressLine2.Get()
	}
	if o.PostalCode.IsSet() {
		toSerialize["postalCode"] = o.PostalCode.Get()
	}
	if o.CountryId.IsSet() {
		toSerialize["countryId"] = o.CountryId.Get()
	}
	if o.StateId.IsSet() {
		toSerialize["stateId"] = o.StateId.Get()
	}
	if o.CityId.IsSet() {
		toSerialize["cityId"] = o.CityId.Get()
	}
	if o.DealUnitFlowId.IsSet() {
		toSerialize["dealUnitFlowId"] = o.DealUnitFlowId.Get()
	}
	if o.DealUnitFlowStageId.IsSet() {
		toSerialize["dealUnitFlowStageId"] = o.DealUnitFlowStageId.Get()
	}
	if !IsNil(o.PartnerCreated) {
		toSerialize["partnerCreated"] = o.PartnerCreated
	}
	if !IsNil(o.PartnerCollaboration) {
		toSerialize["partnerCollaboration"] = o.PartnerCollaboration
	}
	if o.ProposedSolution.IsSet() {
		toSerialize["proposedSolution"] = o.ProposedSolution.Get()
	}
	if o.CurrentSituation.IsSet() {
		toSerialize["currentSituation"] = o.CurrentSituation.Get()
	}
	if o.CustomerNeed.IsSet() {
		toSerialize["customerNeed"] = o.CustomerNeed.Get()
	}
	if !IsNil(o.WonDate) {
		toSerialize["wonDate"] = o.WonDate
	}
	if !IsNil(o.LostDate) {
		toSerialize["lostDate"] = o.LostDate
	}
	if !IsNil(o.ExpiryDate) {
		toSerialize["expiryDate"] = o.ExpiryDate
	}
	if !IsNil(o.DeliveredDate) {
		toSerialize["deliveredDate"] = o.DeliveredDate
	}
	if !IsNil(o.ClosedTimestamp) {
		toSerialize["closedTimestamp"] = o.ClosedTimestamp
	}
	if !IsNil(o.ExpectedCloseDate) {
		toSerialize["expectedCloseDate"] = o.ExpectedCloseDate
	}
	if !IsNil(o.DealUnitStatus) {
		toSerialize["dealUnitStatus"] = o.DealUnitStatus
	}
	if !IsNil(o.DealUnitPurchaseProcess) {
		toSerialize["dealUnitPurchaseProcess"] = o.DealUnitPurchaseProcess
	}
	if !IsNil(o.DealUnitForecastCategory) {
		toSerialize["dealUnitForecastCategory"] = o.DealUnitForecastCategory
	}
	if !IsNil(o.DealUnitAmountsCalculation) {
		toSerialize["dealUnitAmountsCalculation"] = o.DealUnitAmountsCalculation
	}
	return toSerialize, nil
}

type NullableDealUnitCreateDto struct {
	value *DealUnitCreateDto
	isSet bool
}

func (v NullableDealUnitCreateDto) Get() *DealUnitCreateDto {
	return v.value
}

func (v *NullableDealUnitCreateDto) Set(val *DealUnitCreateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableDealUnitCreateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableDealUnitCreateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDealUnitCreateDto(val *DealUnitCreateDto) *NullableDealUnitCreateDto {
	return &NullableDealUnitCreateDto{value: val, isSet: true}
}

func (v NullableDealUnitCreateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDealUnitCreateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


