/*
DealsService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DealUnitFlowStageUpdateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DealUnitFlowStageUpdateDto{}

// DealUnitFlowStageUpdateDto struct for DealUnitFlowStageUpdateDto
type DealUnitFlowStageUpdateDto struct {
	Order *int32 `json:"order,omitempty"`
	Name NullableString `json:"name,omitempty"`
	Description NullableString `json:"description,omitempty"`
	EnrolmentId NullableString `json:"enrolmentId,omitempty"`
	DealUnitFlowId NullableString `json:"dealUnitFlowId,omitempty"`
	ParentBusinessProcessStageId NullableString `json:"parentBusinessProcessStageId,omitempty"`
}

// NewDealUnitFlowStageUpdateDto instantiates a new DealUnitFlowStageUpdateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDealUnitFlowStageUpdateDto() *DealUnitFlowStageUpdateDto {
	this := DealUnitFlowStageUpdateDto{}
	return &this
}

// NewDealUnitFlowStageUpdateDtoWithDefaults instantiates a new DealUnitFlowStageUpdateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDealUnitFlowStageUpdateDtoWithDefaults() *DealUnitFlowStageUpdateDto {
	this := DealUnitFlowStageUpdateDto{}
	return &this
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *DealUnitFlowStageUpdateDto) GetOrder() int32 {
	if o == nil || IsNil(o.Order) {
		var ret int32
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealUnitFlowStageUpdateDto) GetOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *DealUnitFlowStageUpdateDto) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int32 and assigns it to the Order field.
func (o *DealUnitFlowStageUpdateDto) SetOrder(v int32) {
	o.Order = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitFlowStageUpdateDto) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitFlowStageUpdateDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *DealUnitFlowStageUpdateDto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *DealUnitFlowStageUpdateDto) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *DealUnitFlowStageUpdateDto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *DealUnitFlowStageUpdateDto) UnsetName() {
	o.Name.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitFlowStageUpdateDto) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitFlowStageUpdateDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *DealUnitFlowStageUpdateDto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *DealUnitFlowStageUpdateDto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *DealUnitFlowStageUpdateDto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *DealUnitFlowStageUpdateDto) UnsetDescription() {
	o.Description.Unset()
}

// GetEnrolmentId returns the EnrolmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitFlowStageUpdateDto) GetEnrolmentId() string {
	if o == nil || IsNil(o.EnrolmentId.Get()) {
		var ret string
		return ret
	}
	return *o.EnrolmentId.Get()
}

// GetEnrolmentIdOk returns a tuple with the EnrolmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitFlowStageUpdateDto) GetEnrolmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnrolmentId.Get(), o.EnrolmentId.IsSet()
}

// HasEnrolmentId returns a boolean if a field has been set.
func (o *DealUnitFlowStageUpdateDto) HasEnrolmentId() bool {
	if o != nil && o.EnrolmentId.IsSet() {
		return true
	}

	return false
}

// SetEnrolmentId gets a reference to the given NullableString and assigns it to the EnrolmentId field.
func (o *DealUnitFlowStageUpdateDto) SetEnrolmentId(v string) {
	o.EnrolmentId.Set(&v)
}
// SetEnrolmentIdNil sets the value for EnrolmentId to be an explicit nil
func (o *DealUnitFlowStageUpdateDto) SetEnrolmentIdNil() {
	o.EnrolmentId.Set(nil)
}

// UnsetEnrolmentId ensures that no value is present for EnrolmentId, not even an explicit nil
func (o *DealUnitFlowStageUpdateDto) UnsetEnrolmentId() {
	o.EnrolmentId.Unset()
}

// GetDealUnitFlowId returns the DealUnitFlowId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitFlowStageUpdateDto) GetDealUnitFlowId() string {
	if o == nil || IsNil(o.DealUnitFlowId.Get()) {
		var ret string
		return ret
	}
	return *o.DealUnitFlowId.Get()
}

// GetDealUnitFlowIdOk returns a tuple with the DealUnitFlowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitFlowStageUpdateDto) GetDealUnitFlowIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DealUnitFlowId.Get(), o.DealUnitFlowId.IsSet()
}

// HasDealUnitFlowId returns a boolean if a field has been set.
func (o *DealUnitFlowStageUpdateDto) HasDealUnitFlowId() bool {
	if o != nil && o.DealUnitFlowId.IsSet() {
		return true
	}

	return false
}

// SetDealUnitFlowId gets a reference to the given NullableString and assigns it to the DealUnitFlowId field.
func (o *DealUnitFlowStageUpdateDto) SetDealUnitFlowId(v string) {
	o.DealUnitFlowId.Set(&v)
}
// SetDealUnitFlowIdNil sets the value for DealUnitFlowId to be an explicit nil
func (o *DealUnitFlowStageUpdateDto) SetDealUnitFlowIdNil() {
	o.DealUnitFlowId.Set(nil)
}

// UnsetDealUnitFlowId ensures that no value is present for DealUnitFlowId, not even an explicit nil
func (o *DealUnitFlowStageUpdateDto) UnsetDealUnitFlowId() {
	o.DealUnitFlowId.Unset()
}

// GetParentBusinessProcessStageId returns the ParentBusinessProcessStageId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitFlowStageUpdateDto) GetParentBusinessProcessStageId() string {
	if o == nil || IsNil(o.ParentBusinessProcessStageId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentBusinessProcessStageId.Get()
}

// GetParentBusinessProcessStageIdOk returns a tuple with the ParentBusinessProcessStageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitFlowStageUpdateDto) GetParentBusinessProcessStageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentBusinessProcessStageId.Get(), o.ParentBusinessProcessStageId.IsSet()
}

// HasParentBusinessProcessStageId returns a boolean if a field has been set.
func (o *DealUnitFlowStageUpdateDto) HasParentBusinessProcessStageId() bool {
	if o != nil && o.ParentBusinessProcessStageId.IsSet() {
		return true
	}

	return false
}

// SetParentBusinessProcessStageId gets a reference to the given NullableString and assigns it to the ParentBusinessProcessStageId field.
func (o *DealUnitFlowStageUpdateDto) SetParentBusinessProcessStageId(v string) {
	o.ParentBusinessProcessStageId.Set(&v)
}
// SetParentBusinessProcessStageIdNil sets the value for ParentBusinessProcessStageId to be an explicit nil
func (o *DealUnitFlowStageUpdateDto) SetParentBusinessProcessStageIdNil() {
	o.ParentBusinessProcessStageId.Set(nil)
}

// UnsetParentBusinessProcessStageId ensures that no value is present for ParentBusinessProcessStageId, not even an explicit nil
func (o *DealUnitFlowStageUpdateDto) UnsetParentBusinessProcessStageId() {
	o.ParentBusinessProcessStageId.Unset()
}

func (o DealUnitFlowStageUpdateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DealUnitFlowStageUpdateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.EnrolmentId.IsSet() {
		toSerialize["enrolmentId"] = o.EnrolmentId.Get()
	}
	if o.DealUnitFlowId.IsSet() {
		toSerialize["dealUnitFlowId"] = o.DealUnitFlowId.Get()
	}
	if o.ParentBusinessProcessStageId.IsSet() {
		toSerialize["parentBusinessProcessStageId"] = o.ParentBusinessProcessStageId.Get()
	}
	return toSerialize, nil
}

type NullableDealUnitFlowStageUpdateDto struct {
	value *DealUnitFlowStageUpdateDto
	isSet bool
}

func (v NullableDealUnitFlowStageUpdateDto) Get() *DealUnitFlowStageUpdateDto {
	return v.value
}

func (v *NullableDealUnitFlowStageUpdateDto) Set(val *DealUnitFlowStageUpdateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableDealUnitFlowStageUpdateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableDealUnitFlowStageUpdateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDealUnitFlowStageUpdateDto(val *DealUnitFlowStageUpdateDto) *NullableDealUnitFlowStageUpdateDto {
	return &NullableDealUnitFlowStageUpdateDto{value: val, isSet: true}
}

func (v NullableDealUnitFlowStageUpdateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDealUnitFlowStageUpdateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


