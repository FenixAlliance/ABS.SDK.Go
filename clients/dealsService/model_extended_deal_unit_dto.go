/*
DealsService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ExtendedDealUnitDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtendedDealUnitDto{}

// ExtendedDealUnitDto struct for ExtendedDealUnitDto
type ExtendedDealUnitDto struct {
	Id NullableString `json:"id,omitempty"`
	Timestamp NullableTime `json:"timestamp,omitempty"`
	Closed *bool `json:"closed,omitempty"`
	Type NullableString `json:"type,omitempty"`
	Title NullableString `json:"title,omitempty"`
	UserId NullableString `json:"userId,omitempty"`
	TenantId NullableString `json:"tenantId,omitempty"`
	CurrencyId NullableString `json:"currencyId,omitempty"`
	Description NullableString `json:"description,omitempty"`
	PriceListId NullableString `json:"priceListId,omitempty"`
	EnrollmentId NullableString `json:"enrollmentId,omitempty"`
	IndividualId NullableString `json:"individualId,omitempty"`
	OrganizationId NullableString `json:"organizationId,omitempty"`
	ReceiverTenantId NullableString `json:"receiverTenantId,omitempty"`
	FirstName NullableString `json:"firstName,omitempty"`
	LastName NullableString `json:"lastName,omitempty"`
	CompanyName NullableString `json:"companyName,omitempty"`
	BillingEmail NullableString `json:"billingEmail,omitempty"`
	AddressLine1 NullableString `json:"addressLine1,omitempty"`
	AddressLine2 NullableString `json:"addressLine2,omitempty"`
	PostalCode NullableString `json:"postalCode,omitempty"`
	CountryId NullableString `json:"countryId,omitempty"`
	StateId NullableString `json:"stateId,omitempty"`
	CityId NullableString `json:"cityId,omitempty"`
	CustomerNotes NullableString `json:"customerNotes,omitempty"`
	ForexRate *float64 `json:"forexRate,omitempty"`
	Total *float64 `json:"total,omitempty"`
	TotalTaxes *float64 `json:"totalTaxes,omitempty"`
	TotalTaxBase *float64 `json:"totalTaxBase,omitempty"`
	TotalDiscounts *float64 `json:"totalDiscounts,omitempty"`
	TotalSurcharges *float64 `json:"totalSurcharges,omitempty"`
	TotalGlobalDiscounts *float64 `json:"totalGlobalDiscounts,omitempty"`
	TotalGlobalSurcharges *float64 `json:"totalGlobalSurcharges,omitempty"`
	TotalTaxesInUsd *float64 `json:"totalTaxesInUsd,omitempty"`
	TotalAmountInUsd *float64 `json:"totalAmountInUsd,omitempty"`
	TotalProfitInUsd *float64 `json:"totalProfitInUsd,omitempty"`
	TotalTaxBaseInUsd *float64 `json:"totalTaxBaseInUsd,omitempty"`
	TotalDiscountsInUsd *float64 `json:"totalDiscountsInUsd,omitempty"`
	TotalSurchargesInUsd *float64 `json:"totalSurchargesInUsd,omitempty"`
	TotalDetailAmountInUsd *float64 `json:"totalDetailAmountInUsd,omitempty"`
	TotalGlobalDiscountsInUsd *float64 `json:"totalGlobalDiscountsInUsd,omitempty"`
	TotalGlobalSurchargesInUsd *float64 `json:"totalGlobalSurchargesInUsd,omitempty"`
	TotalWithholdingTaxesInUsd *float64 `json:"totalWithholdingTaxesInUsd,omitempty"`
	TotalShippingCostInUsd *float64 `json:"totalShippingCostInUsd,omitempty"`
	TotalShippingTaxesInUsd *float64 `json:"totalShippingTaxesInUsd,omitempty"`
	Currency *Currency `json:"currency,omitempty"`
	TotalInUsd *Money `json:"totalInUsd,omitempty"`
	TotalTaxAmountInUsd *Money `json:"totalTaxAmountInUsd,omitempty"`
	TotalTaxBaseAmountInUsd *Money `json:"totalTaxBaseAmountInUsd,omitempty"`
	TotalDiscountsAmountInUsd *Money `json:"totalDiscountsAmountInUsd,omitempty"`
	TotalSurchargesAmountInUsd *Money `json:"totalSurchargesAmountInUsd,omitempty"`
	TotalGlobalDiscountsAmountInUsd *Money `json:"totalGlobalDiscountsAmountInUsd,omitempty"`
	TotalGlobalSurchargesAmountInUsd *Money `json:"totalGlobalSurchargesAmountInUsd,omitempty"`
	TotalAmount *Money `json:"totalAmount,omitempty"`
	TotalTaxAmount *Money `json:"totalTaxAmount,omitempty"`
	TotalTaxBaseAmount *Money `json:"totalTaxBaseAmount,omitempty"`
	TotalDiscountsAmount *Money `json:"totalDiscountsAmount,omitempty"`
	TotalSurchargesAmount *Money `json:"totalSurchargesAmount,omitempty"`
	TotalGlobalDiscountsAmount *Money `json:"totalGlobalDiscountsAmount,omitempty"`
	TotalGlobalSurchargesAmount *Money `json:"totalGlobalSurchargesAmount,omitempty"`
	Ordered *bool `json:"ordered,omitempty"`
	DealUnitFeedId NullableString `json:"dealUnitFeedId,omitempty"`
	DealUnitFlowId NullableString `json:"dealUnitFlowId,omitempty"`
	DealUnitFlowStageId NullableString `json:"dealUnitFlowStageId,omitempty"`
	BillingLocationId NullableString `json:"billingLocationId,omitempty"`
	ShippingLocationId NullableString `json:"shippingLocationId,omitempty"`
	PartnerCreated *bool `json:"partnerCreated,omitempty"`
	PartnerCollaboration *bool `json:"partnerCollaboration,omitempty"`
	ProposedSolution NullableString `json:"proposedSolution,omitempty"`
	CurrentSituation NullableString `json:"currentSituation,omitempty"`
	CustomerNeed NullableString `json:"customerNeed,omitempty"`
	WonDate *time.Time `json:"wonDate,omitempty"`
	LostDate *time.Time `json:"lostDate,omitempty"`
	ExpiryDate *time.Time `json:"expiryDate,omitempty"`
	DeliveredDate *time.Time `json:"deliveredDate,omitempty"`
	ClosedTimestamp *time.Time `json:"closedTimestamp,omitempty"`
	ExpectedCloseDate *time.Time `json:"expectedCloseDate,omitempty"`
	DealUnitStatus *int32 `json:"dealUnitStatus,omitempty"`
	DealUnitPurchaseProcess *int32 `json:"dealUnitPurchaseProcess,omitempty"`
	DealUnitForecastCategory *int32 `json:"dealUnitForecastCategory,omitempty"`
	DealUnitAmountsCalculation *int32 `json:"dealUnitAmountsCalculation,omitempty"`
	LinesCount *int32 `json:"linesCount,omitempty"`
	CustomTotalAmount *float64 `json:"customTotalAmount,omitempty"`
	CustomDetailAmount *float64 `json:"customDetailAmount,omitempty"`
	CustomProfitAmount *float64 `json:"customProfitAmount,omitempty"`
	CustomShippingCostAmount *float64 `json:"customShippingCostAmount,omitempty"`
	CustomWithholdingTaxAmount *float64 `json:"customWithholdingTaxAmount,omitempty"`
	CustomSurchargesAmount *float64 `json:"customSurchargesAmount,omitempty"`
	CustomDiscountsAmount *float64 `json:"customDiscountsAmount,omitempty"`
	CustomShippingTaxAmount *float64 `json:"customShippingTaxAmount,omitempty"`
	User *UserDto `json:"user,omitempty"`
	Tenant *TenantDto `json:"tenant,omitempty"`
	Individual *ContactDto `json:"individual,omitempty"`
	Organization *ContactDto `json:"organization,omitempty"`
	ReceiverTenant *TenantDto `json:"receiverTenant,omitempty"`
	Enrollment *TenantEnrolmentDto `json:"enrollment,omitempty"`
}

// NewExtendedDealUnitDto instantiates a new ExtendedDealUnitDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtendedDealUnitDto() *ExtendedDealUnitDto {
	this := ExtendedDealUnitDto{}
	return &this
}

// NewExtendedDealUnitDtoWithDefaults instantiates a new ExtendedDealUnitDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtendedDealUnitDtoWithDefaults() *ExtendedDealUnitDto {
	this := ExtendedDealUnitDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *ExtendedDealUnitDto) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *ExtendedDealUnitDto) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetId() {
	o.Id.Unset()
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp.Get()
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timestamp.Get(), o.Timestamp.IsSet()
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTimestamp() bool {
	if o != nil && o.Timestamp.IsSet() {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given NullableTime and assigns it to the Timestamp field.
func (o *ExtendedDealUnitDto) SetTimestamp(v time.Time) {
	o.Timestamp.Set(&v)
}
// SetTimestampNil sets the value for Timestamp to be an explicit nil
func (o *ExtendedDealUnitDto) SetTimestampNil() {
	o.Timestamp.Set(nil)
}

// UnsetTimestamp ensures that no value is present for Timestamp, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetTimestamp() {
	o.Timestamp.Unset()
}

// GetClosed returns the Closed field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetClosed() bool {
	if o == nil || IsNil(o.Closed) {
		var ret bool
		return ret
	}
	return *o.Closed
}

// GetClosedOk returns a tuple with the Closed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetClosedOk() (*bool, bool) {
	if o == nil || IsNil(o.Closed) {
		return nil, false
	}
	return o.Closed, true
}

// HasClosed returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasClosed() bool {
	if o != nil && !IsNil(o.Closed) {
		return true
	}

	return false
}

// SetClosed gets a reference to the given bool and assigns it to the Closed field.
func (o *ExtendedDealUnitDto) SetClosed(v bool) {
	o.Closed = &v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *ExtendedDealUnitDto) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *ExtendedDealUnitDto) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetType() {
	o.Type.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *ExtendedDealUnitDto) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *ExtendedDealUnitDto) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetTitle() {
	o.Title.Unset()
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetUserId() string {
	if o == nil || IsNil(o.UserId.Get()) {
		var ret string
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableString and assigns it to the UserId field.
func (o *ExtendedDealUnitDto) SetUserId(v string) {
	o.UserId.Set(&v)
}
// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *ExtendedDealUnitDto) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetUserId() {
	o.UserId.Unset()
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *ExtendedDealUnitDto) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *ExtendedDealUnitDto) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetCurrencyId() string {
	if o == nil || IsNil(o.CurrencyId.Get()) {
		var ret string
		return ret
	}
	return *o.CurrencyId.Get()
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetCurrencyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrencyId.Get(), o.CurrencyId.IsSet()
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasCurrencyId() bool {
	if o != nil && o.CurrencyId.IsSet() {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given NullableString and assigns it to the CurrencyId field.
func (o *ExtendedDealUnitDto) SetCurrencyId(v string) {
	o.CurrencyId.Set(&v)
}
// SetCurrencyIdNil sets the value for CurrencyId to be an explicit nil
func (o *ExtendedDealUnitDto) SetCurrencyIdNil() {
	o.CurrencyId.Set(nil)
}

// UnsetCurrencyId ensures that no value is present for CurrencyId, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetCurrencyId() {
	o.CurrencyId.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ExtendedDealUnitDto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ExtendedDealUnitDto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetDescription() {
	o.Description.Unset()
}

// GetPriceListId returns the PriceListId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetPriceListId() string {
	if o == nil || IsNil(o.PriceListId.Get()) {
		var ret string
		return ret
	}
	return *o.PriceListId.Get()
}

// GetPriceListIdOk returns a tuple with the PriceListId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetPriceListIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceListId.Get(), o.PriceListId.IsSet()
}

// HasPriceListId returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasPriceListId() bool {
	if o != nil && o.PriceListId.IsSet() {
		return true
	}

	return false
}

// SetPriceListId gets a reference to the given NullableString and assigns it to the PriceListId field.
func (o *ExtendedDealUnitDto) SetPriceListId(v string) {
	o.PriceListId.Set(&v)
}
// SetPriceListIdNil sets the value for PriceListId to be an explicit nil
func (o *ExtendedDealUnitDto) SetPriceListIdNil() {
	o.PriceListId.Set(nil)
}

// UnsetPriceListId ensures that no value is present for PriceListId, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetPriceListId() {
	o.PriceListId.Unset()
}

// GetEnrollmentId returns the EnrollmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetEnrollmentId() string {
	if o == nil || IsNil(o.EnrollmentId.Get()) {
		var ret string
		return ret
	}
	return *o.EnrollmentId.Get()
}

// GetEnrollmentIdOk returns a tuple with the EnrollmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetEnrollmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnrollmentId.Get(), o.EnrollmentId.IsSet()
}

// HasEnrollmentId returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasEnrollmentId() bool {
	if o != nil && o.EnrollmentId.IsSet() {
		return true
	}

	return false
}

// SetEnrollmentId gets a reference to the given NullableString and assigns it to the EnrollmentId field.
func (o *ExtendedDealUnitDto) SetEnrollmentId(v string) {
	o.EnrollmentId.Set(&v)
}
// SetEnrollmentIdNil sets the value for EnrollmentId to be an explicit nil
func (o *ExtendedDealUnitDto) SetEnrollmentIdNil() {
	o.EnrollmentId.Set(nil)
}

// UnsetEnrollmentId ensures that no value is present for EnrollmentId, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetEnrollmentId() {
	o.EnrollmentId.Unset()
}

// GetIndividualId returns the IndividualId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetIndividualId() string {
	if o == nil || IsNil(o.IndividualId.Get()) {
		var ret string
		return ret
	}
	return *o.IndividualId.Get()
}

// GetIndividualIdOk returns a tuple with the IndividualId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetIndividualIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IndividualId.Get(), o.IndividualId.IsSet()
}

// HasIndividualId returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasIndividualId() bool {
	if o != nil && o.IndividualId.IsSet() {
		return true
	}

	return false
}

// SetIndividualId gets a reference to the given NullableString and assigns it to the IndividualId field.
func (o *ExtendedDealUnitDto) SetIndividualId(v string) {
	o.IndividualId.Set(&v)
}
// SetIndividualIdNil sets the value for IndividualId to be an explicit nil
func (o *ExtendedDealUnitDto) SetIndividualIdNil() {
	o.IndividualId.Set(nil)
}

// UnsetIndividualId ensures that no value is present for IndividualId, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetIndividualId() {
	o.IndividualId.Unset()
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId.Get()) {
		var ret string
		return ret
	}
	return *o.OrganizationId.Get()
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationId.Get(), o.OrganizationId.IsSet()
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasOrganizationId() bool {
	if o != nil && o.OrganizationId.IsSet() {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given NullableString and assigns it to the OrganizationId field.
func (o *ExtendedDealUnitDto) SetOrganizationId(v string) {
	o.OrganizationId.Set(&v)
}
// SetOrganizationIdNil sets the value for OrganizationId to be an explicit nil
func (o *ExtendedDealUnitDto) SetOrganizationIdNil() {
	o.OrganizationId.Set(nil)
}

// UnsetOrganizationId ensures that no value is present for OrganizationId, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetOrganizationId() {
	o.OrganizationId.Unset()
}

// GetReceiverTenantId returns the ReceiverTenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetReceiverTenantId() string {
	if o == nil || IsNil(o.ReceiverTenantId.Get()) {
		var ret string
		return ret
	}
	return *o.ReceiverTenantId.Get()
}

// GetReceiverTenantIdOk returns a tuple with the ReceiverTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetReceiverTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiverTenantId.Get(), o.ReceiverTenantId.IsSet()
}

// HasReceiverTenantId returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasReceiverTenantId() bool {
	if o != nil && o.ReceiverTenantId.IsSet() {
		return true
	}

	return false
}

// SetReceiverTenantId gets a reference to the given NullableString and assigns it to the ReceiverTenantId field.
func (o *ExtendedDealUnitDto) SetReceiverTenantId(v string) {
	o.ReceiverTenantId.Set(&v)
}
// SetReceiverTenantIdNil sets the value for ReceiverTenantId to be an explicit nil
func (o *ExtendedDealUnitDto) SetReceiverTenantIdNil() {
	o.ReceiverTenantId.Set(nil)
}

// UnsetReceiverTenantId ensures that no value is present for ReceiverTenantId, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetReceiverTenantId() {
	o.ReceiverTenantId.Unset()
}

// GetFirstName returns the FirstName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetFirstName() string {
	if o == nil || IsNil(o.FirstName.Get()) {
		var ret string
		return ret
	}
	return *o.FirstName.Get()
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstName.Get(), o.FirstName.IsSet()
}

// HasFirstName returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasFirstName() bool {
	if o != nil && o.FirstName.IsSet() {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given NullableString and assigns it to the FirstName field.
func (o *ExtendedDealUnitDto) SetFirstName(v string) {
	o.FirstName.Set(&v)
}
// SetFirstNameNil sets the value for FirstName to be an explicit nil
func (o *ExtendedDealUnitDto) SetFirstNameNil() {
	o.FirstName.Set(nil)
}

// UnsetFirstName ensures that no value is present for FirstName, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetFirstName() {
	o.FirstName.Unset()
}

// GetLastName returns the LastName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetLastName() string {
	if o == nil || IsNil(o.LastName.Get()) {
		var ret string
		return ret
	}
	return *o.LastName.Get()
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastName.Get(), o.LastName.IsSet()
}

// HasLastName returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasLastName() bool {
	if o != nil && o.LastName.IsSet() {
		return true
	}

	return false
}

// SetLastName gets a reference to the given NullableString and assigns it to the LastName field.
func (o *ExtendedDealUnitDto) SetLastName(v string) {
	o.LastName.Set(&v)
}
// SetLastNameNil sets the value for LastName to be an explicit nil
func (o *ExtendedDealUnitDto) SetLastNameNil() {
	o.LastName.Set(nil)
}

// UnsetLastName ensures that no value is present for LastName, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetLastName() {
	o.LastName.Unset()
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName.Get()) {
		var ret string
		return ret
	}
	return *o.CompanyName.Get()
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetCompanyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyName.Get(), o.CompanyName.IsSet()
}

// HasCompanyName returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasCompanyName() bool {
	if o != nil && o.CompanyName.IsSet() {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given NullableString and assigns it to the CompanyName field.
func (o *ExtendedDealUnitDto) SetCompanyName(v string) {
	o.CompanyName.Set(&v)
}
// SetCompanyNameNil sets the value for CompanyName to be an explicit nil
func (o *ExtendedDealUnitDto) SetCompanyNameNil() {
	o.CompanyName.Set(nil)
}

// UnsetCompanyName ensures that no value is present for CompanyName, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetCompanyName() {
	o.CompanyName.Unset()
}

// GetBillingEmail returns the BillingEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetBillingEmail() string {
	if o == nil || IsNil(o.BillingEmail.Get()) {
		var ret string
		return ret
	}
	return *o.BillingEmail.Get()
}

// GetBillingEmailOk returns a tuple with the BillingEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetBillingEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingEmail.Get(), o.BillingEmail.IsSet()
}

// HasBillingEmail returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasBillingEmail() bool {
	if o != nil && o.BillingEmail.IsSet() {
		return true
	}

	return false
}

// SetBillingEmail gets a reference to the given NullableString and assigns it to the BillingEmail field.
func (o *ExtendedDealUnitDto) SetBillingEmail(v string) {
	o.BillingEmail.Set(&v)
}
// SetBillingEmailNil sets the value for BillingEmail to be an explicit nil
func (o *ExtendedDealUnitDto) SetBillingEmailNil() {
	o.BillingEmail.Set(nil)
}

// UnsetBillingEmail ensures that no value is present for BillingEmail, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetBillingEmail() {
	o.BillingEmail.Unset()
}

// GetAddressLine1 returns the AddressLine1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetAddressLine1() string {
	if o == nil || IsNil(o.AddressLine1.Get()) {
		var ret string
		return ret
	}
	return *o.AddressLine1.Get()
}

// GetAddressLine1Ok returns a tuple with the AddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetAddressLine1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressLine1.Get(), o.AddressLine1.IsSet()
}

// HasAddressLine1 returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasAddressLine1() bool {
	if o != nil && o.AddressLine1.IsSet() {
		return true
	}

	return false
}

// SetAddressLine1 gets a reference to the given NullableString and assigns it to the AddressLine1 field.
func (o *ExtendedDealUnitDto) SetAddressLine1(v string) {
	o.AddressLine1.Set(&v)
}
// SetAddressLine1Nil sets the value for AddressLine1 to be an explicit nil
func (o *ExtendedDealUnitDto) SetAddressLine1Nil() {
	o.AddressLine1.Set(nil)
}

// UnsetAddressLine1 ensures that no value is present for AddressLine1, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetAddressLine1() {
	o.AddressLine1.Unset()
}

// GetAddressLine2 returns the AddressLine2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetAddressLine2() string {
	if o == nil || IsNil(o.AddressLine2.Get()) {
		var ret string
		return ret
	}
	return *o.AddressLine2.Get()
}

// GetAddressLine2Ok returns a tuple with the AddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetAddressLine2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressLine2.Get(), o.AddressLine2.IsSet()
}

// HasAddressLine2 returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasAddressLine2() bool {
	if o != nil && o.AddressLine2.IsSet() {
		return true
	}

	return false
}

// SetAddressLine2 gets a reference to the given NullableString and assigns it to the AddressLine2 field.
func (o *ExtendedDealUnitDto) SetAddressLine2(v string) {
	o.AddressLine2.Set(&v)
}
// SetAddressLine2Nil sets the value for AddressLine2 to be an explicit nil
func (o *ExtendedDealUnitDto) SetAddressLine2Nil() {
	o.AddressLine2.Set(nil)
}

// UnsetAddressLine2 ensures that no value is present for AddressLine2, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetAddressLine2() {
	o.AddressLine2.Unset()
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode.Get()) {
		var ret string
		return ret
	}
	return *o.PostalCode.Get()
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PostalCode.Get(), o.PostalCode.IsSet()
}

// HasPostalCode returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasPostalCode() bool {
	if o != nil && o.PostalCode.IsSet() {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given NullableString and assigns it to the PostalCode field.
func (o *ExtendedDealUnitDto) SetPostalCode(v string) {
	o.PostalCode.Set(&v)
}
// SetPostalCodeNil sets the value for PostalCode to be an explicit nil
func (o *ExtendedDealUnitDto) SetPostalCodeNil() {
	o.PostalCode.Set(nil)
}

// UnsetPostalCode ensures that no value is present for PostalCode, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetPostalCode() {
	o.PostalCode.Unset()
}

// GetCountryId returns the CountryId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetCountryId() string {
	if o == nil || IsNil(o.CountryId.Get()) {
		var ret string
		return ret
	}
	return *o.CountryId.Get()
}

// GetCountryIdOk returns a tuple with the CountryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetCountryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryId.Get(), o.CountryId.IsSet()
}

// HasCountryId returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasCountryId() bool {
	if o != nil && o.CountryId.IsSet() {
		return true
	}

	return false
}

// SetCountryId gets a reference to the given NullableString and assigns it to the CountryId field.
func (o *ExtendedDealUnitDto) SetCountryId(v string) {
	o.CountryId.Set(&v)
}
// SetCountryIdNil sets the value for CountryId to be an explicit nil
func (o *ExtendedDealUnitDto) SetCountryIdNil() {
	o.CountryId.Set(nil)
}

// UnsetCountryId ensures that no value is present for CountryId, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetCountryId() {
	o.CountryId.Unset()
}

// GetStateId returns the StateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetStateId() string {
	if o == nil || IsNil(o.StateId.Get()) {
		var ret string
		return ret
	}
	return *o.StateId.Get()
}

// GetStateIdOk returns a tuple with the StateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetStateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StateId.Get(), o.StateId.IsSet()
}

// HasStateId returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasStateId() bool {
	if o != nil && o.StateId.IsSet() {
		return true
	}

	return false
}

// SetStateId gets a reference to the given NullableString and assigns it to the StateId field.
func (o *ExtendedDealUnitDto) SetStateId(v string) {
	o.StateId.Set(&v)
}
// SetStateIdNil sets the value for StateId to be an explicit nil
func (o *ExtendedDealUnitDto) SetStateIdNil() {
	o.StateId.Set(nil)
}

// UnsetStateId ensures that no value is present for StateId, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetStateId() {
	o.StateId.Unset()
}

// GetCityId returns the CityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetCityId() string {
	if o == nil || IsNil(o.CityId.Get()) {
		var ret string
		return ret
	}
	return *o.CityId.Get()
}

// GetCityIdOk returns a tuple with the CityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetCityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CityId.Get(), o.CityId.IsSet()
}

// HasCityId returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasCityId() bool {
	if o != nil && o.CityId.IsSet() {
		return true
	}

	return false
}

// SetCityId gets a reference to the given NullableString and assigns it to the CityId field.
func (o *ExtendedDealUnitDto) SetCityId(v string) {
	o.CityId.Set(&v)
}
// SetCityIdNil sets the value for CityId to be an explicit nil
func (o *ExtendedDealUnitDto) SetCityIdNil() {
	o.CityId.Set(nil)
}

// UnsetCityId ensures that no value is present for CityId, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetCityId() {
	o.CityId.Unset()
}

// GetCustomerNotes returns the CustomerNotes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetCustomerNotes() string {
	if o == nil || IsNil(o.CustomerNotes.Get()) {
		var ret string
		return ret
	}
	return *o.CustomerNotes.Get()
}

// GetCustomerNotesOk returns a tuple with the CustomerNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetCustomerNotesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomerNotes.Get(), o.CustomerNotes.IsSet()
}

// HasCustomerNotes returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasCustomerNotes() bool {
	if o != nil && o.CustomerNotes.IsSet() {
		return true
	}

	return false
}

// SetCustomerNotes gets a reference to the given NullableString and assigns it to the CustomerNotes field.
func (o *ExtendedDealUnitDto) SetCustomerNotes(v string) {
	o.CustomerNotes.Set(&v)
}
// SetCustomerNotesNil sets the value for CustomerNotes to be an explicit nil
func (o *ExtendedDealUnitDto) SetCustomerNotesNil() {
	o.CustomerNotes.Set(nil)
}

// UnsetCustomerNotes ensures that no value is present for CustomerNotes, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetCustomerNotes() {
	o.CustomerNotes.Unset()
}

// GetForexRate returns the ForexRate field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetForexRate() float64 {
	if o == nil || IsNil(o.ForexRate) {
		var ret float64
		return ret
	}
	return *o.ForexRate
}

// GetForexRateOk returns a tuple with the ForexRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetForexRateOk() (*float64, bool) {
	if o == nil || IsNil(o.ForexRate) {
		return nil, false
	}
	return o.ForexRate, true
}

// HasForexRate returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasForexRate() bool {
	if o != nil && !IsNil(o.ForexRate) {
		return true
	}

	return false
}

// SetForexRate gets a reference to the given float64 and assigns it to the ForexRate field.
func (o *ExtendedDealUnitDto) SetForexRate(v float64) {
	o.ForexRate = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotal() float64 {
	if o == nil || IsNil(o.Total) {
		var ret float64
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalOk() (*float64, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float64 and assigns it to the Total field.
func (o *ExtendedDealUnitDto) SetTotal(v float64) {
	o.Total = &v
}

// GetTotalTaxes returns the TotalTaxes field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalTaxes() float64 {
	if o == nil || IsNil(o.TotalTaxes) {
		var ret float64
		return ret
	}
	return *o.TotalTaxes
}

// GetTotalTaxesOk returns a tuple with the TotalTaxes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalTaxesOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalTaxes) {
		return nil, false
	}
	return o.TotalTaxes, true
}

// HasTotalTaxes returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalTaxes() bool {
	if o != nil && !IsNil(o.TotalTaxes) {
		return true
	}

	return false
}

// SetTotalTaxes gets a reference to the given float64 and assigns it to the TotalTaxes field.
func (o *ExtendedDealUnitDto) SetTotalTaxes(v float64) {
	o.TotalTaxes = &v
}

// GetTotalTaxBase returns the TotalTaxBase field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalTaxBase() float64 {
	if o == nil || IsNil(o.TotalTaxBase) {
		var ret float64
		return ret
	}
	return *o.TotalTaxBase
}

// GetTotalTaxBaseOk returns a tuple with the TotalTaxBase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalTaxBaseOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalTaxBase) {
		return nil, false
	}
	return o.TotalTaxBase, true
}

// HasTotalTaxBase returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalTaxBase() bool {
	if o != nil && !IsNil(o.TotalTaxBase) {
		return true
	}

	return false
}

// SetTotalTaxBase gets a reference to the given float64 and assigns it to the TotalTaxBase field.
func (o *ExtendedDealUnitDto) SetTotalTaxBase(v float64) {
	o.TotalTaxBase = &v
}

// GetTotalDiscounts returns the TotalDiscounts field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalDiscounts() float64 {
	if o == nil || IsNil(o.TotalDiscounts) {
		var ret float64
		return ret
	}
	return *o.TotalDiscounts
}

// GetTotalDiscountsOk returns a tuple with the TotalDiscounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalDiscountsOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalDiscounts) {
		return nil, false
	}
	return o.TotalDiscounts, true
}

// HasTotalDiscounts returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalDiscounts() bool {
	if o != nil && !IsNil(o.TotalDiscounts) {
		return true
	}

	return false
}

// SetTotalDiscounts gets a reference to the given float64 and assigns it to the TotalDiscounts field.
func (o *ExtendedDealUnitDto) SetTotalDiscounts(v float64) {
	o.TotalDiscounts = &v
}

// GetTotalSurcharges returns the TotalSurcharges field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalSurcharges() float64 {
	if o == nil || IsNil(o.TotalSurcharges) {
		var ret float64
		return ret
	}
	return *o.TotalSurcharges
}

// GetTotalSurchargesOk returns a tuple with the TotalSurcharges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalSurchargesOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalSurcharges) {
		return nil, false
	}
	return o.TotalSurcharges, true
}

// HasTotalSurcharges returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalSurcharges() bool {
	if o != nil && !IsNil(o.TotalSurcharges) {
		return true
	}

	return false
}

// SetTotalSurcharges gets a reference to the given float64 and assigns it to the TotalSurcharges field.
func (o *ExtendedDealUnitDto) SetTotalSurcharges(v float64) {
	o.TotalSurcharges = &v
}

// GetTotalGlobalDiscounts returns the TotalGlobalDiscounts field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalGlobalDiscounts() float64 {
	if o == nil || IsNil(o.TotalGlobalDiscounts) {
		var ret float64
		return ret
	}
	return *o.TotalGlobalDiscounts
}

// GetTotalGlobalDiscountsOk returns a tuple with the TotalGlobalDiscounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalGlobalDiscountsOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalGlobalDiscounts) {
		return nil, false
	}
	return o.TotalGlobalDiscounts, true
}

// HasTotalGlobalDiscounts returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalGlobalDiscounts() bool {
	if o != nil && !IsNil(o.TotalGlobalDiscounts) {
		return true
	}

	return false
}

// SetTotalGlobalDiscounts gets a reference to the given float64 and assigns it to the TotalGlobalDiscounts field.
func (o *ExtendedDealUnitDto) SetTotalGlobalDiscounts(v float64) {
	o.TotalGlobalDiscounts = &v
}

// GetTotalGlobalSurcharges returns the TotalGlobalSurcharges field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalGlobalSurcharges() float64 {
	if o == nil || IsNil(o.TotalGlobalSurcharges) {
		var ret float64
		return ret
	}
	return *o.TotalGlobalSurcharges
}

// GetTotalGlobalSurchargesOk returns a tuple with the TotalGlobalSurcharges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalGlobalSurchargesOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalGlobalSurcharges) {
		return nil, false
	}
	return o.TotalGlobalSurcharges, true
}

// HasTotalGlobalSurcharges returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalGlobalSurcharges() bool {
	if o != nil && !IsNil(o.TotalGlobalSurcharges) {
		return true
	}

	return false
}

// SetTotalGlobalSurcharges gets a reference to the given float64 and assigns it to the TotalGlobalSurcharges field.
func (o *ExtendedDealUnitDto) SetTotalGlobalSurcharges(v float64) {
	o.TotalGlobalSurcharges = &v
}

// GetTotalTaxesInUsd returns the TotalTaxesInUsd field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalTaxesInUsd() float64 {
	if o == nil || IsNil(o.TotalTaxesInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalTaxesInUsd
}

// GetTotalTaxesInUsdOk returns a tuple with the TotalTaxesInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalTaxesInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalTaxesInUsd) {
		return nil, false
	}
	return o.TotalTaxesInUsd, true
}

// HasTotalTaxesInUsd returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalTaxesInUsd() bool {
	if o != nil && !IsNil(o.TotalTaxesInUsd) {
		return true
	}

	return false
}

// SetTotalTaxesInUsd gets a reference to the given float64 and assigns it to the TotalTaxesInUsd field.
func (o *ExtendedDealUnitDto) SetTotalTaxesInUsd(v float64) {
	o.TotalTaxesInUsd = &v
}

// GetTotalAmountInUsd returns the TotalAmountInUsd field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalAmountInUsd() float64 {
	if o == nil || IsNil(o.TotalAmountInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalAmountInUsd
}

// GetTotalAmountInUsdOk returns a tuple with the TotalAmountInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalAmountInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalAmountInUsd) {
		return nil, false
	}
	return o.TotalAmountInUsd, true
}

// HasTotalAmountInUsd returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalAmountInUsd() bool {
	if o != nil && !IsNil(o.TotalAmountInUsd) {
		return true
	}

	return false
}

// SetTotalAmountInUsd gets a reference to the given float64 and assigns it to the TotalAmountInUsd field.
func (o *ExtendedDealUnitDto) SetTotalAmountInUsd(v float64) {
	o.TotalAmountInUsd = &v
}

// GetTotalProfitInUsd returns the TotalProfitInUsd field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalProfitInUsd() float64 {
	if o == nil || IsNil(o.TotalProfitInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalProfitInUsd
}

// GetTotalProfitInUsdOk returns a tuple with the TotalProfitInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalProfitInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalProfitInUsd) {
		return nil, false
	}
	return o.TotalProfitInUsd, true
}

// HasTotalProfitInUsd returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalProfitInUsd() bool {
	if o != nil && !IsNil(o.TotalProfitInUsd) {
		return true
	}

	return false
}

// SetTotalProfitInUsd gets a reference to the given float64 and assigns it to the TotalProfitInUsd field.
func (o *ExtendedDealUnitDto) SetTotalProfitInUsd(v float64) {
	o.TotalProfitInUsd = &v
}

// GetTotalTaxBaseInUsd returns the TotalTaxBaseInUsd field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalTaxBaseInUsd() float64 {
	if o == nil || IsNil(o.TotalTaxBaseInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalTaxBaseInUsd
}

// GetTotalTaxBaseInUsdOk returns a tuple with the TotalTaxBaseInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalTaxBaseInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalTaxBaseInUsd) {
		return nil, false
	}
	return o.TotalTaxBaseInUsd, true
}

// HasTotalTaxBaseInUsd returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalTaxBaseInUsd() bool {
	if o != nil && !IsNil(o.TotalTaxBaseInUsd) {
		return true
	}

	return false
}

// SetTotalTaxBaseInUsd gets a reference to the given float64 and assigns it to the TotalTaxBaseInUsd field.
func (o *ExtendedDealUnitDto) SetTotalTaxBaseInUsd(v float64) {
	o.TotalTaxBaseInUsd = &v
}

// GetTotalDiscountsInUsd returns the TotalDiscountsInUsd field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalDiscountsInUsd() float64 {
	if o == nil || IsNil(o.TotalDiscountsInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalDiscountsInUsd
}

// GetTotalDiscountsInUsdOk returns a tuple with the TotalDiscountsInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalDiscountsInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalDiscountsInUsd) {
		return nil, false
	}
	return o.TotalDiscountsInUsd, true
}

// HasTotalDiscountsInUsd returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalDiscountsInUsd() bool {
	if o != nil && !IsNil(o.TotalDiscountsInUsd) {
		return true
	}

	return false
}

// SetTotalDiscountsInUsd gets a reference to the given float64 and assigns it to the TotalDiscountsInUsd field.
func (o *ExtendedDealUnitDto) SetTotalDiscountsInUsd(v float64) {
	o.TotalDiscountsInUsd = &v
}

// GetTotalSurchargesInUsd returns the TotalSurchargesInUsd field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalSurchargesInUsd() float64 {
	if o == nil || IsNil(o.TotalSurchargesInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalSurchargesInUsd
}

// GetTotalSurchargesInUsdOk returns a tuple with the TotalSurchargesInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalSurchargesInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalSurchargesInUsd) {
		return nil, false
	}
	return o.TotalSurchargesInUsd, true
}

// HasTotalSurchargesInUsd returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalSurchargesInUsd() bool {
	if o != nil && !IsNil(o.TotalSurchargesInUsd) {
		return true
	}

	return false
}

// SetTotalSurchargesInUsd gets a reference to the given float64 and assigns it to the TotalSurchargesInUsd field.
func (o *ExtendedDealUnitDto) SetTotalSurchargesInUsd(v float64) {
	o.TotalSurchargesInUsd = &v
}

// GetTotalDetailAmountInUsd returns the TotalDetailAmountInUsd field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalDetailAmountInUsd() float64 {
	if o == nil || IsNil(o.TotalDetailAmountInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalDetailAmountInUsd
}

// GetTotalDetailAmountInUsdOk returns a tuple with the TotalDetailAmountInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalDetailAmountInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalDetailAmountInUsd) {
		return nil, false
	}
	return o.TotalDetailAmountInUsd, true
}

// HasTotalDetailAmountInUsd returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalDetailAmountInUsd() bool {
	if o != nil && !IsNil(o.TotalDetailAmountInUsd) {
		return true
	}

	return false
}

// SetTotalDetailAmountInUsd gets a reference to the given float64 and assigns it to the TotalDetailAmountInUsd field.
func (o *ExtendedDealUnitDto) SetTotalDetailAmountInUsd(v float64) {
	o.TotalDetailAmountInUsd = &v
}

// GetTotalGlobalDiscountsInUsd returns the TotalGlobalDiscountsInUsd field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalGlobalDiscountsInUsd() float64 {
	if o == nil || IsNil(o.TotalGlobalDiscountsInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalGlobalDiscountsInUsd
}

// GetTotalGlobalDiscountsInUsdOk returns a tuple with the TotalGlobalDiscountsInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalGlobalDiscountsInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalGlobalDiscountsInUsd) {
		return nil, false
	}
	return o.TotalGlobalDiscountsInUsd, true
}

// HasTotalGlobalDiscountsInUsd returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalGlobalDiscountsInUsd() bool {
	if o != nil && !IsNil(o.TotalGlobalDiscountsInUsd) {
		return true
	}

	return false
}

// SetTotalGlobalDiscountsInUsd gets a reference to the given float64 and assigns it to the TotalGlobalDiscountsInUsd field.
func (o *ExtendedDealUnitDto) SetTotalGlobalDiscountsInUsd(v float64) {
	o.TotalGlobalDiscountsInUsd = &v
}

// GetTotalGlobalSurchargesInUsd returns the TotalGlobalSurchargesInUsd field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalGlobalSurchargesInUsd() float64 {
	if o == nil || IsNil(o.TotalGlobalSurchargesInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalGlobalSurchargesInUsd
}

// GetTotalGlobalSurchargesInUsdOk returns a tuple with the TotalGlobalSurchargesInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalGlobalSurchargesInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalGlobalSurchargesInUsd) {
		return nil, false
	}
	return o.TotalGlobalSurchargesInUsd, true
}

// HasTotalGlobalSurchargesInUsd returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalGlobalSurchargesInUsd() bool {
	if o != nil && !IsNil(o.TotalGlobalSurchargesInUsd) {
		return true
	}

	return false
}

// SetTotalGlobalSurchargesInUsd gets a reference to the given float64 and assigns it to the TotalGlobalSurchargesInUsd field.
func (o *ExtendedDealUnitDto) SetTotalGlobalSurchargesInUsd(v float64) {
	o.TotalGlobalSurchargesInUsd = &v
}

// GetTotalWithholdingTaxesInUsd returns the TotalWithholdingTaxesInUsd field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalWithholdingTaxesInUsd() float64 {
	if o == nil || IsNil(o.TotalWithholdingTaxesInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalWithholdingTaxesInUsd
}

// GetTotalWithholdingTaxesInUsdOk returns a tuple with the TotalWithholdingTaxesInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalWithholdingTaxesInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalWithholdingTaxesInUsd) {
		return nil, false
	}
	return o.TotalWithholdingTaxesInUsd, true
}

// HasTotalWithholdingTaxesInUsd returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalWithholdingTaxesInUsd() bool {
	if o != nil && !IsNil(o.TotalWithholdingTaxesInUsd) {
		return true
	}

	return false
}

// SetTotalWithholdingTaxesInUsd gets a reference to the given float64 and assigns it to the TotalWithholdingTaxesInUsd field.
func (o *ExtendedDealUnitDto) SetTotalWithholdingTaxesInUsd(v float64) {
	o.TotalWithholdingTaxesInUsd = &v
}

// GetTotalShippingCostInUsd returns the TotalShippingCostInUsd field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalShippingCostInUsd() float64 {
	if o == nil || IsNil(o.TotalShippingCostInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalShippingCostInUsd
}

// GetTotalShippingCostInUsdOk returns a tuple with the TotalShippingCostInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalShippingCostInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalShippingCostInUsd) {
		return nil, false
	}
	return o.TotalShippingCostInUsd, true
}

// HasTotalShippingCostInUsd returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalShippingCostInUsd() bool {
	if o != nil && !IsNil(o.TotalShippingCostInUsd) {
		return true
	}

	return false
}

// SetTotalShippingCostInUsd gets a reference to the given float64 and assigns it to the TotalShippingCostInUsd field.
func (o *ExtendedDealUnitDto) SetTotalShippingCostInUsd(v float64) {
	o.TotalShippingCostInUsd = &v
}

// GetTotalShippingTaxesInUsd returns the TotalShippingTaxesInUsd field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalShippingTaxesInUsd() float64 {
	if o == nil || IsNil(o.TotalShippingTaxesInUsd) {
		var ret float64
		return ret
	}
	return *o.TotalShippingTaxesInUsd
}

// GetTotalShippingTaxesInUsdOk returns a tuple with the TotalShippingTaxesInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalShippingTaxesInUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalShippingTaxesInUsd) {
		return nil, false
	}
	return o.TotalShippingTaxesInUsd, true
}

// HasTotalShippingTaxesInUsd returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalShippingTaxesInUsd() bool {
	if o != nil && !IsNil(o.TotalShippingTaxesInUsd) {
		return true
	}

	return false
}

// SetTotalShippingTaxesInUsd gets a reference to the given float64 and assigns it to the TotalShippingTaxesInUsd field.
func (o *ExtendedDealUnitDto) SetTotalShippingTaxesInUsd(v float64) {
	o.TotalShippingTaxesInUsd = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetCurrency() Currency {
	if o == nil || IsNil(o.Currency) {
		var ret Currency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given Currency and assigns it to the Currency field.
func (o *ExtendedDealUnitDto) SetCurrency(v Currency) {
	o.Currency = &v
}

// GetTotalInUsd returns the TotalInUsd field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalInUsd() Money {
	if o == nil || IsNil(o.TotalInUsd) {
		var ret Money
		return ret
	}
	return *o.TotalInUsd
}

// GetTotalInUsdOk returns a tuple with the TotalInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalInUsdOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalInUsd) {
		return nil, false
	}
	return o.TotalInUsd, true
}

// HasTotalInUsd returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalInUsd() bool {
	if o != nil && !IsNil(o.TotalInUsd) {
		return true
	}

	return false
}

// SetTotalInUsd gets a reference to the given Money and assigns it to the TotalInUsd field.
func (o *ExtendedDealUnitDto) SetTotalInUsd(v Money) {
	o.TotalInUsd = &v
}

// GetTotalTaxAmountInUsd returns the TotalTaxAmountInUsd field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalTaxAmountInUsd() Money {
	if o == nil || IsNil(o.TotalTaxAmountInUsd) {
		var ret Money
		return ret
	}
	return *o.TotalTaxAmountInUsd
}

// GetTotalTaxAmountInUsdOk returns a tuple with the TotalTaxAmountInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalTaxAmountInUsdOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalTaxAmountInUsd) {
		return nil, false
	}
	return o.TotalTaxAmountInUsd, true
}

// HasTotalTaxAmountInUsd returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalTaxAmountInUsd() bool {
	if o != nil && !IsNil(o.TotalTaxAmountInUsd) {
		return true
	}

	return false
}

// SetTotalTaxAmountInUsd gets a reference to the given Money and assigns it to the TotalTaxAmountInUsd field.
func (o *ExtendedDealUnitDto) SetTotalTaxAmountInUsd(v Money) {
	o.TotalTaxAmountInUsd = &v
}

// GetTotalTaxBaseAmountInUsd returns the TotalTaxBaseAmountInUsd field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalTaxBaseAmountInUsd() Money {
	if o == nil || IsNil(o.TotalTaxBaseAmountInUsd) {
		var ret Money
		return ret
	}
	return *o.TotalTaxBaseAmountInUsd
}

// GetTotalTaxBaseAmountInUsdOk returns a tuple with the TotalTaxBaseAmountInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalTaxBaseAmountInUsdOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalTaxBaseAmountInUsd) {
		return nil, false
	}
	return o.TotalTaxBaseAmountInUsd, true
}

// HasTotalTaxBaseAmountInUsd returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalTaxBaseAmountInUsd() bool {
	if o != nil && !IsNil(o.TotalTaxBaseAmountInUsd) {
		return true
	}

	return false
}

// SetTotalTaxBaseAmountInUsd gets a reference to the given Money and assigns it to the TotalTaxBaseAmountInUsd field.
func (o *ExtendedDealUnitDto) SetTotalTaxBaseAmountInUsd(v Money) {
	o.TotalTaxBaseAmountInUsd = &v
}

// GetTotalDiscountsAmountInUsd returns the TotalDiscountsAmountInUsd field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalDiscountsAmountInUsd() Money {
	if o == nil || IsNil(o.TotalDiscountsAmountInUsd) {
		var ret Money
		return ret
	}
	return *o.TotalDiscountsAmountInUsd
}

// GetTotalDiscountsAmountInUsdOk returns a tuple with the TotalDiscountsAmountInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalDiscountsAmountInUsdOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalDiscountsAmountInUsd) {
		return nil, false
	}
	return o.TotalDiscountsAmountInUsd, true
}

// HasTotalDiscountsAmountInUsd returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalDiscountsAmountInUsd() bool {
	if o != nil && !IsNil(o.TotalDiscountsAmountInUsd) {
		return true
	}

	return false
}

// SetTotalDiscountsAmountInUsd gets a reference to the given Money and assigns it to the TotalDiscountsAmountInUsd field.
func (o *ExtendedDealUnitDto) SetTotalDiscountsAmountInUsd(v Money) {
	o.TotalDiscountsAmountInUsd = &v
}

// GetTotalSurchargesAmountInUsd returns the TotalSurchargesAmountInUsd field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalSurchargesAmountInUsd() Money {
	if o == nil || IsNil(o.TotalSurchargesAmountInUsd) {
		var ret Money
		return ret
	}
	return *o.TotalSurchargesAmountInUsd
}

// GetTotalSurchargesAmountInUsdOk returns a tuple with the TotalSurchargesAmountInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalSurchargesAmountInUsdOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalSurchargesAmountInUsd) {
		return nil, false
	}
	return o.TotalSurchargesAmountInUsd, true
}

// HasTotalSurchargesAmountInUsd returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalSurchargesAmountInUsd() bool {
	if o != nil && !IsNil(o.TotalSurchargesAmountInUsd) {
		return true
	}

	return false
}

// SetTotalSurchargesAmountInUsd gets a reference to the given Money and assigns it to the TotalSurchargesAmountInUsd field.
func (o *ExtendedDealUnitDto) SetTotalSurchargesAmountInUsd(v Money) {
	o.TotalSurchargesAmountInUsd = &v
}

// GetTotalGlobalDiscountsAmountInUsd returns the TotalGlobalDiscountsAmountInUsd field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalGlobalDiscountsAmountInUsd() Money {
	if o == nil || IsNil(o.TotalGlobalDiscountsAmountInUsd) {
		var ret Money
		return ret
	}
	return *o.TotalGlobalDiscountsAmountInUsd
}

// GetTotalGlobalDiscountsAmountInUsdOk returns a tuple with the TotalGlobalDiscountsAmountInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalGlobalDiscountsAmountInUsdOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalGlobalDiscountsAmountInUsd) {
		return nil, false
	}
	return o.TotalGlobalDiscountsAmountInUsd, true
}

// HasTotalGlobalDiscountsAmountInUsd returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalGlobalDiscountsAmountInUsd() bool {
	if o != nil && !IsNil(o.TotalGlobalDiscountsAmountInUsd) {
		return true
	}

	return false
}

// SetTotalGlobalDiscountsAmountInUsd gets a reference to the given Money and assigns it to the TotalGlobalDiscountsAmountInUsd field.
func (o *ExtendedDealUnitDto) SetTotalGlobalDiscountsAmountInUsd(v Money) {
	o.TotalGlobalDiscountsAmountInUsd = &v
}

// GetTotalGlobalSurchargesAmountInUsd returns the TotalGlobalSurchargesAmountInUsd field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalGlobalSurchargesAmountInUsd() Money {
	if o == nil || IsNil(o.TotalGlobalSurchargesAmountInUsd) {
		var ret Money
		return ret
	}
	return *o.TotalGlobalSurchargesAmountInUsd
}

// GetTotalGlobalSurchargesAmountInUsdOk returns a tuple with the TotalGlobalSurchargesAmountInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalGlobalSurchargesAmountInUsdOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalGlobalSurchargesAmountInUsd) {
		return nil, false
	}
	return o.TotalGlobalSurchargesAmountInUsd, true
}

// HasTotalGlobalSurchargesAmountInUsd returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalGlobalSurchargesAmountInUsd() bool {
	if o != nil && !IsNil(o.TotalGlobalSurchargesAmountInUsd) {
		return true
	}

	return false
}

// SetTotalGlobalSurchargesAmountInUsd gets a reference to the given Money and assigns it to the TotalGlobalSurchargesAmountInUsd field.
func (o *ExtendedDealUnitDto) SetTotalGlobalSurchargesAmountInUsd(v Money) {
	o.TotalGlobalSurchargesAmountInUsd = &v
}

// GetTotalAmount returns the TotalAmount field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalAmount() Money {
	if o == nil || IsNil(o.TotalAmount) {
		var ret Money
		return ret
	}
	return *o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalAmountOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalAmount) {
		return nil, false
	}
	return o.TotalAmount, true
}

// HasTotalAmount returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalAmount() bool {
	if o != nil && !IsNil(o.TotalAmount) {
		return true
	}

	return false
}

// SetTotalAmount gets a reference to the given Money and assigns it to the TotalAmount field.
func (o *ExtendedDealUnitDto) SetTotalAmount(v Money) {
	o.TotalAmount = &v
}

// GetTotalTaxAmount returns the TotalTaxAmount field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalTaxAmount() Money {
	if o == nil || IsNil(o.TotalTaxAmount) {
		var ret Money
		return ret
	}
	return *o.TotalTaxAmount
}

// GetTotalTaxAmountOk returns a tuple with the TotalTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalTaxAmountOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalTaxAmount) {
		return nil, false
	}
	return o.TotalTaxAmount, true
}

// HasTotalTaxAmount returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalTaxAmount() bool {
	if o != nil && !IsNil(o.TotalTaxAmount) {
		return true
	}

	return false
}

// SetTotalTaxAmount gets a reference to the given Money and assigns it to the TotalTaxAmount field.
func (o *ExtendedDealUnitDto) SetTotalTaxAmount(v Money) {
	o.TotalTaxAmount = &v
}

// GetTotalTaxBaseAmount returns the TotalTaxBaseAmount field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalTaxBaseAmount() Money {
	if o == nil || IsNil(o.TotalTaxBaseAmount) {
		var ret Money
		return ret
	}
	return *o.TotalTaxBaseAmount
}

// GetTotalTaxBaseAmountOk returns a tuple with the TotalTaxBaseAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalTaxBaseAmountOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalTaxBaseAmount) {
		return nil, false
	}
	return o.TotalTaxBaseAmount, true
}

// HasTotalTaxBaseAmount returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalTaxBaseAmount() bool {
	if o != nil && !IsNil(o.TotalTaxBaseAmount) {
		return true
	}

	return false
}

// SetTotalTaxBaseAmount gets a reference to the given Money and assigns it to the TotalTaxBaseAmount field.
func (o *ExtendedDealUnitDto) SetTotalTaxBaseAmount(v Money) {
	o.TotalTaxBaseAmount = &v
}

// GetTotalDiscountsAmount returns the TotalDiscountsAmount field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalDiscountsAmount() Money {
	if o == nil || IsNil(o.TotalDiscountsAmount) {
		var ret Money
		return ret
	}
	return *o.TotalDiscountsAmount
}

// GetTotalDiscountsAmountOk returns a tuple with the TotalDiscountsAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalDiscountsAmountOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalDiscountsAmount) {
		return nil, false
	}
	return o.TotalDiscountsAmount, true
}

// HasTotalDiscountsAmount returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalDiscountsAmount() bool {
	if o != nil && !IsNil(o.TotalDiscountsAmount) {
		return true
	}

	return false
}

// SetTotalDiscountsAmount gets a reference to the given Money and assigns it to the TotalDiscountsAmount field.
func (o *ExtendedDealUnitDto) SetTotalDiscountsAmount(v Money) {
	o.TotalDiscountsAmount = &v
}

// GetTotalSurchargesAmount returns the TotalSurchargesAmount field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalSurchargesAmount() Money {
	if o == nil || IsNil(o.TotalSurchargesAmount) {
		var ret Money
		return ret
	}
	return *o.TotalSurchargesAmount
}

// GetTotalSurchargesAmountOk returns a tuple with the TotalSurchargesAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalSurchargesAmountOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalSurchargesAmount) {
		return nil, false
	}
	return o.TotalSurchargesAmount, true
}

// HasTotalSurchargesAmount returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalSurchargesAmount() bool {
	if o != nil && !IsNil(o.TotalSurchargesAmount) {
		return true
	}

	return false
}

// SetTotalSurchargesAmount gets a reference to the given Money and assigns it to the TotalSurchargesAmount field.
func (o *ExtendedDealUnitDto) SetTotalSurchargesAmount(v Money) {
	o.TotalSurchargesAmount = &v
}

// GetTotalGlobalDiscountsAmount returns the TotalGlobalDiscountsAmount field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalGlobalDiscountsAmount() Money {
	if o == nil || IsNil(o.TotalGlobalDiscountsAmount) {
		var ret Money
		return ret
	}
	return *o.TotalGlobalDiscountsAmount
}

// GetTotalGlobalDiscountsAmountOk returns a tuple with the TotalGlobalDiscountsAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalGlobalDiscountsAmountOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalGlobalDiscountsAmount) {
		return nil, false
	}
	return o.TotalGlobalDiscountsAmount, true
}

// HasTotalGlobalDiscountsAmount returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalGlobalDiscountsAmount() bool {
	if o != nil && !IsNil(o.TotalGlobalDiscountsAmount) {
		return true
	}

	return false
}

// SetTotalGlobalDiscountsAmount gets a reference to the given Money and assigns it to the TotalGlobalDiscountsAmount field.
func (o *ExtendedDealUnitDto) SetTotalGlobalDiscountsAmount(v Money) {
	o.TotalGlobalDiscountsAmount = &v
}

// GetTotalGlobalSurchargesAmount returns the TotalGlobalSurchargesAmount field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTotalGlobalSurchargesAmount() Money {
	if o == nil || IsNil(o.TotalGlobalSurchargesAmount) {
		var ret Money
		return ret
	}
	return *o.TotalGlobalSurchargesAmount
}

// GetTotalGlobalSurchargesAmountOk returns a tuple with the TotalGlobalSurchargesAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTotalGlobalSurchargesAmountOk() (*Money, bool) {
	if o == nil || IsNil(o.TotalGlobalSurchargesAmount) {
		return nil, false
	}
	return o.TotalGlobalSurchargesAmount, true
}

// HasTotalGlobalSurchargesAmount returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTotalGlobalSurchargesAmount() bool {
	if o != nil && !IsNil(o.TotalGlobalSurchargesAmount) {
		return true
	}

	return false
}

// SetTotalGlobalSurchargesAmount gets a reference to the given Money and assigns it to the TotalGlobalSurchargesAmount field.
func (o *ExtendedDealUnitDto) SetTotalGlobalSurchargesAmount(v Money) {
	o.TotalGlobalSurchargesAmount = &v
}

// GetOrdered returns the Ordered field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetOrdered() bool {
	if o == nil || IsNil(o.Ordered) {
		var ret bool
		return ret
	}
	return *o.Ordered
}

// GetOrderedOk returns a tuple with the Ordered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetOrderedOk() (*bool, bool) {
	if o == nil || IsNil(o.Ordered) {
		return nil, false
	}
	return o.Ordered, true
}

// HasOrdered returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasOrdered() bool {
	if o != nil && !IsNil(o.Ordered) {
		return true
	}

	return false
}

// SetOrdered gets a reference to the given bool and assigns it to the Ordered field.
func (o *ExtendedDealUnitDto) SetOrdered(v bool) {
	o.Ordered = &v
}

// GetDealUnitFeedId returns the DealUnitFeedId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetDealUnitFeedId() string {
	if o == nil || IsNil(o.DealUnitFeedId.Get()) {
		var ret string
		return ret
	}
	return *o.DealUnitFeedId.Get()
}

// GetDealUnitFeedIdOk returns a tuple with the DealUnitFeedId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetDealUnitFeedIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DealUnitFeedId.Get(), o.DealUnitFeedId.IsSet()
}

// HasDealUnitFeedId returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasDealUnitFeedId() bool {
	if o != nil && o.DealUnitFeedId.IsSet() {
		return true
	}

	return false
}

// SetDealUnitFeedId gets a reference to the given NullableString and assigns it to the DealUnitFeedId field.
func (o *ExtendedDealUnitDto) SetDealUnitFeedId(v string) {
	o.DealUnitFeedId.Set(&v)
}
// SetDealUnitFeedIdNil sets the value for DealUnitFeedId to be an explicit nil
func (o *ExtendedDealUnitDto) SetDealUnitFeedIdNil() {
	o.DealUnitFeedId.Set(nil)
}

// UnsetDealUnitFeedId ensures that no value is present for DealUnitFeedId, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetDealUnitFeedId() {
	o.DealUnitFeedId.Unset()
}

// GetDealUnitFlowId returns the DealUnitFlowId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetDealUnitFlowId() string {
	if o == nil || IsNil(o.DealUnitFlowId.Get()) {
		var ret string
		return ret
	}
	return *o.DealUnitFlowId.Get()
}

// GetDealUnitFlowIdOk returns a tuple with the DealUnitFlowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetDealUnitFlowIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DealUnitFlowId.Get(), o.DealUnitFlowId.IsSet()
}

// HasDealUnitFlowId returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasDealUnitFlowId() bool {
	if o != nil && o.DealUnitFlowId.IsSet() {
		return true
	}

	return false
}

// SetDealUnitFlowId gets a reference to the given NullableString and assigns it to the DealUnitFlowId field.
func (o *ExtendedDealUnitDto) SetDealUnitFlowId(v string) {
	o.DealUnitFlowId.Set(&v)
}
// SetDealUnitFlowIdNil sets the value for DealUnitFlowId to be an explicit nil
func (o *ExtendedDealUnitDto) SetDealUnitFlowIdNil() {
	o.DealUnitFlowId.Set(nil)
}

// UnsetDealUnitFlowId ensures that no value is present for DealUnitFlowId, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetDealUnitFlowId() {
	o.DealUnitFlowId.Unset()
}

// GetDealUnitFlowStageId returns the DealUnitFlowStageId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetDealUnitFlowStageId() string {
	if o == nil || IsNil(o.DealUnitFlowStageId.Get()) {
		var ret string
		return ret
	}
	return *o.DealUnitFlowStageId.Get()
}

// GetDealUnitFlowStageIdOk returns a tuple with the DealUnitFlowStageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetDealUnitFlowStageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DealUnitFlowStageId.Get(), o.DealUnitFlowStageId.IsSet()
}

// HasDealUnitFlowStageId returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasDealUnitFlowStageId() bool {
	if o != nil && o.DealUnitFlowStageId.IsSet() {
		return true
	}

	return false
}

// SetDealUnitFlowStageId gets a reference to the given NullableString and assigns it to the DealUnitFlowStageId field.
func (o *ExtendedDealUnitDto) SetDealUnitFlowStageId(v string) {
	o.DealUnitFlowStageId.Set(&v)
}
// SetDealUnitFlowStageIdNil sets the value for DealUnitFlowStageId to be an explicit nil
func (o *ExtendedDealUnitDto) SetDealUnitFlowStageIdNil() {
	o.DealUnitFlowStageId.Set(nil)
}

// UnsetDealUnitFlowStageId ensures that no value is present for DealUnitFlowStageId, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetDealUnitFlowStageId() {
	o.DealUnitFlowStageId.Unset()
}

// GetBillingLocationId returns the BillingLocationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetBillingLocationId() string {
	if o == nil || IsNil(o.BillingLocationId.Get()) {
		var ret string
		return ret
	}
	return *o.BillingLocationId.Get()
}

// GetBillingLocationIdOk returns a tuple with the BillingLocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetBillingLocationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingLocationId.Get(), o.BillingLocationId.IsSet()
}

// HasBillingLocationId returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasBillingLocationId() bool {
	if o != nil && o.BillingLocationId.IsSet() {
		return true
	}

	return false
}

// SetBillingLocationId gets a reference to the given NullableString and assigns it to the BillingLocationId field.
func (o *ExtendedDealUnitDto) SetBillingLocationId(v string) {
	o.BillingLocationId.Set(&v)
}
// SetBillingLocationIdNil sets the value for BillingLocationId to be an explicit nil
func (o *ExtendedDealUnitDto) SetBillingLocationIdNil() {
	o.BillingLocationId.Set(nil)
}

// UnsetBillingLocationId ensures that no value is present for BillingLocationId, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetBillingLocationId() {
	o.BillingLocationId.Unset()
}

// GetShippingLocationId returns the ShippingLocationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetShippingLocationId() string {
	if o == nil || IsNil(o.ShippingLocationId.Get()) {
		var ret string
		return ret
	}
	return *o.ShippingLocationId.Get()
}

// GetShippingLocationIdOk returns a tuple with the ShippingLocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetShippingLocationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippingLocationId.Get(), o.ShippingLocationId.IsSet()
}

// HasShippingLocationId returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasShippingLocationId() bool {
	if o != nil && o.ShippingLocationId.IsSet() {
		return true
	}

	return false
}

// SetShippingLocationId gets a reference to the given NullableString and assigns it to the ShippingLocationId field.
func (o *ExtendedDealUnitDto) SetShippingLocationId(v string) {
	o.ShippingLocationId.Set(&v)
}
// SetShippingLocationIdNil sets the value for ShippingLocationId to be an explicit nil
func (o *ExtendedDealUnitDto) SetShippingLocationIdNil() {
	o.ShippingLocationId.Set(nil)
}

// UnsetShippingLocationId ensures that no value is present for ShippingLocationId, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetShippingLocationId() {
	o.ShippingLocationId.Unset()
}

// GetPartnerCreated returns the PartnerCreated field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetPartnerCreated() bool {
	if o == nil || IsNil(o.PartnerCreated) {
		var ret bool
		return ret
	}
	return *o.PartnerCreated
}

// GetPartnerCreatedOk returns a tuple with the PartnerCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetPartnerCreatedOk() (*bool, bool) {
	if o == nil || IsNil(o.PartnerCreated) {
		return nil, false
	}
	return o.PartnerCreated, true
}

// HasPartnerCreated returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasPartnerCreated() bool {
	if o != nil && !IsNil(o.PartnerCreated) {
		return true
	}

	return false
}

// SetPartnerCreated gets a reference to the given bool and assigns it to the PartnerCreated field.
func (o *ExtendedDealUnitDto) SetPartnerCreated(v bool) {
	o.PartnerCreated = &v
}

// GetPartnerCollaboration returns the PartnerCollaboration field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetPartnerCollaboration() bool {
	if o == nil || IsNil(o.PartnerCollaboration) {
		var ret bool
		return ret
	}
	return *o.PartnerCollaboration
}

// GetPartnerCollaborationOk returns a tuple with the PartnerCollaboration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetPartnerCollaborationOk() (*bool, bool) {
	if o == nil || IsNil(o.PartnerCollaboration) {
		return nil, false
	}
	return o.PartnerCollaboration, true
}

// HasPartnerCollaboration returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasPartnerCollaboration() bool {
	if o != nil && !IsNil(o.PartnerCollaboration) {
		return true
	}

	return false
}

// SetPartnerCollaboration gets a reference to the given bool and assigns it to the PartnerCollaboration field.
func (o *ExtendedDealUnitDto) SetPartnerCollaboration(v bool) {
	o.PartnerCollaboration = &v
}

// GetProposedSolution returns the ProposedSolution field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetProposedSolution() string {
	if o == nil || IsNil(o.ProposedSolution.Get()) {
		var ret string
		return ret
	}
	return *o.ProposedSolution.Get()
}

// GetProposedSolutionOk returns a tuple with the ProposedSolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetProposedSolutionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProposedSolution.Get(), o.ProposedSolution.IsSet()
}

// HasProposedSolution returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasProposedSolution() bool {
	if o != nil && o.ProposedSolution.IsSet() {
		return true
	}

	return false
}

// SetProposedSolution gets a reference to the given NullableString and assigns it to the ProposedSolution field.
func (o *ExtendedDealUnitDto) SetProposedSolution(v string) {
	o.ProposedSolution.Set(&v)
}
// SetProposedSolutionNil sets the value for ProposedSolution to be an explicit nil
func (o *ExtendedDealUnitDto) SetProposedSolutionNil() {
	o.ProposedSolution.Set(nil)
}

// UnsetProposedSolution ensures that no value is present for ProposedSolution, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetProposedSolution() {
	o.ProposedSolution.Unset()
}

// GetCurrentSituation returns the CurrentSituation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetCurrentSituation() string {
	if o == nil || IsNil(o.CurrentSituation.Get()) {
		var ret string
		return ret
	}
	return *o.CurrentSituation.Get()
}

// GetCurrentSituationOk returns a tuple with the CurrentSituation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetCurrentSituationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrentSituation.Get(), o.CurrentSituation.IsSet()
}

// HasCurrentSituation returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasCurrentSituation() bool {
	if o != nil && o.CurrentSituation.IsSet() {
		return true
	}

	return false
}

// SetCurrentSituation gets a reference to the given NullableString and assigns it to the CurrentSituation field.
func (o *ExtendedDealUnitDto) SetCurrentSituation(v string) {
	o.CurrentSituation.Set(&v)
}
// SetCurrentSituationNil sets the value for CurrentSituation to be an explicit nil
func (o *ExtendedDealUnitDto) SetCurrentSituationNil() {
	o.CurrentSituation.Set(nil)
}

// UnsetCurrentSituation ensures that no value is present for CurrentSituation, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetCurrentSituation() {
	o.CurrentSituation.Unset()
}

// GetCustomerNeed returns the CustomerNeed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtendedDealUnitDto) GetCustomerNeed() string {
	if o == nil || IsNil(o.CustomerNeed.Get()) {
		var ret string
		return ret
	}
	return *o.CustomerNeed.Get()
}

// GetCustomerNeedOk returns a tuple with the CustomerNeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedDealUnitDto) GetCustomerNeedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomerNeed.Get(), o.CustomerNeed.IsSet()
}

// HasCustomerNeed returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasCustomerNeed() bool {
	if o != nil && o.CustomerNeed.IsSet() {
		return true
	}

	return false
}

// SetCustomerNeed gets a reference to the given NullableString and assigns it to the CustomerNeed field.
func (o *ExtendedDealUnitDto) SetCustomerNeed(v string) {
	o.CustomerNeed.Set(&v)
}
// SetCustomerNeedNil sets the value for CustomerNeed to be an explicit nil
func (o *ExtendedDealUnitDto) SetCustomerNeedNil() {
	o.CustomerNeed.Set(nil)
}

// UnsetCustomerNeed ensures that no value is present for CustomerNeed, not even an explicit nil
func (o *ExtendedDealUnitDto) UnsetCustomerNeed() {
	o.CustomerNeed.Unset()
}

// GetWonDate returns the WonDate field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetWonDate() time.Time {
	if o == nil || IsNil(o.WonDate) {
		var ret time.Time
		return ret
	}
	return *o.WonDate
}

// GetWonDateOk returns a tuple with the WonDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetWonDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.WonDate) {
		return nil, false
	}
	return o.WonDate, true
}

// HasWonDate returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasWonDate() bool {
	if o != nil && !IsNil(o.WonDate) {
		return true
	}

	return false
}

// SetWonDate gets a reference to the given time.Time and assigns it to the WonDate field.
func (o *ExtendedDealUnitDto) SetWonDate(v time.Time) {
	o.WonDate = &v
}

// GetLostDate returns the LostDate field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetLostDate() time.Time {
	if o == nil || IsNil(o.LostDate) {
		var ret time.Time
		return ret
	}
	return *o.LostDate
}

// GetLostDateOk returns a tuple with the LostDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetLostDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LostDate) {
		return nil, false
	}
	return o.LostDate, true
}

// HasLostDate returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasLostDate() bool {
	if o != nil && !IsNil(o.LostDate) {
		return true
	}

	return false
}

// SetLostDate gets a reference to the given time.Time and assigns it to the LostDate field.
func (o *ExtendedDealUnitDto) SetLostDate(v time.Time) {
	o.LostDate = &v
}

// GetExpiryDate returns the ExpiryDate field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetExpiryDate() time.Time {
	if o == nil || IsNil(o.ExpiryDate) {
		var ret time.Time
		return ret
	}
	return *o.ExpiryDate
}

// GetExpiryDateOk returns a tuple with the ExpiryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetExpiryDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpiryDate) {
		return nil, false
	}
	return o.ExpiryDate, true
}

// HasExpiryDate returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasExpiryDate() bool {
	if o != nil && !IsNil(o.ExpiryDate) {
		return true
	}

	return false
}

// SetExpiryDate gets a reference to the given time.Time and assigns it to the ExpiryDate field.
func (o *ExtendedDealUnitDto) SetExpiryDate(v time.Time) {
	o.ExpiryDate = &v
}

// GetDeliveredDate returns the DeliveredDate field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetDeliveredDate() time.Time {
	if o == nil || IsNil(o.DeliveredDate) {
		var ret time.Time
		return ret
	}
	return *o.DeliveredDate
}

// GetDeliveredDateOk returns a tuple with the DeliveredDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetDeliveredDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeliveredDate) {
		return nil, false
	}
	return o.DeliveredDate, true
}

// HasDeliveredDate returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasDeliveredDate() bool {
	if o != nil && !IsNil(o.DeliveredDate) {
		return true
	}

	return false
}

// SetDeliveredDate gets a reference to the given time.Time and assigns it to the DeliveredDate field.
func (o *ExtendedDealUnitDto) SetDeliveredDate(v time.Time) {
	o.DeliveredDate = &v
}

// GetClosedTimestamp returns the ClosedTimestamp field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetClosedTimestamp() time.Time {
	if o == nil || IsNil(o.ClosedTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.ClosedTimestamp
}

// GetClosedTimestampOk returns a tuple with the ClosedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetClosedTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ClosedTimestamp) {
		return nil, false
	}
	return o.ClosedTimestamp, true
}

// HasClosedTimestamp returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasClosedTimestamp() bool {
	if o != nil && !IsNil(o.ClosedTimestamp) {
		return true
	}

	return false
}

// SetClosedTimestamp gets a reference to the given time.Time and assigns it to the ClosedTimestamp field.
func (o *ExtendedDealUnitDto) SetClosedTimestamp(v time.Time) {
	o.ClosedTimestamp = &v
}

// GetExpectedCloseDate returns the ExpectedCloseDate field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetExpectedCloseDate() time.Time {
	if o == nil || IsNil(o.ExpectedCloseDate) {
		var ret time.Time
		return ret
	}
	return *o.ExpectedCloseDate
}

// GetExpectedCloseDateOk returns a tuple with the ExpectedCloseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetExpectedCloseDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpectedCloseDate) {
		return nil, false
	}
	return o.ExpectedCloseDate, true
}

// HasExpectedCloseDate returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasExpectedCloseDate() bool {
	if o != nil && !IsNil(o.ExpectedCloseDate) {
		return true
	}

	return false
}

// SetExpectedCloseDate gets a reference to the given time.Time and assigns it to the ExpectedCloseDate field.
func (o *ExtendedDealUnitDto) SetExpectedCloseDate(v time.Time) {
	o.ExpectedCloseDate = &v
}

// GetDealUnitStatus returns the DealUnitStatus field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetDealUnitStatus() int32 {
	if o == nil || IsNil(o.DealUnitStatus) {
		var ret int32
		return ret
	}
	return *o.DealUnitStatus
}

// GetDealUnitStatusOk returns a tuple with the DealUnitStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetDealUnitStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.DealUnitStatus) {
		return nil, false
	}
	return o.DealUnitStatus, true
}

// HasDealUnitStatus returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasDealUnitStatus() bool {
	if o != nil && !IsNil(o.DealUnitStatus) {
		return true
	}

	return false
}

// SetDealUnitStatus gets a reference to the given int32 and assigns it to the DealUnitStatus field.
func (o *ExtendedDealUnitDto) SetDealUnitStatus(v int32) {
	o.DealUnitStatus = &v
}

// GetDealUnitPurchaseProcess returns the DealUnitPurchaseProcess field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetDealUnitPurchaseProcess() int32 {
	if o == nil || IsNil(o.DealUnitPurchaseProcess) {
		var ret int32
		return ret
	}
	return *o.DealUnitPurchaseProcess
}

// GetDealUnitPurchaseProcessOk returns a tuple with the DealUnitPurchaseProcess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetDealUnitPurchaseProcessOk() (*int32, bool) {
	if o == nil || IsNil(o.DealUnitPurchaseProcess) {
		return nil, false
	}
	return o.DealUnitPurchaseProcess, true
}

// HasDealUnitPurchaseProcess returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasDealUnitPurchaseProcess() bool {
	if o != nil && !IsNil(o.DealUnitPurchaseProcess) {
		return true
	}

	return false
}

// SetDealUnitPurchaseProcess gets a reference to the given int32 and assigns it to the DealUnitPurchaseProcess field.
func (o *ExtendedDealUnitDto) SetDealUnitPurchaseProcess(v int32) {
	o.DealUnitPurchaseProcess = &v
}

// GetDealUnitForecastCategory returns the DealUnitForecastCategory field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetDealUnitForecastCategory() int32 {
	if o == nil || IsNil(o.DealUnitForecastCategory) {
		var ret int32
		return ret
	}
	return *o.DealUnitForecastCategory
}

// GetDealUnitForecastCategoryOk returns a tuple with the DealUnitForecastCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetDealUnitForecastCategoryOk() (*int32, bool) {
	if o == nil || IsNil(o.DealUnitForecastCategory) {
		return nil, false
	}
	return o.DealUnitForecastCategory, true
}

// HasDealUnitForecastCategory returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasDealUnitForecastCategory() bool {
	if o != nil && !IsNil(o.DealUnitForecastCategory) {
		return true
	}

	return false
}

// SetDealUnitForecastCategory gets a reference to the given int32 and assigns it to the DealUnitForecastCategory field.
func (o *ExtendedDealUnitDto) SetDealUnitForecastCategory(v int32) {
	o.DealUnitForecastCategory = &v
}

// GetDealUnitAmountsCalculation returns the DealUnitAmountsCalculation field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetDealUnitAmountsCalculation() int32 {
	if o == nil || IsNil(o.DealUnitAmountsCalculation) {
		var ret int32
		return ret
	}
	return *o.DealUnitAmountsCalculation
}

// GetDealUnitAmountsCalculationOk returns a tuple with the DealUnitAmountsCalculation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetDealUnitAmountsCalculationOk() (*int32, bool) {
	if o == nil || IsNil(o.DealUnitAmountsCalculation) {
		return nil, false
	}
	return o.DealUnitAmountsCalculation, true
}

// HasDealUnitAmountsCalculation returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasDealUnitAmountsCalculation() bool {
	if o != nil && !IsNil(o.DealUnitAmountsCalculation) {
		return true
	}

	return false
}

// SetDealUnitAmountsCalculation gets a reference to the given int32 and assigns it to the DealUnitAmountsCalculation field.
func (o *ExtendedDealUnitDto) SetDealUnitAmountsCalculation(v int32) {
	o.DealUnitAmountsCalculation = &v
}

// GetLinesCount returns the LinesCount field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetLinesCount() int32 {
	if o == nil || IsNil(o.LinesCount) {
		var ret int32
		return ret
	}
	return *o.LinesCount
}

// GetLinesCountOk returns a tuple with the LinesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetLinesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.LinesCount) {
		return nil, false
	}
	return o.LinesCount, true
}

// HasLinesCount returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasLinesCount() bool {
	if o != nil && !IsNil(o.LinesCount) {
		return true
	}

	return false
}

// SetLinesCount gets a reference to the given int32 and assigns it to the LinesCount field.
func (o *ExtendedDealUnitDto) SetLinesCount(v int32) {
	o.LinesCount = &v
}

// GetCustomTotalAmount returns the CustomTotalAmount field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetCustomTotalAmount() float64 {
	if o == nil || IsNil(o.CustomTotalAmount) {
		var ret float64
		return ret
	}
	return *o.CustomTotalAmount
}

// GetCustomTotalAmountOk returns a tuple with the CustomTotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetCustomTotalAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomTotalAmount) {
		return nil, false
	}
	return o.CustomTotalAmount, true
}

// HasCustomTotalAmount returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasCustomTotalAmount() bool {
	if o != nil && !IsNil(o.CustomTotalAmount) {
		return true
	}

	return false
}

// SetCustomTotalAmount gets a reference to the given float64 and assigns it to the CustomTotalAmount field.
func (o *ExtendedDealUnitDto) SetCustomTotalAmount(v float64) {
	o.CustomTotalAmount = &v
}

// GetCustomDetailAmount returns the CustomDetailAmount field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetCustomDetailAmount() float64 {
	if o == nil || IsNil(o.CustomDetailAmount) {
		var ret float64
		return ret
	}
	return *o.CustomDetailAmount
}

// GetCustomDetailAmountOk returns a tuple with the CustomDetailAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetCustomDetailAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomDetailAmount) {
		return nil, false
	}
	return o.CustomDetailAmount, true
}

// HasCustomDetailAmount returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasCustomDetailAmount() bool {
	if o != nil && !IsNil(o.CustomDetailAmount) {
		return true
	}

	return false
}

// SetCustomDetailAmount gets a reference to the given float64 and assigns it to the CustomDetailAmount field.
func (o *ExtendedDealUnitDto) SetCustomDetailAmount(v float64) {
	o.CustomDetailAmount = &v
}

// GetCustomProfitAmount returns the CustomProfitAmount field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetCustomProfitAmount() float64 {
	if o == nil || IsNil(o.CustomProfitAmount) {
		var ret float64
		return ret
	}
	return *o.CustomProfitAmount
}

// GetCustomProfitAmountOk returns a tuple with the CustomProfitAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetCustomProfitAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomProfitAmount) {
		return nil, false
	}
	return o.CustomProfitAmount, true
}

// HasCustomProfitAmount returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasCustomProfitAmount() bool {
	if o != nil && !IsNil(o.CustomProfitAmount) {
		return true
	}

	return false
}

// SetCustomProfitAmount gets a reference to the given float64 and assigns it to the CustomProfitAmount field.
func (o *ExtendedDealUnitDto) SetCustomProfitAmount(v float64) {
	o.CustomProfitAmount = &v
}

// GetCustomShippingCostAmount returns the CustomShippingCostAmount field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetCustomShippingCostAmount() float64 {
	if o == nil || IsNil(o.CustomShippingCostAmount) {
		var ret float64
		return ret
	}
	return *o.CustomShippingCostAmount
}

// GetCustomShippingCostAmountOk returns a tuple with the CustomShippingCostAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetCustomShippingCostAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomShippingCostAmount) {
		return nil, false
	}
	return o.CustomShippingCostAmount, true
}

// HasCustomShippingCostAmount returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasCustomShippingCostAmount() bool {
	if o != nil && !IsNil(o.CustomShippingCostAmount) {
		return true
	}

	return false
}

// SetCustomShippingCostAmount gets a reference to the given float64 and assigns it to the CustomShippingCostAmount field.
func (o *ExtendedDealUnitDto) SetCustomShippingCostAmount(v float64) {
	o.CustomShippingCostAmount = &v
}

// GetCustomWithholdingTaxAmount returns the CustomWithholdingTaxAmount field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetCustomWithholdingTaxAmount() float64 {
	if o == nil || IsNil(o.CustomWithholdingTaxAmount) {
		var ret float64
		return ret
	}
	return *o.CustomWithholdingTaxAmount
}

// GetCustomWithholdingTaxAmountOk returns a tuple with the CustomWithholdingTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetCustomWithholdingTaxAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomWithholdingTaxAmount) {
		return nil, false
	}
	return o.CustomWithholdingTaxAmount, true
}

// HasCustomWithholdingTaxAmount returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasCustomWithholdingTaxAmount() bool {
	if o != nil && !IsNil(o.CustomWithholdingTaxAmount) {
		return true
	}

	return false
}

// SetCustomWithholdingTaxAmount gets a reference to the given float64 and assigns it to the CustomWithholdingTaxAmount field.
func (o *ExtendedDealUnitDto) SetCustomWithholdingTaxAmount(v float64) {
	o.CustomWithholdingTaxAmount = &v
}

// GetCustomSurchargesAmount returns the CustomSurchargesAmount field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetCustomSurchargesAmount() float64 {
	if o == nil || IsNil(o.CustomSurchargesAmount) {
		var ret float64
		return ret
	}
	return *o.CustomSurchargesAmount
}

// GetCustomSurchargesAmountOk returns a tuple with the CustomSurchargesAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetCustomSurchargesAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomSurchargesAmount) {
		return nil, false
	}
	return o.CustomSurchargesAmount, true
}

// HasCustomSurchargesAmount returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasCustomSurchargesAmount() bool {
	if o != nil && !IsNil(o.CustomSurchargesAmount) {
		return true
	}

	return false
}

// SetCustomSurchargesAmount gets a reference to the given float64 and assigns it to the CustomSurchargesAmount field.
func (o *ExtendedDealUnitDto) SetCustomSurchargesAmount(v float64) {
	o.CustomSurchargesAmount = &v
}

// GetCustomDiscountsAmount returns the CustomDiscountsAmount field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetCustomDiscountsAmount() float64 {
	if o == nil || IsNil(o.CustomDiscountsAmount) {
		var ret float64
		return ret
	}
	return *o.CustomDiscountsAmount
}

// GetCustomDiscountsAmountOk returns a tuple with the CustomDiscountsAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetCustomDiscountsAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomDiscountsAmount) {
		return nil, false
	}
	return o.CustomDiscountsAmount, true
}

// HasCustomDiscountsAmount returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasCustomDiscountsAmount() bool {
	if o != nil && !IsNil(o.CustomDiscountsAmount) {
		return true
	}

	return false
}

// SetCustomDiscountsAmount gets a reference to the given float64 and assigns it to the CustomDiscountsAmount field.
func (o *ExtendedDealUnitDto) SetCustomDiscountsAmount(v float64) {
	o.CustomDiscountsAmount = &v
}

// GetCustomShippingTaxAmount returns the CustomShippingTaxAmount field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetCustomShippingTaxAmount() float64 {
	if o == nil || IsNil(o.CustomShippingTaxAmount) {
		var ret float64
		return ret
	}
	return *o.CustomShippingTaxAmount
}

// GetCustomShippingTaxAmountOk returns a tuple with the CustomShippingTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetCustomShippingTaxAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CustomShippingTaxAmount) {
		return nil, false
	}
	return o.CustomShippingTaxAmount, true
}

// HasCustomShippingTaxAmount returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasCustomShippingTaxAmount() bool {
	if o != nil && !IsNil(o.CustomShippingTaxAmount) {
		return true
	}

	return false
}

// SetCustomShippingTaxAmount gets a reference to the given float64 and assigns it to the CustomShippingTaxAmount field.
func (o *ExtendedDealUnitDto) SetCustomShippingTaxAmount(v float64) {
	o.CustomShippingTaxAmount = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetUser() UserDto {
	if o == nil || IsNil(o.User) {
		var ret UserDto
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetUserOk() (*UserDto, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given UserDto and assigns it to the User field.
func (o *ExtendedDealUnitDto) SetUser(v UserDto) {
	o.User = &v
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetTenant() TenantDto {
	if o == nil || IsNil(o.Tenant) {
		var ret TenantDto
		return ret
	}
	return *o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetTenantOk() (*TenantDto, bool) {
	if o == nil || IsNil(o.Tenant) {
		return nil, false
	}
	return o.Tenant, true
}

// HasTenant returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasTenant() bool {
	if o != nil && !IsNil(o.Tenant) {
		return true
	}

	return false
}

// SetTenant gets a reference to the given TenantDto and assigns it to the Tenant field.
func (o *ExtendedDealUnitDto) SetTenant(v TenantDto) {
	o.Tenant = &v
}

// GetIndividual returns the Individual field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetIndividual() ContactDto {
	if o == nil || IsNil(o.Individual) {
		var ret ContactDto
		return ret
	}
	return *o.Individual
}

// GetIndividualOk returns a tuple with the Individual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetIndividualOk() (*ContactDto, bool) {
	if o == nil || IsNil(o.Individual) {
		return nil, false
	}
	return o.Individual, true
}

// HasIndividual returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasIndividual() bool {
	if o != nil && !IsNil(o.Individual) {
		return true
	}

	return false
}

// SetIndividual gets a reference to the given ContactDto and assigns it to the Individual field.
func (o *ExtendedDealUnitDto) SetIndividual(v ContactDto) {
	o.Individual = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetOrganization() ContactDto {
	if o == nil || IsNil(o.Organization) {
		var ret ContactDto
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetOrganizationOk() (*ContactDto, bool) {
	if o == nil || IsNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given ContactDto and assigns it to the Organization field.
func (o *ExtendedDealUnitDto) SetOrganization(v ContactDto) {
	o.Organization = &v
}

// GetReceiverTenant returns the ReceiverTenant field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetReceiverTenant() TenantDto {
	if o == nil || IsNil(o.ReceiverTenant) {
		var ret TenantDto
		return ret
	}
	return *o.ReceiverTenant
}

// GetReceiverTenantOk returns a tuple with the ReceiverTenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetReceiverTenantOk() (*TenantDto, bool) {
	if o == nil || IsNil(o.ReceiverTenant) {
		return nil, false
	}
	return o.ReceiverTenant, true
}

// HasReceiverTenant returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasReceiverTenant() bool {
	if o != nil && !IsNil(o.ReceiverTenant) {
		return true
	}

	return false
}

// SetReceiverTenant gets a reference to the given TenantDto and assigns it to the ReceiverTenant field.
func (o *ExtendedDealUnitDto) SetReceiverTenant(v TenantDto) {
	o.ReceiverTenant = &v
}

// GetEnrollment returns the Enrollment field value if set, zero value otherwise.
func (o *ExtendedDealUnitDto) GetEnrollment() TenantEnrolmentDto {
	if o == nil || IsNil(o.Enrollment) {
		var ret TenantEnrolmentDto
		return ret
	}
	return *o.Enrollment
}

// GetEnrollmentOk returns a tuple with the Enrollment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedDealUnitDto) GetEnrollmentOk() (*TenantEnrolmentDto, bool) {
	if o == nil || IsNil(o.Enrollment) {
		return nil, false
	}
	return o.Enrollment, true
}

// HasEnrollment returns a boolean if a field has been set.
func (o *ExtendedDealUnitDto) HasEnrollment() bool {
	if o != nil && !IsNil(o.Enrollment) {
		return true
	}

	return false
}

// SetEnrollment gets a reference to the given TenantEnrolmentDto and assigns it to the Enrollment field.
func (o *ExtendedDealUnitDto) SetEnrollment(v TenantEnrolmentDto) {
	o.Enrollment = &v
}

func (o ExtendedDealUnitDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtendedDealUnitDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Timestamp.IsSet() {
		toSerialize["timestamp"] = o.Timestamp.Get()
	}
	if !IsNil(o.Closed) {
		toSerialize["closed"] = o.Closed
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.UserId.IsSet() {
		toSerialize["userId"] = o.UserId.Get()
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.CurrencyId.IsSet() {
		toSerialize["currencyId"] = o.CurrencyId.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.PriceListId.IsSet() {
		toSerialize["priceListId"] = o.PriceListId.Get()
	}
	if o.EnrollmentId.IsSet() {
		toSerialize["enrollmentId"] = o.EnrollmentId.Get()
	}
	if o.IndividualId.IsSet() {
		toSerialize["individualId"] = o.IndividualId.Get()
	}
	if o.OrganizationId.IsSet() {
		toSerialize["organizationId"] = o.OrganizationId.Get()
	}
	if o.ReceiverTenantId.IsSet() {
		toSerialize["receiverTenantId"] = o.ReceiverTenantId.Get()
	}
	if o.FirstName.IsSet() {
		toSerialize["firstName"] = o.FirstName.Get()
	}
	if o.LastName.IsSet() {
		toSerialize["lastName"] = o.LastName.Get()
	}
	if o.CompanyName.IsSet() {
		toSerialize["companyName"] = o.CompanyName.Get()
	}
	if o.BillingEmail.IsSet() {
		toSerialize["billingEmail"] = o.BillingEmail.Get()
	}
	if o.AddressLine1.IsSet() {
		toSerialize["addressLine1"] = o.AddressLine1.Get()
	}
	if o.AddressLine2.IsSet() {
		toSerialize["addressLine2"] = o.AddressLine2.Get()
	}
	if o.PostalCode.IsSet() {
		toSerialize["postalCode"] = o.PostalCode.Get()
	}
	if o.CountryId.IsSet() {
		toSerialize["countryId"] = o.CountryId.Get()
	}
	if o.StateId.IsSet() {
		toSerialize["stateId"] = o.StateId.Get()
	}
	if o.CityId.IsSet() {
		toSerialize["cityId"] = o.CityId.Get()
	}
	if o.CustomerNotes.IsSet() {
		toSerialize["customerNotes"] = o.CustomerNotes.Get()
	}
	if !IsNil(o.ForexRate) {
		toSerialize["forexRate"] = o.ForexRate
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.TotalTaxes) {
		toSerialize["totalTaxes"] = o.TotalTaxes
	}
	if !IsNil(o.TotalTaxBase) {
		toSerialize["totalTaxBase"] = o.TotalTaxBase
	}
	if !IsNil(o.TotalDiscounts) {
		toSerialize["totalDiscounts"] = o.TotalDiscounts
	}
	if !IsNil(o.TotalSurcharges) {
		toSerialize["totalSurcharges"] = o.TotalSurcharges
	}
	if !IsNil(o.TotalGlobalDiscounts) {
		toSerialize["totalGlobalDiscounts"] = o.TotalGlobalDiscounts
	}
	if !IsNil(o.TotalGlobalSurcharges) {
		toSerialize["totalGlobalSurcharges"] = o.TotalGlobalSurcharges
	}
	if !IsNil(o.TotalTaxesInUsd) {
		toSerialize["totalTaxesInUsd"] = o.TotalTaxesInUsd
	}
	if !IsNil(o.TotalAmountInUsd) {
		toSerialize["totalAmountInUsd"] = o.TotalAmountInUsd
	}
	if !IsNil(o.TotalProfitInUsd) {
		toSerialize["totalProfitInUsd"] = o.TotalProfitInUsd
	}
	if !IsNil(o.TotalTaxBaseInUsd) {
		toSerialize["totalTaxBaseInUsd"] = o.TotalTaxBaseInUsd
	}
	if !IsNil(o.TotalDiscountsInUsd) {
		toSerialize["totalDiscountsInUsd"] = o.TotalDiscountsInUsd
	}
	if !IsNil(o.TotalSurchargesInUsd) {
		toSerialize["totalSurchargesInUsd"] = o.TotalSurchargesInUsd
	}
	if !IsNil(o.TotalDetailAmountInUsd) {
		toSerialize["totalDetailAmountInUsd"] = o.TotalDetailAmountInUsd
	}
	if !IsNil(o.TotalGlobalDiscountsInUsd) {
		toSerialize["totalGlobalDiscountsInUsd"] = o.TotalGlobalDiscountsInUsd
	}
	if !IsNil(o.TotalGlobalSurchargesInUsd) {
		toSerialize["totalGlobalSurchargesInUsd"] = o.TotalGlobalSurchargesInUsd
	}
	if !IsNil(o.TotalWithholdingTaxesInUsd) {
		toSerialize["totalWithholdingTaxesInUsd"] = o.TotalWithholdingTaxesInUsd
	}
	if !IsNil(o.TotalShippingCostInUsd) {
		toSerialize["totalShippingCostInUsd"] = o.TotalShippingCostInUsd
	}
	if !IsNil(o.TotalShippingTaxesInUsd) {
		toSerialize["totalShippingTaxesInUsd"] = o.TotalShippingTaxesInUsd
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.TotalInUsd) {
		toSerialize["totalInUsd"] = o.TotalInUsd
	}
	if !IsNil(o.TotalTaxAmountInUsd) {
		toSerialize["totalTaxAmountInUsd"] = o.TotalTaxAmountInUsd
	}
	if !IsNil(o.TotalTaxBaseAmountInUsd) {
		toSerialize["totalTaxBaseAmountInUsd"] = o.TotalTaxBaseAmountInUsd
	}
	if !IsNil(o.TotalDiscountsAmountInUsd) {
		toSerialize["totalDiscountsAmountInUsd"] = o.TotalDiscountsAmountInUsd
	}
	if !IsNil(o.TotalSurchargesAmountInUsd) {
		toSerialize["totalSurchargesAmountInUsd"] = o.TotalSurchargesAmountInUsd
	}
	if !IsNil(o.TotalGlobalDiscountsAmountInUsd) {
		toSerialize["totalGlobalDiscountsAmountInUsd"] = o.TotalGlobalDiscountsAmountInUsd
	}
	if !IsNil(o.TotalGlobalSurchargesAmountInUsd) {
		toSerialize["totalGlobalSurchargesAmountInUsd"] = o.TotalGlobalSurchargesAmountInUsd
	}
	if !IsNil(o.TotalAmount) {
		toSerialize["totalAmount"] = o.TotalAmount
	}
	if !IsNil(o.TotalTaxAmount) {
		toSerialize["totalTaxAmount"] = o.TotalTaxAmount
	}
	if !IsNil(o.TotalTaxBaseAmount) {
		toSerialize["totalTaxBaseAmount"] = o.TotalTaxBaseAmount
	}
	if !IsNil(o.TotalDiscountsAmount) {
		toSerialize["totalDiscountsAmount"] = o.TotalDiscountsAmount
	}
	if !IsNil(o.TotalSurchargesAmount) {
		toSerialize["totalSurchargesAmount"] = o.TotalSurchargesAmount
	}
	if !IsNil(o.TotalGlobalDiscountsAmount) {
		toSerialize["totalGlobalDiscountsAmount"] = o.TotalGlobalDiscountsAmount
	}
	if !IsNil(o.TotalGlobalSurchargesAmount) {
		toSerialize["totalGlobalSurchargesAmount"] = o.TotalGlobalSurchargesAmount
	}
	if !IsNil(o.Ordered) {
		toSerialize["ordered"] = o.Ordered
	}
	if o.DealUnitFeedId.IsSet() {
		toSerialize["dealUnitFeedId"] = o.DealUnitFeedId.Get()
	}
	if o.DealUnitFlowId.IsSet() {
		toSerialize["dealUnitFlowId"] = o.DealUnitFlowId.Get()
	}
	if o.DealUnitFlowStageId.IsSet() {
		toSerialize["dealUnitFlowStageId"] = o.DealUnitFlowStageId.Get()
	}
	if o.BillingLocationId.IsSet() {
		toSerialize["billingLocationId"] = o.BillingLocationId.Get()
	}
	if o.ShippingLocationId.IsSet() {
		toSerialize["shippingLocationId"] = o.ShippingLocationId.Get()
	}
	if !IsNil(o.PartnerCreated) {
		toSerialize["partnerCreated"] = o.PartnerCreated
	}
	if !IsNil(o.PartnerCollaboration) {
		toSerialize["partnerCollaboration"] = o.PartnerCollaboration
	}
	if o.ProposedSolution.IsSet() {
		toSerialize["proposedSolution"] = o.ProposedSolution.Get()
	}
	if o.CurrentSituation.IsSet() {
		toSerialize["currentSituation"] = o.CurrentSituation.Get()
	}
	if o.CustomerNeed.IsSet() {
		toSerialize["customerNeed"] = o.CustomerNeed.Get()
	}
	if !IsNil(o.WonDate) {
		toSerialize["wonDate"] = o.WonDate
	}
	if !IsNil(o.LostDate) {
		toSerialize["lostDate"] = o.LostDate
	}
	if !IsNil(o.ExpiryDate) {
		toSerialize["expiryDate"] = o.ExpiryDate
	}
	if !IsNil(o.DeliveredDate) {
		toSerialize["deliveredDate"] = o.DeliveredDate
	}
	if !IsNil(o.ClosedTimestamp) {
		toSerialize["closedTimestamp"] = o.ClosedTimestamp
	}
	if !IsNil(o.ExpectedCloseDate) {
		toSerialize["expectedCloseDate"] = o.ExpectedCloseDate
	}
	if !IsNil(o.DealUnitStatus) {
		toSerialize["dealUnitStatus"] = o.DealUnitStatus
	}
	if !IsNil(o.DealUnitPurchaseProcess) {
		toSerialize["dealUnitPurchaseProcess"] = o.DealUnitPurchaseProcess
	}
	if !IsNil(o.DealUnitForecastCategory) {
		toSerialize["dealUnitForecastCategory"] = o.DealUnitForecastCategory
	}
	if !IsNil(o.DealUnitAmountsCalculation) {
		toSerialize["dealUnitAmountsCalculation"] = o.DealUnitAmountsCalculation
	}
	if !IsNil(o.LinesCount) {
		toSerialize["linesCount"] = o.LinesCount
	}
	if !IsNil(o.CustomTotalAmount) {
		toSerialize["customTotalAmount"] = o.CustomTotalAmount
	}
	if !IsNil(o.CustomDetailAmount) {
		toSerialize["customDetailAmount"] = o.CustomDetailAmount
	}
	if !IsNil(o.CustomProfitAmount) {
		toSerialize["customProfitAmount"] = o.CustomProfitAmount
	}
	if !IsNil(o.CustomShippingCostAmount) {
		toSerialize["customShippingCostAmount"] = o.CustomShippingCostAmount
	}
	if !IsNil(o.CustomWithholdingTaxAmount) {
		toSerialize["customWithholdingTaxAmount"] = o.CustomWithholdingTaxAmount
	}
	if !IsNil(o.CustomSurchargesAmount) {
		toSerialize["customSurchargesAmount"] = o.CustomSurchargesAmount
	}
	if !IsNil(o.CustomDiscountsAmount) {
		toSerialize["customDiscountsAmount"] = o.CustomDiscountsAmount
	}
	if !IsNil(o.CustomShippingTaxAmount) {
		toSerialize["customShippingTaxAmount"] = o.CustomShippingTaxAmount
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.Tenant) {
		toSerialize["tenant"] = o.Tenant
	}
	if !IsNil(o.Individual) {
		toSerialize["individual"] = o.Individual
	}
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	if !IsNil(o.ReceiverTenant) {
		toSerialize["receiverTenant"] = o.ReceiverTenant
	}
	if !IsNil(o.Enrollment) {
		toSerialize["enrollment"] = o.Enrollment
	}
	return toSerialize, nil
}

type NullableExtendedDealUnitDto struct {
	value *ExtendedDealUnitDto
	isSet bool
}

func (v NullableExtendedDealUnitDto) Get() *ExtendedDealUnitDto {
	return v.value
}

func (v *NullableExtendedDealUnitDto) Set(val *ExtendedDealUnitDto) {
	v.value = val
	v.isSet = true
}

func (v NullableExtendedDealUnitDto) IsSet() bool {
	return v.isSet
}

func (v *NullableExtendedDealUnitDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtendedDealUnitDto(val *ExtendedDealUnitDto) *NullableExtendedDealUnitDto {
	return &NullableExtendedDealUnitDto{value: val, isSet: true}
}

func (v NullableExtendedDealUnitDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtendedDealUnitDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


