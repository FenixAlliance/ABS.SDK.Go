/*
DealsService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DealUnitFlowCreateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DealUnitFlowCreateDto{}

// DealUnitFlowCreateDto struct for DealUnitFlowCreateDto
type DealUnitFlowCreateDto struct {
	Id *string `json:"id,omitempty"`
	Timestamp *time.Time `json:"timestamp,omitempty"`
	Name NullableString `json:"name,omitempty"`
	Description NullableString `json:"description,omitempty"`
	ParentBusinessProcessId NullableString `json:"parentBusinessProcessId,omitempty"`
	TenantId NullableString `json:"tenantId,omitempty"`
	TenantEnrolmentId NullableString `json:"tenantEnrolmentId,omitempty"`
}

// NewDealUnitFlowCreateDto instantiates a new DealUnitFlowCreateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDealUnitFlowCreateDto() *DealUnitFlowCreateDto {
	this := DealUnitFlowCreateDto{}
	return &this
}

// NewDealUnitFlowCreateDtoWithDefaults instantiates a new DealUnitFlowCreateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDealUnitFlowCreateDtoWithDefaults() *DealUnitFlowCreateDto {
	this := DealUnitFlowCreateDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DealUnitFlowCreateDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealUnitFlowCreateDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DealUnitFlowCreateDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DealUnitFlowCreateDto) SetId(v string) {
	o.Id = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *DealUnitFlowCreateDto) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealUnitFlowCreateDto) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *DealUnitFlowCreateDto) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *DealUnitFlowCreateDto) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitFlowCreateDto) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitFlowCreateDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *DealUnitFlowCreateDto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *DealUnitFlowCreateDto) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *DealUnitFlowCreateDto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *DealUnitFlowCreateDto) UnsetName() {
	o.Name.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitFlowCreateDto) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitFlowCreateDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *DealUnitFlowCreateDto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *DealUnitFlowCreateDto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *DealUnitFlowCreateDto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *DealUnitFlowCreateDto) UnsetDescription() {
	o.Description.Unset()
}

// GetParentBusinessProcessId returns the ParentBusinessProcessId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitFlowCreateDto) GetParentBusinessProcessId() string {
	if o == nil || IsNil(o.ParentBusinessProcessId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentBusinessProcessId.Get()
}

// GetParentBusinessProcessIdOk returns a tuple with the ParentBusinessProcessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitFlowCreateDto) GetParentBusinessProcessIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentBusinessProcessId.Get(), o.ParentBusinessProcessId.IsSet()
}

// HasParentBusinessProcessId returns a boolean if a field has been set.
func (o *DealUnitFlowCreateDto) HasParentBusinessProcessId() bool {
	if o != nil && o.ParentBusinessProcessId.IsSet() {
		return true
	}

	return false
}

// SetParentBusinessProcessId gets a reference to the given NullableString and assigns it to the ParentBusinessProcessId field.
func (o *DealUnitFlowCreateDto) SetParentBusinessProcessId(v string) {
	o.ParentBusinessProcessId.Set(&v)
}
// SetParentBusinessProcessIdNil sets the value for ParentBusinessProcessId to be an explicit nil
func (o *DealUnitFlowCreateDto) SetParentBusinessProcessIdNil() {
	o.ParentBusinessProcessId.Set(nil)
}

// UnsetParentBusinessProcessId ensures that no value is present for ParentBusinessProcessId, not even an explicit nil
func (o *DealUnitFlowCreateDto) UnsetParentBusinessProcessId() {
	o.ParentBusinessProcessId.Unset()
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitFlowCreateDto) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitFlowCreateDto) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *DealUnitFlowCreateDto) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *DealUnitFlowCreateDto) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *DealUnitFlowCreateDto) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *DealUnitFlowCreateDto) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetTenantEnrolmentId returns the TenantEnrolmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealUnitFlowCreateDto) GetTenantEnrolmentId() string {
	if o == nil || IsNil(o.TenantEnrolmentId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantEnrolmentId.Get()
}

// GetTenantEnrolmentIdOk returns a tuple with the TenantEnrolmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealUnitFlowCreateDto) GetTenantEnrolmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantEnrolmentId.Get(), o.TenantEnrolmentId.IsSet()
}

// HasTenantEnrolmentId returns a boolean if a field has been set.
func (o *DealUnitFlowCreateDto) HasTenantEnrolmentId() bool {
	if o != nil && o.TenantEnrolmentId.IsSet() {
		return true
	}

	return false
}

// SetTenantEnrolmentId gets a reference to the given NullableString and assigns it to the TenantEnrolmentId field.
func (o *DealUnitFlowCreateDto) SetTenantEnrolmentId(v string) {
	o.TenantEnrolmentId.Set(&v)
}
// SetTenantEnrolmentIdNil sets the value for TenantEnrolmentId to be an explicit nil
func (o *DealUnitFlowCreateDto) SetTenantEnrolmentIdNil() {
	o.TenantEnrolmentId.Set(nil)
}

// UnsetTenantEnrolmentId ensures that no value is present for TenantEnrolmentId, not even an explicit nil
func (o *DealUnitFlowCreateDto) UnsetTenantEnrolmentId() {
	o.TenantEnrolmentId.Unset()
}

func (o DealUnitFlowCreateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DealUnitFlowCreateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.ParentBusinessProcessId.IsSet() {
		toSerialize["parentBusinessProcessId"] = o.ParentBusinessProcessId.Get()
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.TenantEnrolmentId.IsSet() {
		toSerialize["tenantEnrolmentId"] = o.TenantEnrolmentId.Get()
	}
	return toSerialize, nil
}

type NullableDealUnitFlowCreateDto struct {
	value *DealUnitFlowCreateDto
	isSet bool
}

func (v NullableDealUnitFlowCreateDto) Get() *DealUnitFlowCreateDto {
	return v.value
}

func (v *NullableDealUnitFlowCreateDto) Set(val *DealUnitFlowCreateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableDealUnitFlowCreateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableDealUnitFlowCreateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDealUnitFlowCreateDto(val *DealUnitFlowCreateDto) *NullableDealUnitFlowCreateDto {
	return &NullableDealUnitFlowCreateDto{value: val, isSet: true}
}

func (v NullableDealUnitFlowCreateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDealUnitFlowCreateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


