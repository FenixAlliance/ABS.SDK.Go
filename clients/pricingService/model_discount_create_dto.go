/*
PricingService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.1.4089
Contact: support@fenix-alliance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DiscountCreateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiscountCreateDto{}

// DiscountCreateDto struct for DiscountCreateDto
type DiscountCreateDto struct {
	Id *string `json:"id,omitempty"`
	Timestamp *time.Time `json:"timestamp,omitempty"`
	Description NullableString `json:"description,omitempty"`
	BeginQuantity *float64 `json:"beginQuantity,omitempty"`
	EndQuantity *float64 `json:"endQuantity,omitempty"`
	Percent *float64 `json:"percent,omitempty"`
	Value *float64 `json:"value,omitempty"`
	TenantId NullableString `json:"tenantId,omitempty"`
	EnrolmentId NullableString `json:"enrolmentId,omitempty"`
	DiscountListId NullableString `json:"discountListId,omitempty"`
}

// NewDiscountCreateDto instantiates a new DiscountCreateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscountCreateDto() *DiscountCreateDto {
	this := DiscountCreateDto{}
	return &this
}

// NewDiscountCreateDtoWithDefaults instantiates a new DiscountCreateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscountCreateDtoWithDefaults() *DiscountCreateDto {
	this := DiscountCreateDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DiscountCreateDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscountCreateDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DiscountCreateDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DiscountCreateDto) SetId(v string) {
	o.Id = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *DiscountCreateDto) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscountCreateDto) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *DiscountCreateDto) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *DiscountCreateDto) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DiscountCreateDto) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DiscountCreateDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *DiscountCreateDto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *DiscountCreateDto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *DiscountCreateDto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *DiscountCreateDto) UnsetDescription() {
	o.Description.Unset()
}

// GetBeginQuantity returns the BeginQuantity field value if set, zero value otherwise.
func (o *DiscountCreateDto) GetBeginQuantity() float64 {
	if o == nil || IsNil(o.BeginQuantity) {
		var ret float64
		return ret
	}
	return *o.BeginQuantity
}

// GetBeginQuantityOk returns a tuple with the BeginQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscountCreateDto) GetBeginQuantityOk() (*float64, bool) {
	if o == nil || IsNil(o.BeginQuantity) {
		return nil, false
	}
	return o.BeginQuantity, true
}

// HasBeginQuantity returns a boolean if a field has been set.
func (o *DiscountCreateDto) HasBeginQuantity() bool {
	if o != nil && !IsNil(o.BeginQuantity) {
		return true
	}

	return false
}

// SetBeginQuantity gets a reference to the given float64 and assigns it to the BeginQuantity field.
func (o *DiscountCreateDto) SetBeginQuantity(v float64) {
	o.BeginQuantity = &v
}

// GetEndQuantity returns the EndQuantity field value if set, zero value otherwise.
func (o *DiscountCreateDto) GetEndQuantity() float64 {
	if o == nil || IsNil(o.EndQuantity) {
		var ret float64
		return ret
	}
	return *o.EndQuantity
}

// GetEndQuantityOk returns a tuple with the EndQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscountCreateDto) GetEndQuantityOk() (*float64, bool) {
	if o == nil || IsNil(o.EndQuantity) {
		return nil, false
	}
	return o.EndQuantity, true
}

// HasEndQuantity returns a boolean if a field has been set.
func (o *DiscountCreateDto) HasEndQuantity() bool {
	if o != nil && !IsNil(o.EndQuantity) {
		return true
	}

	return false
}

// SetEndQuantity gets a reference to the given float64 and assigns it to the EndQuantity field.
func (o *DiscountCreateDto) SetEndQuantity(v float64) {
	o.EndQuantity = &v
}

// GetPercent returns the Percent field value if set, zero value otherwise.
func (o *DiscountCreateDto) GetPercent() float64 {
	if o == nil || IsNil(o.Percent) {
		var ret float64
		return ret
	}
	return *o.Percent
}

// GetPercentOk returns a tuple with the Percent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscountCreateDto) GetPercentOk() (*float64, bool) {
	if o == nil || IsNil(o.Percent) {
		return nil, false
	}
	return o.Percent, true
}

// HasPercent returns a boolean if a field has been set.
func (o *DiscountCreateDto) HasPercent() bool {
	if o != nil && !IsNil(o.Percent) {
		return true
	}

	return false
}

// SetPercent gets a reference to the given float64 and assigns it to the Percent field.
func (o *DiscountCreateDto) SetPercent(v float64) {
	o.Percent = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *DiscountCreateDto) GetValue() float64 {
	if o == nil || IsNil(o.Value) {
		var ret float64
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscountCreateDto) GetValueOk() (*float64, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *DiscountCreateDto) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float64 and assigns it to the Value field.
func (o *DiscountCreateDto) SetValue(v float64) {
	o.Value = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DiscountCreateDto) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DiscountCreateDto) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *DiscountCreateDto) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *DiscountCreateDto) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *DiscountCreateDto) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *DiscountCreateDto) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetEnrolmentId returns the EnrolmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DiscountCreateDto) GetEnrolmentId() string {
	if o == nil || IsNil(o.EnrolmentId.Get()) {
		var ret string
		return ret
	}
	return *o.EnrolmentId.Get()
}

// GetEnrolmentIdOk returns a tuple with the EnrolmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DiscountCreateDto) GetEnrolmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnrolmentId.Get(), o.EnrolmentId.IsSet()
}

// HasEnrolmentId returns a boolean if a field has been set.
func (o *DiscountCreateDto) HasEnrolmentId() bool {
	if o != nil && o.EnrolmentId.IsSet() {
		return true
	}

	return false
}

// SetEnrolmentId gets a reference to the given NullableString and assigns it to the EnrolmentId field.
func (o *DiscountCreateDto) SetEnrolmentId(v string) {
	o.EnrolmentId.Set(&v)
}
// SetEnrolmentIdNil sets the value for EnrolmentId to be an explicit nil
func (o *DiscountCreateDto) SetEnrolmentIdNil() {
	o.EnrolmentId.Set(nil)
}

// UnsetEnrolmentId ensures that no value is present for EnrolmentId, not even an explicit nil
func (o *DiscountCreateDto) UnsetEnrolmentId() {
	o.EnrolmentId.Unset()
}

// GetDiscountListId returns the DiscountListId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DiscountCreateDto) GetDiscountListId() string {
	if o == nil || IsNil(o.DiscountListId.Get()) {
		var ret string
		return ret
	}
	return *o.DiscountListId.Get()
}

// GetDiscountListIdOk returns a tuple with the DiscountListId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DiscountCreateDto) GetDiscountListIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiscountListId.Get(), o.DiscountListId.IsSet()
}

// HasDiscountListId returns a boolean if a field has been set.
func (o *DiscountCreateDto) HasDiscountListId() bool {
	if o != nil && o.DiscountListId.IsSet() {
		return true
	}

	return false
}

// SetDiscountListId gets a reference to the given NullableString and assigns it to the DiscountListId field.
func (o *DiscountCreateDto) SetDiscountListId(v string) {
	o.DiscountListId.Set(&v)
}
// SetDiscountListIdNil sets the value for DiscountListId to be an explicit nil
func (o *DiscountCreateDto) SetDiscountListIdNil() {
	o.DiscountListId.Set(nil)
}

// UnsetDiscountListId ensures that no value is present for DiscountListId, not even an explicit nil
func (o *DiscountCreateDto) UnsetDiscountListId() {
	o.DiscountListId.Unset()
}

func (o DiscountCreateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiscountCreateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.BeginQuantity) {
		toSerialize["beginQuantity"] = o.BeginQuantity
	}
	if !IsNil(o.EndQuantity) {
		toSerialize["endQuantity"] = o.EndQuantity
	}
	if !IsNil(o.Percent) {
		toSerialize["percent"] = o.Percent
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.EnrolmentId.IsSet() {
		toSerialize["enrolmentId"] = o.EnrolmentId.Get()
	}
	if o.DiscountListId.IsSet() {
		toSerialize["discountListId"] = o.DiscountListId.Get()
	}
	return toSerialize, nil
}

type NullableDiscountCreateDto struct {
	value *DiscountCreateDto
	isSet bool
}

func (v NullableDiscountCreateDto) Get() *DiscountCreateDto {
	return v.value
}

func (v *NullableDiscountCreateDto) Set(val *DiscountCreateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscountCreateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscountCreateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscountCreateDto(val *DiscountCreateDto) *NullableDiscountCreateDto {
	return &NullableDiscountCreateDto{value: val, isSet: true}
}

func (v NullableDiscountCreateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscountCreateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


